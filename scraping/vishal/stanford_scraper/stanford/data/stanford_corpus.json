{
    "Aaron Sidford": {
        "corpus": {
            "DBLP": "https://dblp.uni-trier.de/pers/hd/s/Sidford:Aaron",
            "Google Scholar": "https://scholar.google.com/citations?user=SWqd2rgAAAAJ&hl=en&oi=ao",
            "domain": "db,ml",
            "home": "http://www.aaronsidford.com"
        },
        "courses": [
            {
                "courseId": "CME 305:",
                "courseLevel": "Graduate",
                "courseMeta": "Topics: Basic Algebraic Graph Theory, Matroids and Minimum Spanning Trees, Submodularity and Maximum Flow, NP-Hardness, Approximation Algorithms, Randomized Algorithms, The Probabilistic Method, and Spectral Sparsification using Effective Resistances. Topics will be illustrated with applications from Distributed Computing, Machine Learning, and large-scale Optimization. Prerequisites: CS 261 is highly recommended, although not required.",
                "courseTitle": "Discrete Mathematics and Algorithms (MS&E 316)",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3",
                "semester": "Winter"
            },
            {
                "courseId": "CME 305:",
                "courseLevel": "Graduate",
                "courseMeta": "Topics: Basic Algebraic Graph Theory, Matroids and Minimum Spanning Trees, Submodularity and Maximum Flow, NP-Hardness, Approximation Algorithms, Randomized Algorithms, The Probabilistic Method, and Spectral Sparsification using Effective Resistances. Topics will be illustrated with applications from Distributed Computing, Machine Learning, and large-scale Optimization. Prerequisites: CS 261 is highly recommended, although not required.",
                "courseTitle": "Discrete Mathematics and Algorithms (MS&E 316)",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3",
                "semester": "Winter"
            },
            {
                "courseId": "CME 305:",
                "courseLevel": "Graduate",
                "courseMeta": "Topics: Basic Algebraic Graph Theory, Matroids and Minimum Spanning Trees, Submodularity and Maximum Flow, NP-Hardness, Approximation Algorithms, Randomized Algorithms, The Probabilistic Method, and Spectral Sparsification using Effective Resistances. Topics will be illustrated with applications from Distributed Computing, Machine Learning, and large-scale Optimization. Prerequisites: CS 261 is highly recommended, although not required.",
                "courseTitle": "Discrete Mathematics and Algorithms (MS&E 316)",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3",
                "semester": "Winter"
            },
            {
                "courseId": "CME 305:",
                "courseLevel": "Graduate",
                "courseMeta": "Topics: Basic Algebraic Graph Theory, Matroids and Minimum Spanning Trees, Submodularity and Maximum Flow, NP-Hardness, Approximation Algorithms, Randomized Algorithms, The Probabilistic Method, and Spectral Sparsification using Effective Resistances. Topics will be illustrated with applications from Distributed Computing, Machine Learning, and large-scale Optimization. Prerequisites: CS 261 is highly recommended, although not required.",
                "courseTitle": "Discrete Mathematics and Algorithms (MS&E 316)",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3",
                "semester": "Winter"
            },
            {
                "courseId": "CME 305:",
                "courseLevel": "Graduate",
                "courseMeta": "Topics: Basic Algebraic Graph Theory, Matroids and Minimum Spanning Trees, Submodularity and Maximum Flow, NP-Hardness, Approximation Algorithms, Randomized Algorithms, The Probabilistic Method, and Spectral Sparsification using Effective Resistances. Topics will be illustrated with applications from Distributed Computing, Machine Learning, and large-scale Optimization. Prerequisites: CS 261 is highly recommended, although not required.",
                "courseTitle": "Discrete Mathematics and Algorithms (MS&E 316)",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3",
                "semester": "Winter"
            },
            {
                "courseId": "CME 305:",
                "courseLevel": "Graduate",
                "courseMeta": "Topics: Basic Algebraic Graph Theory, Matroids and Minimum Spanning Trees, Submodularity and Maximum Flow, NP-Hardness, Approximation Algorithms, Randomized Algorithms, The Probabilistic Method, and Spectral Sparsification using Effective Resistances. Topics will be illustrated with applications from Distributed Computing, Machine Learning, and large-scale Optimization. Prerequisites: CS 261 is highly recommended, although not required.",
                "courseTitle": "Discrete Mathematics and Algorithms (MS&E 316)",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3",
                "semester": "Winter"
            },
            {
                "courseId": "CME 305:",
                "courseLevel": "Graduate",
                "courseMeta": "Topics: Basic Algebraic Graph Theory, Matroids and Minimum Spanning Trees, Submodularity and Maximum Flow, NP-Hardness, Approximation Algorithms, Randomized Algorithms, The Probabilistic Method, and Spectral Sparsification using Effective Resistances. Topics will be illustrated with applications from Distributed Computing, Machine Learning, and large-scale Optimization. Prerequisites: CS 261 is highly recommended, although not required.",
                "courseTitle": "Discrete Mathematics and Algorithms (MS&E 316)",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3",
                "semester": "Winter"
            },
            {
                "courseId": "CME 305:",
                "courseLevel": "Graduate",
                "courseMeta": "Topics: Basic Algebraic Graph Theory, Matroids and Minimum Spanning Trees, Submodularity and Maximum Flow, NP-Hardness, Approximation Algorithms, Randomized Algorithms, The Probabilistic Method, and Spectral Sparsification using Effective Resistances. Topics will be illustrated with applications from Distributed Computing, Machine Learning, and large-scale Optimization. Prerequisites: CS 261 is highly recommended, although not required.",
                "courseTitle": "Discrete Mathematics and Algorithms (MS&E 316)",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3",
                "semester": "Winter"
            },
            {
                "courseId": "CME 305:",
                "courseLevel": "Graduate",
                "courseMeta": "Topics: Basic Algebraic Graph Theory, Matroids and Minimum Spanning Trees, Submodularity and Maximum Flow, NP-Hardness, Approximation Algorithms, Randomized Algorithms, The Probabilistic Method, and Spectral Sparsification using Effective Resistances. Topics will be illustrated with applications from Distributed Computing, Machine Learning, and large-scale Optimization. Prerequisites: CS 261 is highly recommended, although not required.",
                "courseTitle": "Discrete Mathematics and Algorithms (MS&E 316)",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3",
                "semester": "Winter"
            },
            {
                "courseId": "CME 305:",
                "courseLevel": "Graduate",
                "courseMeta": "Topics: Basic Algebraic Graph Theory, Matroids and Minimum Spanning Trees, Submodularity and Maximum Flow, NP-Hardness, Approximation Algorithms, Randomized Algorithms, The Probabilistic Method, and Spectral Sparsification using Effective Resistances. Topics will be illustrated with applications from Distributed Computing, Machine Learning, and large-scale Optimization. Prerequisites: CS 261 is highly recommended, although not required.",
                "courseTitle": "Discrete Mathematics and Algorithms (MS&E 316)",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3",
                "semester": "Winter"
            },
            {
                "courseId": "CME 305:",
                "courseLevel": "Graduate",
                "courseMeta": "Topics: Basic Algebraic Graph Theory, Matroids and Minimum Spanning Trees, Submodularity and Maximum Flow, NP-Hardness, Approximation Algorithms, Randomized Algorithms, The Probabilistic Method, and Spectral Sparsification using Effective Resistances. Topics will be illustrated with applications from Distributed Computing, Machine Learning, and large-scale Optimization. Prerequisites: CS 261 is highly recommended, although not required.",
                "courseTitle": "Discrete Mathematics and Algorithms (MS&E 316)",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3",
                "semester": "Winter"
            },
            {
                "courseId": "CME 305:",
                "courseLevel": "Graduate",
                "courseMeta": "Topics: Basic Algebraic Graph Theory, Matroids and Minimum Spanning Trees, Submodularity and Maximum Flow, NP-Hardness, Approximation Algorithms, Randomized Algorithms, The Probabilistic Method, and Spectral Sparsification using Effective Resistances. Topics will be illustrated with applications from Distributed Computing, Machine Learning, and large-scale Optimization. Prerequisites: CS 261 is highly recommended, although not required.",
                "courseTitle": "Discrete Mathematics and Algorithms (MS&E 316)",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3",
                "semester": "Winter"
            },
            {
                "courseId": "CME 305:",
                "courseLevel": "Graduate",
                "courseMeta": "Topics: Basic Algebraic Graph Theory, Matroids and Minimum Spanning Trees, Submodularity and Maximum Flow, NP-Hardness, Approximation Algorithms, Randomized Algorithms, The Probabilistic Method, and Spectral Sparsification using Effective Resistances. Topics will be illustrated with applications from Distributed Computing, Machine Learning, and large-scale Optimization. Prerequisites: CS 261 is highly recommended, although not required.",
                "courseTitle": "Discrete Mathematics and Algorithms (MS&E 316)",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3",
                "semester": "Winter"
            },
            {
                "courseId": "CME 305:",
                "courseLevel": "Graduate",
                "courseMeta": "Topics: Basic Algebraic Graph Theory, Matroids and Minimum Spanning Trees, Submodularity and Maximum Flow, NP-Hardness, Approximation Algorithms, Randomized Algorithms, The Probabilistic Method, and Spectral Sparsification using Effective Resistances. Topics will be illustrated with applications from Distributed Computing, Machine Learning, and large-scale Optimization. Prerequisites: CS 261 is highly recommended, although not required.",
                "courseTitle": "Discrete Mathematics and Algorithms (MS&E 316)",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3",
                "semester": "Winter"
            },
            {
                "courseId": "CME 305:",
                "courseLevel": "Graduate",
                "courseMeta": "Topics: Basic Algebraic Graph Theory, Matroids and Minimum Spanning Trees, Submodularity and Maximum Flow, NP-Hardness, Approximation Algorithms, Randomized Algorithms, The Probabilistic Method, and Spectral Sparsification using Effective Resistances. Topics will be illustrated with applications from Distributed Computing, Machine Learning, and large-scale Optimization. Prerequisites: CS 261 is highly recommended, although not required.",
                "courseTitle": "Discrete Mathematics and Algorithms (MS&E 316)",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3",
                "semester": "Winter"
            }
        ]
    },
    "Alex Aiken": {
        "corpus": {
            "DBLP": "https://dblp.uni-trier.de/pers/hd/a/Aiken:Alexander",
            "Google Scholar": "https://scholar.google.com/citations?user=3vKjkoQAAAAJ&hl=en&oi=ao",
            "domain": "",
            "home": "https://theory.stanford.edu/~aiken"
        },
        "courses": [
            {
                "courseId": "CS 315B:",
                "courseLevel": "Graduate",
                "courseMeta": "Advanced topics and new paradigms in parallel computing including parallel algorithms, programming languages, runtime environments, library debugging/tuning tools, and scalable architectures. Research project. Prerequisite: consent of instructor.",
                "courseTitle": "Parallel Computing Research Project",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3",
                "semester": "Fall"
            },
            {
                "courseId": "CS 315B:",
                "courseLevel": "Graduate",
                "courseMeta": "Advanced topics and new paradigms in parallel computing including parallel algorithms, programming languages, runtime environments, library debugging/tuning tools, and scalable architectures. Research project. Prerequisite: consent of instructor.",
                "courseTitle": "Parallel Computing Research Project",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3",
                "semester": "Fall"
            },
            {
                "courseId": "CS 315B:",
                "courseLevel": "Graduate",
                "courseMeta": "Advanced topics and new paradigms in parallel computing including parallel algorithms, programming languages, runtime environments, library debugging/tuning tools, and scalable architectures. Research project. Prerequisite: consent of instructor.",
                "courseTitle": "Parallel Computing Research Project",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3",
                "semester": "Fall"
            },
            {
                "courseId": "CS 315B:",
                "courseLevel": "Graduate",
                "courseMeta": "Advanced topics and new paradigms in parallel computing including parallel algorithms, programming languages, runtime environments, library debugging/tuning tools, and scalable architectures. Research project. Prerequisite: consent of instructor.",
                "courseTitle": "Parallel Computing Research Project",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3",
                "semester": "Fall"
            },
            {
                "courseId": "CS 315B:",
                "courseLevel": "Graduate",
                "courseMeta": "Advanced topics and new paradigms in parallel computing including parallel algorithms, programming languages, runtime environments, library debugging/tuning tools, and scalable architectures. Research project. Prerequisite: consent of instructor.",
                "courseTitle": "Parallel Computing Research Project",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3",
                "semester": "Fall"
            },
            {
                "courseId": "CS 315B:",
                "courseLevel": "Graduate",
                "courseMeta": "Advanced topics and new paradigms in parallel computing including parallel algorithms, programming languages, runtime environments, library debugging/tuning tools, and scalable architectures. Research project. Prerequisite: consent of instructor.",
                "courseTitle": "Parallel Computing Research Project",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3",
                "semester": "Fall"
            },
            {
                "courseId": "CS 315B:",
                "courseLevel": "Graduate",
                "courseMeta": "Advanced topics and new paradigms in parallel computing including parallel algorithms, programming languages, runtime environments, library debugging/tuning tools, and scalable architectures. Research project. Prerequisite: consent of instructor.",
                "courseTitle": "Parallel Computing Research Project",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3",
                "semester": "Fall"
            },
            {
                "courseId": "CS 315B:",
                "courseLevel": "Graduate",
                "courseMeta": "Advanced topics and new paradigms in parallel computing including parallel algorithms, programming languages, runtime environments, library debugging/tuning tools, and scalable architectures. Research project. Prerequisite: consent of instructor.",
                "courseTitle": "Parallel Computing Research Project",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3",
                "semester": "Fall"
            },
            {
                "courseId": "CS 315B:",
                "courseLevel": "Graduate",
                "courseMeta": "Advanced topics and new paradigms in parallel computing including parallel algorithms, programming languages, runtime environments, library debugging/tuning tools, and scalable architectures. Research project. Prerequisite: consent of instructor.",
                "courseTitle": "Parallel Computing Research Project",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3",
                "semester": "Fall"
            },
            {
                "courseId": "CS 315B:",
                "courseLevel": "Graduate",
                "courseMeta": "Advanced topics and new paradigms in parallel computing including parallel algorithms, programming languages, runtime environments, library debugging/tuning tools, and scalable architectures. Research project. Prerequisite: consent of instructor.",
                "courseTitle": "Parallel Computing Research Project",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3",
                "semester": "Fall"
            },
            {
                "courseId": "CS 315B:",
                "courseLevel": "Graduate",
                "courseMeta": "Advanced topics and new paradigms in parallel computing including parallel algorithms, programming languages, runtime environments, library debugging/tuning tools, and scalable architectures. Research project. Prerequisite: consent of instructor.",
                "courseTitle": "Parallel Computing Research Project",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3",
                "semester": "Fall"
            },
            {
                "courseId": "CS 315B:",
                "courseLevel": "Graduate",
                "courseMeta": "Advanced topics and new paradigms in parallel computing including parallel algorithms, programming languages, runtime environments, library debugging/tuning tools, and scalable architectures. Research project. Prerequisite: consent of instructor.",
                "courseTitle": "Parallel Computing Research Project",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3",
                "semester": "Fall"
            },
            {
                "courseId": "CS 315B:",
                "courseLevel": "Graduate",
                "courseMeta": "Advanced topics and new paradigms in parallel computing including parallel algorithms, programming languages, runtime environments, library debugging/tuning tools, and scalable architectures. Research project. Prerequisite: consent of instructor.",
                "courseTitle": "Parallel Computing Research Project",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3",
                "semester": "Fall"
            },
            {
                "courseId": "CS 315B:",
                "courseLevel": "Graduate",
                "courseMeta": "Advanced topics and new paradigms in parallel computing including parallel algorithms, programming languages, runtime environments, library debugging/tuning tools, and scalable architectures. Research project. Prerequisite: consent of instructor.",
                "courseTitle": "Parallel Computing Research Project",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3",
                "semester": "Fall"
            },
            {
                "courseId": "CS 315B:",
                "courseLevel": "Graduate",
                "courseMeta": "Advanced topics and new paradigms in parallel computing including parallel algorithms, programming languages, runtime environments, library debugging/tuning tools, and scalable architectures. Research project. Prerequisite: consent of instructor.",
                "courseTitle": "Parallel Computing Research Project",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3",
                "semester": "Fall"
            },
            {
                "courseId": "CS 315B:",
                "courseLevel": "Graduate",
                "courseMeta": "Advanced topics and new paradigms in parallel computing including parallel algorithms, programming languages, runtime environments, library debugging/tuning tools, and scalable architectures. Research project. Prerequisite: consent of instructor.",
                "courseTitle": "Parallel Computing Research Project",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3",
                "semester": "Fall"
            },
            {
                "courseId": "CS 315B:",
                "courseLevel": "Graduate",
                "courseMeta": "Advanced topics and new paradigms in parallel computing including parallel algorithms, programming languages, runtime environments, library debugging/tuning tools, and scalable architectures. Research project. Prerequisite: consent of instructor.",
                "courseTitle": "Parallel Computing Research Project",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3",
                "semester": "Fall"
            },
            {
                "courseId": "CS 315B:",
                "courseLevel": "Graduate",
                "courseMeta": "Advanced topics and new paradigms in parallel computing including parallel algorithms, programming languages, runtime environments, library debugging/tuning tools, and scalable architectures. Research project. Prerequisite: consent of instructor.",
                "courseTitle": "Parallel Computing Research Project",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3",
                "semester": "Fall"
            }
        ]
    },
    "Anshul Kundaje": {
        "corpus": {
            "DBLP": "https://dblp.uni-trier.de/pers/hd/k/Kundaje:Anshul",
            "Google Scholar": "https://scholar.google.com/citations?user=T2vp1pgAAAAJ&hl=en&oi=ao",
            "domain": "hci",
            "home": "https://med.stanford.edu/profiles/anshul-kundaje"
        },
        "courses": [
            {
                "courseId": "BIODS 237:",
                "courseLevel": "Graduate",
                "courseMeta": "Recent breakthroughs in high-throughput genomic and biomedical data are transforming biological sciences into \"big data\" disciplines. In parallel, progress in deep neural networks are revolutionizing fields such as image recognition, natural language processing and, more broadly, AI. This course explores the exciting intersection between these two advances. The course will start with an introduction to deep learning and overview the relevant background in genomics and high-throughput biotechnology, focusing on the available data and their relevance. It will then cover the ongoing developments in deep learning (supervised, unsupervised and generative models) with the focus on the applications of these methods to biomedical data, which are beginning to produced dramatic results. In addition to predictive modeling, the course emphasizes how to visualize and extract interpretable, biological insights from such models. Recent papers from the literature will be presented and discussed. Students will be introduced to and work with popular deep learning software frameworks. Students will work in groups on a final class project using real world datasets. Prerequisites: College calculus, linear algebra, basic probability and statistics such as CS109, and basic machine learning such as CS229. No prior knowledge of genomics is necessary.",
                "courseTitle": "Deep Learning in Genomics and Biomedicine (BIOMEDIN 273B, CS 273B, GENE 236)",
                "gradingMethod": "Medical Option (Med-Ltr-CR/NC)",
                "numberOfUnits": "3",
                "semester": "Fall"
            },
            {
                "courseId": "BIODS 237:",
                "courseLevel": "Graduate",
                "courseMeta": "Recent breakthroughs in high-throughput genomic and biomedical data are transforming biological sciences into \"big data\" disciplines. In parallel, progress in deep neural networks are revolutionizing fields such as image recognition, natural language processing and, more broadly, AI. This course explores the exciting intersection between these two advances. The course will start with an introduction to deep learning and overview the relevant background in genomics and high-throughput biotechnology, focusing on the available data and their relevance. It will then cover the ongoing developments in deep learning (supervised, unsupervised and generative models) with the focus on the applications of these methods to biomedical data, which are beginning to produced dramatic results. In addition to predictive modeling, the course emphasizes how to visualize and extract interpretable, biological insights from such models. Recent papers from the literature will be presented and discussed. Students will be introduced to and work with popular deep learning software frameworks. Students will work in groups on a final class project using real world datasets. Prerequisites: College calculus, linear algebra, basic probability and statistics such as CS109, and basic machine learning such as CS229. No prior knowledge of genomics is necessary.",
                "courseTitle": "Deep Learning in Genomics and Biomedicine (BIOMEDIN 273B, CS 273B, GENE 236)",
                "gradingMethod": "Medical Option (Med-Ltr-CR/NC)",
                "numberOfUnits": "3",
                "semester": "Fall"
            },
            {
                "courseId": "BIODS 237:",
                "courseLevel": "Graduate",
                "courseMeta": "Recent breakthroughs in high-throughput genomic and biomedical data are transforming biological sciences into \"big data\" disciplines. In parallel, progress in deep neural networks are revolutionizing fields such as image recognition, natural language processing and, more broadly, AI. This course explores the exciting intersection between these two advances. The course will start with an introduction to deep learning and overview the relevant background in genomics and high-throughput biotechnology, focusing on the available data and their relevance. It will then cover the ongoing developments in deep learning (supervised, unsupervised and generative models) with the focus on the applications of these methods to biomedical data, which are beginning to produced dramatic results. In addition to predictive modeling, the course emphasizes how to visualize and extract interpretable, biological insights from such models. Recent papers from the literature will be presented and discussed. Students will be introduced to and work with popular deep learning software frameworks. Students will work in groups on a final class project using real world datasets. Prerequisites: College calculus, linear algebra, basic probability and statistics such as CS109, and basic machine learning such as CS229. No prior knowledge of genomics is necessary.",
                "courseTitle": "Deep Learning in Genomics and Biomedicine (BIOMEDIN 273B, CS 273B, GENE 236)",
                "gradingMethod": "Medical Option (Med-Ltr-CR/NC)",
                "numberOfUnits": "3",
                "semester": "Fall"
            },
            {
                "courseId": "BIODS 237:",
                "courseLevel": "Graduate",
                "courseMeta": "Recent breakthroughs in high-throughput genomic and biomedical data are transforming biological sciences into \"big data\" disciplines. In parallel, progress in deep neural networks are revolutionizing fields such as image recognition, natural language processing and, more broadly, AI. This course explores the exciting intersection between these two advances. The course will start with an introduction to deep learning and overview the relevant background in genomics and high-throughput biotechnology, focusing on the available data and their relevance. It will then cover the ongoing developments in deep learning (supervised, unsupervised and generative models) with the focus on the applications of these methods to biomedical data, which are beginning to produced dramatic results. In addition to predictive modeling, the course emphasizes how to visualize and extract interpretable, biological insights from such models. Recent papers from the literature will be presented and discussed. Students will be introduced to and work with popular deep learning software frameworks. Students will work in groups on a final class project using real world datasets. Prerequisites: College calculus, linear algebra, basic probability and statistics such as CS109, and basic machine learning such as CS229. No prior knowledge of genomics is necessary.",
                "courseTitle": "Deep Learning in Genomics and Biomedicine (BIOMEDIN 273B, CS 273B, GENE 236)",
                "gradingMethod": "Medical Option (Med-Ltr-CR/NC)",
                "numberOfUnits": "3",
                "semester": "Fall"
            },
            {
                "courseId": "BIODS 237:",
                "courseLevel": "Graduate",
                "courseMeta": "Recent breakthroughs in high-throughput genomic and biomedical data are transforming biological sciences into \"big data\" disciplines. In parallel, progress in deep neural networks are revolutionizing fields such as image recognition, natural language processing and, more broadly, AI. This course explores the exciting intersection between these two advances. The course will start with an introduction to deep learning and overview the relevant background in genomics and high-throughput biotechnology, focusing on the available data and their relevance. It will then cover the ongoing developments in deep learning (supervised, unsupervised and generative models) with the focus on the applications of these methods to biomedical data, which are beginning to produced dramatic results. In addition to predictive modeling, the course emphasizes how to visualize and extract interpretable, biological insights from such models. Recent papers from the literature will be presented and discussed. Students will be introduced to and work with popular deep learning software frameworks. Students will work in groups on a final class project using real world datasets. Prerequisites: College calculus, linear algebra, basic probability and statistics such as CS109, and basic machine learning such as CS229. No prior knowledge of genomics is necessary.",
                "courseTitle": "Deep Learning in Genomics and Biomedicine (BIOMEDIN 273B, CS 273B, GENE 236)",
                "gradingMethod": "Medical Option (Med-Ltr-CR/NC)",
                "numberOfUnits": "3",
                "semester": "Fall"
            },
            {
                "courseId": "BIODS 237:",
                "courseLevel": "Graduate",
                "courseMeta": "Recent breakthroughs in high-throughput genomic and biomedical data are transforming biological sciences into \"big data\" disciplines. In parallel, progress in deep neural networks are revolutionizing fields such as image recognition, natural language processing and, more broadly, AI. This course explores the exciting intersection between these two advances. The course will start with an introduction to deep learning and overview the relevant background in genomics and high-throughput biotechnology, focusing on the available data and their relevance. It will then cover the ongoing developments in deep learning (supervised, unsupervised and generative models) with the focus on the applications of these methods to biomedical data, which are beginning to produced dramatic results. In addition to predictive modeling, the course emphasizes how to visualize and extract interpretable, biological insights from such models. Recent papers from the literature will be presented and discussed. Students will be introduced to and work with popular deep learning software frameworks. Students will work in groups on a final class project using real world datasets. Prerequisites: College calculus, linear algebra, basic probability and statistics such as CS109, and basic machine learning such as CS229. No prior knowledge of genomics is necessary.",
                "courseTitle": "Deep Learning in Genomics and Biomedicine (BIOMEDIN 273B, CS 273B, GENE 236)",
                "gradingMethod": "Medical Option (Med-Ltr-CR/NC)",
                "numberOfUnits": "3",
                "semester": "Fall"
            },
            {
                "courseId": "BIODS 237:",
                "courseLevel": "Graduate",
                "courseMeta": "Recent breakthroughs in high-throughput genomic and biomedical data are transforming biological sciences into \"big data\" disciplines. In parallel, progress in deep neural networks are revolutionizing fields such as image recognition, natural language processing and, more broadly, AI. This course explores the exciting intersection between these two advances. The course will start with an introduction to deep learning and overview the relevant background in genomics and high-throughput biotechnology, focusing on the available data and their relevance. It will then cover the ongoing developments in deep learning (supervised, unsupervised and generative models) with the focus on the applications of these methods to biomedical data, which are beginning to produced dramatic results. In addition to predictive modeling, the course emphasizes how to visualize and extract interpretable, biological insights from such models. Recent papers from the literature will be presented and discussed. Students will be introduced to and work with popular deep learning software frameworks. Students will work in groups on a final class project using real world datasets. Prerequisites: College calculus, linear algebra, basic probability and statistics such as CS109, and basic machine learning such as CS229. No prior knowledge of genomics is necessary.",
                "courseTitle": "Deep Learning in Genomics and Biomedicine (BIOMEDIN 273B, CS 273B, GENE 236)",
                "gradingMethod": "Medical Option (Med-Ltr-CR/NC)",
                "numberOfUnits": "3",
                "semester": "Fall"
            },
            {
                "courseId": "BIODS 237:",
                "courseLevel": "Graduate",
                "courseMeta": "Recent breakthroughs in high-throughput genomic and biomedical data are transforming biological sciences into \"big data\" disciplines. In parallel, progress in deep neural networks are revolutionizing fields such as image recognition, natural language processing and, more broadly, AI. This course explores the exciting intersection between these two advances. The course will start with an introduction to deep learning and overview the relevant background in genomics and high-throughput biotechnology, focusing on the available data and their relevance. It will then cover the ongoing developments in deep learning (supervised, unsupervised and generative models) with the focus on the applications of these methods to biomedical data, which are beginning to produced dramatic results. In addition to predictive modeling, the course emphasizes how to visualize and extract interpretable, biological insights from such models. Recent papers from the literature will be presented and discussed. Students will be introduced to and work with popular deep learning software frameworks. Students will work in groups on a final class project using real world datasets. Prerequisites: College calculus, linear algebra, basic probability and statistics such as CS109, and basic machine learning such as CS229. No prior knowledge of genomics is necessary.",
                "courseTitle": "Deep Learning in Genomics and Biomedicine (BIOMEDIN 273B, CS 273B, GENE 236)",
                "gradingMethod": "Medical Option (Med-Ltr-CR/NC)",
                "numberOfUnits": "3",
                "semester": "Fall"
            },
            {
                "courseId": "BIODS 237:",
                "courseLevel": "Graduate",
                "courseMeta": "Recent breakthroughs in high-throughput genomic and biomedical data are transforming biological sciences into \"big data\" disciplines. In parallel, progress in deep neural networks are revolutionizing fields such as image recognition, natural language processing and, more broadly, AI. This course explores the exciting intersection between these two advances. The course will start with an introduction to deep learning and overview the relevant background in genomics and high-throughput biotechnology, focusing on the available data and their relevance. It will then cover the ongoing developments in deep learning (supervised, unsupervised and generative models) with the focus on the applications of these methods to biomedical data, which are beginning to produced dramatic results. In addition to predictive modeling, the course emphasizes how to visualize and extract interpretable, biological insights from such models. Recent papers from the literature will be presented and discussed. Students will be introduced to and work with popular deep learning software frameworks. Students will work in groups on a final class project using real world datasets. Prerequisites: College calculus, linear algebra, basic probability and statistics such as CS109, and basic machine learning such as CS229. No prior knowledge of genomics is necessary.",
                "courseTitle": "Deep Learning in Genomics and Biomedicine (BIOMEDIN 273B, CS 273B, GENE 236)",
                "gradingMethod": "Medical Option (Med-Ltr-CR/NC)",
                "numberOfUnits": "3",
                "semester": "Fall"
            },
            {
                "courseId": "BIODS 237:",
                "courseLevel": "Graduate",
                "courseMeta": "Recent breakthroughs in high-throughput genomic and biomedical data are transforming biological sciences into \"big data\" disciplines. In parallel, progress in deep neural networks are revolutionizing fields such as image recognition, natural language processing and, more broadly, AI. This course explores the exciting intersection between these two advances. The course will start with an introduction to deep learning and overview the relevant background in genomics and high-throughput biotechnology, focusing on the available data and their relevance. It will then cover the ongoing developments in deep learning (supervised, unsupervised and generative models) with the focus on the applications of these methods to biomedical data, which are beginning to produced dramatic results. In addition to predictive modeling, the course emphasizes how to visualize and extract interpretable, biological insights from such models. Recent papers from the literature will be presented and discussed. Students will be introduced to and work with popular deep learning software frameworks. Students will work in groups on a final class project using real world datasets. Prerequisites: College calculus, linear algebra, basic probability and statistics such as CS109, and basic machine learning such as CS229. No prior knowledge of genomics is necessary.",
                "courseTitle": "Deep Learning in Genomics and Biomedicine (BIOMEDIN 273B, CS 273B, GENE 236)",
                "gradingMethod": "Medical Option (Med-Ltr-CR/NC)",
                "numberOfUnits": "3",
                "semester": "Fall"
            },
            {
                "courseId": "BIODS 237:",
                "courseLevel": "Graduate",
                "courseMeta": "Recent breakthroughs in high-throughput genomic and biomedical data are transforming biological sciences into \"big data\" disciplines. In parallel, progress in deep neural networks are revolutionizing fields such as image recognition, natural language processing and, more broadly, AI. This course explores the exciting intersection between these two advances. The course will start with an introduction to deep learning and overview the relevant background in genomics and high-throughput biotechnology, focusing on the available data and their relevance. It will then cover the ongoing developments in deep learning (supervised, unsupervised and generative models) with the focus on the applications of these methods to biomedical data, which are beginning to produced dramatic results. In addition to predictive modeling, the course emphasizes how to visualize and extract interpretable, biological insights from such models. Recent papers from the literature will be presented and discussed. Students will be introduced to and work with popular deep learning software frameworks. Students will work in groups on a final class project using real world datasets. Prerequisites: College calculus, linear algebra, basic probability and statistics such as CS109, and basic machine learning such as CS229. No prior knowledge of genomics is necessary.",
                "courseTitle": "Deep Learning in Genomics and Biomedicine (BIOMEDIN 273B, CS 273B, GENE 236)",
                "gradingMethod": "Medical Option (Med-Ltr-CR/NC)",
                "numberOfUnits": "3",
                "semester": "Fall"
            },
            {
                "courseId": "BIODS 237:",
                "courseLevel": "Graduate",
                "courseMeta": "Recent breakthroughs in high-throughput genomic and biomedical data are transforming biological sciences into \"big data\" disciplines. In parallel, progress in deep neural networks are revolutionizing fields such as image recognition, natural language processing and, more broadly, AI. This course explores the exciting intersection between these two advances. The course will start with an introduction to deep learning and overview the relevant background in genomics and high-throughput biotechnology, focusing on the available data and their relevance. It will then cover the ongoing developments in deep learning (supervised, unsupervised and generative models) with the focus on the applications of these methods to biomedical data, which are beginning to produced dramatic results. In addition to predictive modeling, the course emphasizes how to visualize and extract interpretable, biological insights from such models. Recent papers from the literature will be presented and discussed. Students will be introduced to and work with popular deep learning software frameworks. Students will work in groups on a final class project using real world datasets. Prerequisites: College calculus, linear algebra, basic probability and statistics such as CS109, and basic machine learning such as CS229. No prior knowledge of genomics is necessary.",
                "courseTitle": "Deep Learning in Genomics and Biomedicine (BIOMEDIN 273B, CS 273B, GENE 236)",
                "gradingMethod": "Medical Option (Med-Ltr-CR/NC)",
                "numberOfUnits": "3",
                "semester": "Fall"
            },
            {
                "courseId": "BIODS 237:",
                "courseLevel": "Graduate",
                "courseMeta": "Recent breakthroughs in high-throughput genomic and biomedical data are transforming biological sciences into \"big data\" disciplines. In parallel, progress in deep neural networks are revolutionizing fields such as image recognition, natural language processing and, more broadly, AI. This course explores the exciting intersection between these two advances. The course will start with an introduction to deep learning and overview the relevant background in genomics and high-throughput biotechnology, focusing on the available data and their relevance. It will then cover the ongoing developments in deep learning (supervised, unsupervised and generative models) with the focus on the applications of these methods to biomedical data, which are beginning to produced dramatic results. In addition to predictive modeling, the course emphasizes how to visualize and extract interpretable, biological insights from such models. Recent papers from the literature will be presented and discussed. Students will be introduced to and work with popular deep learning software frameworks. Students will work in groups on a final class project using real world datasets. Prerequisites: College calculus, linear algebra, basic probability and statistics such as CS109, and basic machine learning such as CS229. No prior knowledge of genomics is necessary.",
                "courseTitle": "Deep Learning in Genomics and Biomedicine (BIOMEDIN 273B, CS 273B, GENE 236)",
                "gradingMethod": "Medical Option (Med-Ltr-CR/NC)",
                "numberOfUnits": "3",
                "semester": "Fall"
            },
            {
                "courseId": "BIODS 237:",
                "courseLevel": "Graduate",
                "courseMeta": "Recent breakthroughs in high-throughput genomic and biomedical data are transforming biological sciences into \"big data\" disciplines. In parallel, progress in deep neural networks are revolutionizing fields such as image recognition, natural language processing and, more broadly, AI. This course explores the exciting intersection between these two advances. The course will start with an introduction to deep learning and overview the relevant background in genomics and high-throughput biotechnology, focusing on the available data and their relevance. It will then cover the ongoing developments in deep learning (supervised, unsupervised and generative models) with the focus on the applications of these methods to biomedical data, which are beginning to produced dramatic results. In addition to predictive modeling, the course emphasizes how to visualize and extract interpretable, biological insights from such models. Recent papers from the literature will be presented and discussed. Students will be introduced to and work with popular deep learning software frameworks. Students will work in groups on a final class project using real world datasets. Prerequisites: College calculus, linear algebra, basic probability and statistics such as CS109, and basic machine learning such as CS229. No prior knowledge of genomics is necessary.",
                "courseTitle": "Deep Learning in Genomics and Biomedicine (BIOMEDIN 273B, CS 273B, GENE 236)",
                "gradingMethod": "Medical Option (Med-Ltr-CR/NC)",
                "numberOfUnits": "3",
                "semester": "Fall"
            },
            {
                "courseId": "BIODS 237:",
                "courseLevel": "Graduate",
                "courseMeta": "Recent breakthroughs in high-throughput genomic and biomedical data are transforming biological sciences into \"big data\" disciplines. In parallel, progress in deep neural networks are revolutionizing fields such as image recognition, natural language processing and, more broadly, AI. This course explores the exciting intersection between these two advances. The course will start with an introduction to deep learning and overview the relevant background in genomics and high-throughput biotechnology, focusing on the available data and their relevance. It will then cover the ongoing developments in deep learning (supervised, unsupervised and generative models) with the focus on the applications of these methods to biomedical data, which are beginning to produced dramatic results. In addition to predictive modeling, the course emphasizes how to visualize and extract interpretable, biological insights from such models. Recent papers from the literature will be presented and discussed. Students will be introduced to and work with popular deep learning software frameworks. Students will work in groups on a final class project using real world datasets. Prerequisites: College calculus, linear algebra, basic probability and statistics such as CS109, and basic machine learning such as CS229. No prior knowledge of genomics is necessary.",
                "courseTitle": "Deep Learning in Genomics and Biomedicine (BIOMEDIN 273B, CS 273B, GENE 236)",
                "gradingMethod": "Medical Option (Med-Ltr-CR/NC)",
                "numberOfUnits": "3",
                "semester": "Fall"
            },
            {
                "courseId": "BIODS 237:",
                "courseLevel": "Graduate",
                "courseMeta": "Recent breakthroughs in high-throughput genomic and biomedical data are transforming biological sciences into \"big data\" disciplines. In parallel, progress in deep neural networks are revolutionizing fields such as image recognition, natural language processing and, more broadly, AI. This course explores the exciting intersection between these two advances. The course will start with an introduction to deep learning and overview the relevant background in genomics and high-throughput biotechnology, focusing on the available data and their relevance. It will then cover the ongoing developments in deep learning (supervised, unsupervised and generative models) with the focus on the applications of these methods to biomedical data, which are beginning to produced dramatic results. In addition to predictive modeling, the course emphasizes how to visualize and extract interpretable, biological insights from such models. Recent papers from the literature will be presented and discussed. Students will be introduced to and work with popular deep learning software frameworks. Students will work in groups on a final class project using real world datasets. Prerequisites: College calculus, linear algebra, basic probability and statistics such as CS109, and basic machine learning such as CS229. No prior knowledge of genomics is necessary.",
                "courseTitle": "Deep Learning in Genomics and Biomedicine (BIOMEDIN 273B, CS 273B, GENE 236)",
                "gradingMethod": "Medical Option (Med-Ltr-CR/NC)",
                "numberOfUnits": "3",
                "semester": "Fall"
            },
            {
                "courseId": "BIODS 237:",
                "courseLevel": "Graduate",
                "courseMeta": "Recent breakthroughs in high-throughput genomic and biomedical data are transforming biological sciences into \"big data\" disciplines. In parallel, progress in deep neural networks are revolutionizing fields such as image recognition, natural language processing and, more broadly, AI. This course explores the exciting intersection between these two advances. The course will start with an introduction to deep learning and overview the relevant background in genomics and high-throughput biotechnology, focusing on the available data and their relevance. It will then cover the ongoing developments in deep learning (supervised, unsupervised and generative models) with the focus on the applications of these methods to biomedical data, which are beginning to produced dramatic results. In addition to predictive modeling, the course emphasizes how to visualize and extract interpretable, biological insights from such models. Recent papers from the literature will be presented and discussed. Students will be introduced to and work with popular deep learning software frameworks. Students will work in groups on a final class project using real world datasets. Prerequisites: College calculus, linear algebra, basic probability and statistics such as CS109, and basic machine learning such as CS229. No prior knowledge of genomics is necessary.",
                "courseTitle": "Deep Learning in Genomics and Biomedicine (BIOMEDIN 273B, CS 273B, GENE 236)",
                "gradingMethod": "Medical Option (Med-Ltr-CR/NC)",
                "numberOfUnits": "3",
                "semester": "Fall"
            },
            {
                "courseId": "BIODS 237:",
                "courseLevel": "Graduate",
                "courseMeta": "Recent breakthroughs in high-throughput genomic and biomedical data are transforming biological sciences into \"big data\" disciplines. In parallel, progress in deep neural networks are revolutionizing fields such as image recognition, natural language processing and, more broadly, AI. This course explores the exciting intersection between these two advances. The course will start with an introduction to deep learning and overview the relevant background in genomics and high-throughput biotechnology, focusing on the available data and their relevance. It will then cover the ongoing developments in deep learning (supervised, unsupervised and generative models) with the focus on the applications of these methods to biomedical data, which are beginning to produced dramatic results. In addition to predictive modeling, the course emphasizes how to visualize and extract interpretable, biological insights from such models. Recent papers from the literature will be presented and discussed. Students will be introduced to and work with popular deep learning software frameworks. Students will work in groups on a final class project using real world datasets. Prerequisites: College calculus, linear algebra, basic probability and statistics such as CS109, and basic machine learning such as CS229. No prior knowledge of genomics is necessary.",
                "courseTitle": "Deep Learning in Genomics and Biomedicine (BIOMEDIN 273B, CS 273B, GENE 236)",
                "gradingMethod": "Medical Option (Med-Ltr-CR/NC)",
                "numberOfUnits": "3",
                "semester": "Fall"
            },
            {
                "courseId": "BIODS 237:",
                "courseLevel": "Graduate",
                "courseMeta": "Recent breakthroughs in high-throughput genomic and biomedical data are transforming biological sciences into \"big data\" disciplines. In parallel, progress in deep neural networks are revolutionizing fields such as image recognition, natural language processing and, more broadly, AI. This course explores the exciting intersection between these two advances. The course will start with an introduction to deep learning and overview the relevant background in genomics and high-throughput biotechnology, focusing on the available data and their relevance. It will then cover the ongoing developments in deep learning (supervised, unsupervised and generative models) with the focus on the applications of these methods to biomedical data, which are beginning to produced dramatic results. In addition to predictive modeling, the course emphasizes how to visualize and extract interpretable, biological insights from such models. Recent papers from the literature will be presented and discussed. Students will be introduced to and work with popular deep learning software frameworks. Students will work in groups on a final class project using real world datasets. Prerequisites: College calculus, linear algebra, basic probability and statistics such as CS109, and basic machine learning such as CS229. No prior knowledge of genomics is necessary.",
                "courseTitle": "Deep Learning in Genomics and Biomedicine (BIOMEDIN 273B, CS 273B, GENE 236)",
                "gradingMethod": "Medical Option (Med-Ltr-CR/NC)",
                "numberOfUnits": "3",
                "semester": "Fall"
            },
            {
                "courseId": "BIODS 237:",
                "courseLevel": "Graduate",
                "courseMeta": "Recent breakthroughs in high-throughput genomic and biomedical data are transforming biological sciences into \"big data\" disciplines. In parallel, progress in deep neural networks are revolutionizing fields such as image recognition, natural language processing and, more broadly, AI. This course explores the exciting intersection between these two advances. The course will start with an introduction to deep learning and overview the relevant background in genomics and high-throughput biotechnology, focusing on the available data and their relevance. It will then cover the ongoing developments in deep learning (supervised, unsupervised and generative models) with the focus on the applications of these methods to biomedical data, which are beginning to produced dramatic results. In addition to predictive modeling, the course emphasizes how to visualize and extract interpretable, biological insights from such models. Recent papers from the literature will be presented and discussed. Students will be introduced to and work with popular deep learning software frameworks. Students will work in groups on a final class project using real world datasets. Prerequisites: College calculus, linear algebra, basic probability and statistics such as CS109, and basic machine learning such as CS229. No prior knowledge of genomics is necessary.",
                "courseTitle": "Deep Learning in Genomics and Biomedicine (BIOMEDIN 273B, CS 273B, GENE 236)",
                "gradingMethod": "Medical Option (Med-Ltr-CR/NC)",
                "numberOfUnits": "3",
                "semester": "Fall"
            },
            {
                "courseId": "BIODS 237:",
                "courseLevel": "Graduate",
                "courseMeta": "Recent breakthroughs in high-throughput genomic and biomedical data are transforming biological sciences into \"big data\" disciplines. In parallel, progress in deep neural networks are revolutionizing fields such as image recognition, natural language processing and, more broadly, AI. This course explores the exciting intersection between these two advances. The course will start with an introduction to deep learning and overview the relevant background in genomics and high-throughput biotechnology, focusing on the available data and their relevance. It will then cover the ongoing developments in deep learning (supervised, unsupervised and generative models) with the focus on the applications of these methods to biomedical data, which are beginning to produced dramatic results. In addition to predictive modeling, the course emphasizes how to visualize and extract interpretable, biological insights from such models. Recent papers from the literature will be presented and discussed. Students will be introduced to and work with popular deep learning software frameworks. Students will work in groups on a final class project using real world datasets. Prerequisites: College calculus, linear algebra, basic probability and statistics such as CS109, and basic machine learning such as CS229. No prior knowledge of genomics is necessary.",
                "courseTitle": "Deep Learning in Genomics and Biomedicine (BIOMEDIN 273B, CS 273B, GENE 236)",
                "gradingMethod": "Medical Option (Med-Ltr-CR/NC)",
                "numberOfUnits": "3",
                "semester": "Fall"
            },
            {
                "courseId": "BIODS 237:",
                "courseLevel": "Graduate",
                "courseMeta": "Recent breakthroughs in high-throughput genomic and biomedical data are transforming biological sciences into \"big data\" disciplines. In parallel, progress in deep neural networks are revolutionizing fields such as image recognition, natural language processing and, more broadly, AI. This course explores the exciting intersection between these two advances. The course will start with an introduction to deep learning and overview the relevant background in genomics and high-throughput biotechnology, focusing on the available data and their relevance. It will then cover the ongoing developments in deep learning (supervised, unsupervised and generative models) with the focus on the applications of these methods to biomedical data, which are beginning to produced dramatic results. In addition to predictive modeling, the course emphasizes how to visualize and extract interpretable, biological insights from such models. Recent papers from the literature will be presented and discussed. Students will be introduced to and work with popular deep learning software frameworks. Students will work in groups on a final class project using real world datasets. Prerequisites: College calculus, linear algebra, basic probability and statistics such as CS109, and basic machine learning such as CS229. No prior knowledge of genomics is necessary.",
                "courseTitle": "Deep Learning in Genomics and Biomedicine (BIOMEDIN 273B, CS 273B, GENE 236)",
                "gradingMethod": "Medical Option (Med-Ltr-CR/NC)",
                "numberOfUnits": "3",
                "semester": "Fall"
            },
            {
                "courseId": "BIODS 237:",
                "courseLevel": "Graduate",
                "courseMeta": "Recent breakthroughs in high-throughput genomic and biomedical data are transforming biological sciences into \"big data\" disciplines. In parallel, progress in deep neural networks are revolutionizing fields such as image recognition, natural language processing and, more broadly, AI. This course explores the exciting intersection between these two advances. The course will start with an introduction to deep learning and overview the relevant background in genomics and high-throughput biotechnology, focusing on the available data and their relevance. It will then cover the ongoing developments in deep learning (supervised, unsupervised and generative models) with the focus on the applications of these methods to biomedical data, which are beginning to produced dramatic results. In addition to predictive modeling, the course emphasizes how to visualize and extract interpretable, biological insights from such models. Recent papers from the literature will be presented and discussed. Students will be introduced to and work with popular deep learning software frameworks. Students will work in groups on a final class project using real world datasets. Prerequisites: College calculus, linear algebra, basic probability and statistics such as CS109, and basic machine learning such as CS229. No prior knowledge of genomics is necessary.",
                "courseTitle": "Deep Learning in Genomics and Biomedicine (BIOMEDIN 273B, CS 273B, GENE 236)",
                "gradingMethod": "Medical Option (Med-Ltr-CR/NC)",
                "numberOfUnits": "3",
                "semester": "Fall"
            },
            {
                "courseId": "BIODS 237:",
                "courseLevel": "Graduate",
                "courseMeta": "Recent breakthroughs in high-throughput genomic and biomedical data are transforming biological sciences into \"big data\" disciplines. In parallel, progress in deep neural networks are revolutionizing fields such as image recognition, natural language processing and, more broadly, AI. This course explores the exciting intersection between these two advances. The course will start with an introduction to deep learning and overview the relevant background in genomics and high-throughput biotechnology, focusing on the available data and their relevance. It will then cover the ongoing developments in deep learning (supervised, unsupervised and generative models) with the focus on the applications of these methods to biomedical data, which are beginning to produced dramatic results. In addition to predictive modeling, the course emphasizes how to visualize and extract interpretable, biological insights from such models. Recent papers from the literature will be presented and discussed. Students will be introduced to and work with popular deep learning software frameworks. Students will work in groups on a final class project using real world datasets. Prerequisites: College calculus, linear algebra, basic probability and statistics such as CS109, and basic machine learning such as CS229. No prior knowledge of genomics is necessary.",
                "courseTitle": "Deep Learning in Genomics and Biomedicine (BIOMEDIN 273B, CS 273B, GENE 236)",
                "gradingMethod": "Medical Option (Med-Ltr-CR/NC)",
                "numberOfUnits": "3",
                "semester": "Fall"
            },
            {
                "courseId": "BIODS 237:",
                "courseLevel": "Graduate",
                "courseMeta": "Recent breakthroughs in high-throughput genomic and biomedical data are transforming biological sciences into \"big data\" disciplines. In parallel, progress in deep neural networks are revolutionizing fields such as image recognition, natural language processing and, more broadly, AI. This course explores the exciting intersection between these two advances. The course will start with an introduction to deep learning and overview the relevant background in genomics and high-throughput biotechnology, focusing on the available data and their relevance. It will then cover the ongoing developments in deep learning (supervised, unsupervised and generative models) with the focus on the applications of these methods to biomedical data, which are beginning to produced dramatic results. In addition to predictive modeling, the course emphasizes how to visualize and extract interpretable, biological insights from such models. Recent papers from the literature will be presented and discussed. Students will be introduced to and work with popular deep learning software frameworks. Students will work in groups on a final class project using real world datasets. Prerequisites: College calculus, linear algebra, basic probability and statistics such as CS109, and basic machine learning such as CS229. No prior knowledge of genomics is necessary.",
                "courseTitle": "Deep Learning in Genomics and Biomedicine (BIOMEDIN 273B, CS 273B, GENE 236)",
                "gradingMethod": "Medical Option (Med-Ltr-CR/NC)",
                "numberOfUnits": "3",
                "semester": "Fall"
            },
            {
                "courseId": "BIODS 237:",
                "courseLevel": "Graduate",
                "courseMeta": "Recent breakthroughs in high-throughput genomic and biomedical data are transforming biological sciences into \"big data\" disciplines. In parallel, progress in deep neural networks are revolutionizing fields such as image recognition, natural language processing and, more broadly, AI. This course explores the exciting intersection between these two advances. The course will start with an introduction to deep learning and overview the relevant background in genomics and high-throughput biotechnology, focusing on the available data and their relevance. It will then cover the ongoing developments in deep learning (supervised, unsupervised and generative models) with the focus on the applications of these methods to biomedical data, which are beginning to produced dramatic results. In addition to predictive modeling, the course emphasizes how to visualize and extract interpretable, biological insights from such models. Recent papers from the literature will be presented and discussed. Students will be introduced to and work with popular deep learning software frameworks. Students will work in groups on a final class project using real world datasets. Prerequisites: College calculus, linear algebra, basic probability and statistics such as CS109, and basic machine learning such as CS229. No prior knowledge of genomics is necessary.",
                "courseTitle": "Deep Learning in Genomics and Biomedicine (BIOMEDIN 273B, CS 273B, GENE 236)",
                "gradingMethod": "Medical Option (Med-Ltr-CR/NC)",
                "numberOfUnits": "3",
                "semester": "Fall"
            },
            {
                "courseId": "BIODS 237:",
                "courseLevel": "Graduate",
                "courseMeta": "Recent breakthroughs in high-throughput genomic and biomedical data are transforming biological sciences into \"big data\" disciplines. In parallel, progress in deep neural networks are revolutionizing fields such as image recognition, natural language processing and, more broadly, AI. This course explores the exciting intersection between these two advances. The course will start with an introduction to deep learning and overview the relevant background in genomics and high-throughput biotechnology, focusing on the available data and their relevance. It will then cover the ongoing developments in deep learning (supervised, unsupervised and generative models) with the focus on the applications of these methods to biomedical data, which are beginning to produced dramatic results. In addition to predictive modeling, the course emphasizes how to visualize and extract interpretable, biological insights from such models. Recent papers from the literature will be presented and discussed. Students will be introduced to and work with popular deep learning software frameworks. Students will work in groups on a final class project using real world datasets. Prerequisites: College calculus, linear algebra, basic probability and statistics such as CS109, and basic machine learning such as CS229. No prior knowledge of genomics is necessary.",
                "courseTitle": "Deep Learning in Genomics and Biomedicine (BIOMEDIN 273B, CS 273B, GENE 236)",
                "gradingMethod": "Medical Option (Med-Ltr-CR/NC)",
                "numberOfUnits": "3",
                "semester": "Fall"
            },
            {
                "courseId": "BIODS 237:",
                "courseLevel": "Graduate",
                "courseMeta": "Recent breakthroughs in high-throughput genomic and biomedical data are transforming biological sciences into \"big data\" disciplines. In parallel, progress in deep neural networks are revolutionizing fields such as image recognition, natural language processing and, more broadly, AI. This course explores the exciting intersection between these two advances. The course will start with an introduction to deep learning and overview the relevant background in genomics and high-throughput biotechnology, focusing on the available data and their relevance. It will then cover the ongoing developments in deep learning (supervised, unsupervised and generative models) with the focus on the applications of these methods to biomedical data, which are beginning to produced dramatic results. In addition to predictive modeling, the course emphasizes how to visualize and extract interpretable, biological insights from such models. Recent papers from the literature will be presented and discussed. Students will be introduced to and work with popular deep learning software frameworks. Students will work in groups on a final class project using real world datasets. Prerequisites: College calculus, linear algebra, basic probability and statistics such as CS109, and basic machine learning such as CS229. No prior knowledge of genomics is necessary.",
                "courseTitle": "Deep Learning in Genomics and Biomedicine (BIOMEDIN 273B, CS 273B, GENE 236)",
                "gradingMethod": "Medical Option (Med-Ltr-CR/NC)",
                "numberOfUnits": "3",
                "semester": "Fall"
            },
            {
                "courseId": "BIODS 237:",
                "courseLevel": "Graduate",
                "courseMeta": "Recent breakthroughs in high-throughput genomic and biomedical data are transforming biological sciences into \"big data\" disciplines. In parallel, progress in deep neural networks are revolutionizing fields such as image recognition, natural language processing and, more broadly, AI. This course explores the exciting intersection between these two advances. The course will start with an introduction to deep learning and overview the relevant background in genomics and high-throughput biotechnology, focusing on the available data and their relevance. It will then cover the ongoing developments in deep learning (supervised, unsupervised and generative models) with the focus on the applications of these methods to biomedical data, which are beginning to produced dramatic results. In addition to predictive modeling, the course emphasizes how to visualize and extract interpretable, biological insights from such models. Recent papers from the literature will be presented and discussed. Students will be introduced to and work with popular deep learning software frameworks. Students will work in groups on a final class project using real world datasets. Prerequisites: College calculus, linear algebra, basic probability and statistics such as CS109, and basic machine learning such as CS229. No prior knowledge of genomics is necessary.",
                "courseTitle": "Deep Learning in Genomics and Biomedicine (BIOMEDIN 273B, CS 273B, GENE 236)",
                "gradingMethod": "Medical Option (Med-Ltr-CR/NC)",
                "numberOfUnits": "3",
                "semester": "Fall"
            },
            {
                "courseId": "BIODS 237:",
                "courseLevel": "Graduate",
                "courseMeta": "Recent breakthroughs in high-throughput genomic and biomedical data are transforming biological sciences into \"big data\" disciplines. In parallel, progress in deep neural networks are revolutionizing fields such as image recognition, natural language processing and, more broadly, AI. This course explores the exciting intersection between these two advances. The course will start with an introduction to deep learning and overview the relevant background in genomics and high-throughput biotechnology, focusing on the available data and their relevance. It will then cover the ongoing developments in deep learning (supervised, unsupervised and generative models) with the focus on the applications of these methods to biomedical data, which are beginning to produced dramatic results. In addition to predictive modeling, the course emphasizes how to visualize and extract interpretable, biological insights from such models. Recent papers from the literature will be presented and discussed. Students will be introduced to and work with popular deep learning software frameworks. Students will work in groups on a final class project using real world datasets. Prerequisites: College calculus, linear algebra, basic probability and statistics such as CS109, and basic machine learning such as CS229. No prior knowledge of genomics is necessary.",
                "courseTitle": "Deep Learning in Genomics and Biomedicine (BIOMEDIN 273B, CS 273B, GENE 236)",
                "gradingMethod": "Medical Option (Med-Ltr-CR/NC)",
                "numberOfUnits": "3",
                "semester": "Fall"
            },
            {
                "courseId": "BIODS 237:",
                "courseLevel": "Graduate",
                "courseMeta": "Recent breakthroughs in high-throughput genomic and biomedical data are transforming biological sciences into \"big data\" disciplines. In parallel, progress in deep neural networks are revolutionizing fields such as image recognition, natural language processing and, more broadly, AI. This course explores the exciting intersection between these two advances. The course will start with an introduction to deep learning and overview the relevant background in genomics and high-throughput biotechnology, focusing on the available data and their relevance. It will then cover the ongoing developments in deep learning (supervised, unsupervised and generative models) with the focus on the applications of these methods to biomedical data, which are beginning to produced dramatic results. In addition to predictive modeling, the course emphasizes how to visualize and extract interpretable, biological insights from such models. Recent papers from the literature will be presented and discussed. Students will be introduced to and work with popular deep learning software frameworks. Students will work in groups on a final class project using real world datasets. Prerequisites: College calculus, linear algebra, basic probability and statistics such as CS109, and basic machine learning such as CS229. No prior knowledge of genomics is necessary.",
                "courseTitle": "Deep Learning in Genomics and Biomedicine (BIOMEDIN 273B, CS 273B, GENE 236)",
                "gradingMethod": "Medical Option (Med-Ltr-CR/NC)",
                "numberOfUnits": "3",
                "semester": "Fall"
            },
            {
                "courseId": "BIODS 237:",
                "courseLevel": "Graduate",
                "courseMeta": "Recent breakthroughs in high-throughput genomic and biomedical data are transforming biological sciences into \"big data\" disciplines. In parallel, progress in deep neural networks are revolutionizing fields such as image recognition, natural language processing and, more broadly, AI. This course explores the exciting intersection between these two advances. The course will start with an introduction to deep learning and overview the relevant background in genomics and high-throughput biotechnology, focusing on the available data and their relevance. It will then cover the ongoing developments in deep learning (supervised, unsupervised and generative models) with the focus on the applications of these methods to biomedical data, which are beginning to produced dramatic results. In addition to predictive modeling, the course emphasizes how to visualize and extract interpretable, biological insights from such models. Recent papers from the literature will be presented and discussed. Students will be introduced to and work with popular deep learning software frameworks. Students will work in groups on a final class project using real world datasets. Prerequisites: College calculus, linear algebra, basic probability and statistics such as CS109, and basic machine learning such as CS229. No prior knowledge of genomics is necessary.",
                "courseTitle": "Deep Learning in Genomics and Biomedicine (BIOMEDIN 273B, CS 273B, GENE 236)",
                "gradingMethod": "Medical Option (Med-Ltr-CR/NC)",
                "numberOfUnits": "3",
                "semester": "Fall"
            },
            {
                "courseId": "BIODS 237:",
                "courseLevel": "Graduate",
                "courseMeta": "Recent breakthroughs in high-throughput genomic and biomedical data are transforming biological sciences into \"big data\" disciplines. In parallel, progress in deep neural networks are revolutionizing fields such as image recognition, natural language processing and, more broadly, AI. This course explores the exciting intersection between these two advances. The course will start with an introduction to deep learning and overview the relevant background in genomics and high-throughput biotechnology, focusing on the available data and their relevance. It will then cover the ongoing developments in deep learning (supervised, unsupervised and generative models) with the focus on the applications of these methods to biomedical data, which are beginning to produced dramatic results. In addition to predictive modeling, the course emphasizes how to visualize and extract interpretable, biological insights from such models. Recent papers from the literature will be presented and discussed. Students will be introduced to and work with popular deep learning software frameworks. Students will work in groups on a final class project using real world datasets. Prerequisites: College calculus, linear algebra, basic probability and statistics such as CS109, and basic machine learning such as CS229. No prior knowledge of genomics is necessary.",
                "courseTitle": "Deep Learning in Genomics and Biomedicine (BIOMEDIN 273B, CS 273B, GENE 236)",
                "gradingMethod": "Medical Option (Med-Ltr-CR/NC)",
                "numberOfUnits": "3",
                "semester": "Fall"
            }
        ]
    },
    "Ashish Goel": {
        "corpus": {
            "DBLP": "https://dblp.uni-trier.de/pers/hd/g/Goel:Ashish",
            "Google Scholar": "https://scholar.google.com/citations?user=B_rKfusAAAAJ&hl=en&oi=ao",
            "domain": "robotics",
            "home": "https://web.stanford.edu/~ashishg/ashishg.html"
        },
        "courses": [
            {
                "courseId": "CME 291:",
                "courseLevel": "Graduate",
                "courseMeta": "Students require faculty sponsor. (Staff)",
                "courseTitle": "Master's Research",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "1-6",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "CME 291:",
                "courseLevel": "Graduate",
                "courseMeta": "Students require faculty sponsor. (Staff)",
                "courseTitle": "Master's Research",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "1-6",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "CME 291:",
                "courseLevel": "Graduate",
                "courseMeta": "Students require faculty sponsor. (Staff)",
                "courseTitle": "Master's Research",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "1-6",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "CME 291:",
                "courseLevel": "Graduate",
                "courseMeta": "Students require faculty sponsor. (Staff)",
                "courseTitle": "Master's Research",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "1-6",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "CME 291:",
                "courseLevel": "Graduate",
                "courseMeta": "Students require faculty sponsor. (Staff)",
                "courseTitle": "Master's Research",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "1-6",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "CME 291:",
                "courseLevel": "Graduate",
                "courseMeta": "Students require faculty sponsor. (Staff)",
                "courseTitle": "Master's Research",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "1-6",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "CME 291:",
                "courseLevel": "Graduate",
                "courseMeta": "Students require faculty sponsor. (Staff)",
                "courseTitle": "Master's Research",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "1-6",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "CME 291:",
                "courseLevel": "Graduate",
                "courseMeta": "Students require faculty sponsor. (Staff)",
                "courseTitle": "Master's Research",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "1-6",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "CME 291:",
                "courseLevel": "Graduate",
                "courseMeta": "Students require faculty sponsor. (Staff)",
                "courseTitle": "Master's Research",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "1-6",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "CME 291:",
                "courseLevel": "Graduate",
                "courseMeta": "Students require faculty sponsor. (Staff)",
                "courseTitle": "Master's Research",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "1-6",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "CME 291:",
                "courseLevel": "Graduate",
                "courseMeta": "Students require faculty sponsor. (Staff)",
                "courseTitle": "Master's Research",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "1-6",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "CME 291:",
                "courseLevel": "Graduate",
                "courseMeta": "Students require faculty sponsor. (Staff)",
                "courseTitle": "Master's Research",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "1-6",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "CME 291:",
                "courseLevel": "Graduate",
                "courseMeta": "Students require faculty sponsor. (Staff)",
                "courseTitle": "Master's Research",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "1-6",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "CME 291:",
                "courseLevel": "Graduate",
                "courseMeta": "Students require faculty sponsor. (Staff)",
                "courseTitle": "Master's Research",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "1-6",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "CME 291:",
                "courseLevel": "Graduate",
                "courseMeta": "Students require faculty sponsor. (Staff)",
                "courseTitle": "Master's Research",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "1-6",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "CME 291:",
                "courseLevel": "Graduate",
                "courseMeta": "Students require faculty sponsor. (Staff)",
                "courseTitle": "Master's Research",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "1-6",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "CME 291:",
                "courseLevel": "Graduate",
                "courseMeta": "Students require faculty sponsor. (Staff)",
                "courseTitle": "Master's Research",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "1-6",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "CME 291:",
                "courseLevel": "Graduate",
                "courseMeta": "Students require faculty sponsor. (Staff)",
                "courseTitle": "Master's Research",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "1-6",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "CME 291:",
                "courseLevel": "Graduate",
                "courseMeta": "Students require faculty sponsor. (Staff)",
                "courseTitle": "Master's Research",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "1-6",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "CME 291:",
                "courseLevel": "Graduate",
                "courseMeta": "Students require faculty sponsor. (Staff)",
                "courseTitle": "Master's Research",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "1-6",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "CME 291:",
                "courseLevel": "Graduate",
                "courseMeta": "Students require faculty sponsor. (Staff)",
                "courseTitle": "Master's Research",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "1-6",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "CME 291:",
                "courseLevel": "Graduate",
                "courseMeta": "Students require faculty sponsor. (Staff)",
                "courseTitle": "Master's Research",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "1-6",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "CME 291:",
                "courseLevel": "Graduate",
                "courseMeta": "Students require faculty sponsor. (Staff)",
                "courseTitle": "Master's Research",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "1-6",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "CME 291:",
                "courseLevel": "Graduate",
                "courseMeta": "Students require faculty sponsor. (Staff)",
                "courseTitle": "Master's Research",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "1-6",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "CME 291:",
                "courseLevel": "Graduate",
                "courseMeta": "Students require faculty sponsor. (Staff)",
                "courseTitle": "Master's Research",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "1-6",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "CME 291:",
                "courseLevel": "Graduate",
                "courseMeta": "Students require faculty sponsor. (Staff)",
                "courseTitle": "Master's Research",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "1-6",
                "semester": "Fall, Winter, Spring, Summer"
            }
        ]
    },
    "Aviad Rubinstein": {
        "corpus": {
            "DBLP": "https://dblp.uni-trier.de/pers/hd/r/Rubinstein:Aviad",
            "domain": "",
            "home": "https://cs.stanford.edu/~aviad"
        },
        "courses": [
            {
                "courseId": "CS 354:",
                "courseLevel": "Graduate",
                "courseMeta": "Over the past 45 years, understanding NP-hardness has been an amazingly useful tool for algorithm designers. This course will expose students to additional ways to reason about obstacles for designing efficient algorithms. Topics will include unconditional lower bounds (query- and communication-complexity), total problems, Unique Games, average-case complexity, and fine-grained complexity. Prerequisites: CS 161 or equivalent. CS 254 recommended but not required.",
                "courseTitle": "Topics in Intractability: Unfulfilled Algorithmic Fantasies",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3",
                "semester": "Spring"
            },
            {
                "courseId": "CS 354:",
                "courseLevel": "Graduate",
                "courseMeta": "Over the past 45 years, understanding NP-hardness has been an amazingly useful tool for algorithm designers. This course will expose students to additional ways to reason about obstacles for designing efficient algorithms. Topics will include unconditional lower bounds (query- and communication-complexity), total problems, Unique Games, average-case complexity, and fine-grained complexity. Prerequisites: CS 161 or equivalent. CS 254 recommended but not required.",
                "courseTitle": "Topics in Intractability: Unfulfilled Algorithmic Fantasies",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3",
                "semester": "Spring"
            },
            {
                "courseId": "CS 354:",
                "courseLevel": "Graduate",
                "courseMeta": "Over the past 45 years, understanding NP-hardness has been an amazingly useful tool for algorithm designers. This course will expose students to additional ways to reason about obstacles for designing efficient algorithms. Topics will include unconditional lower bounds (query- and communication-complexity), total problems, Unique Games, average-case complexity, and fine-grained complexity. Prerequisites: CS 161 or equivalent. CS 254 recommended but not required.",
                "courseTitle": "Topics in Intractability: Unfulfilled Algorithmic Fantasies",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3",
                "semester": "Spring"
            },
            {
                "courseId": "CS 354:",
                "courseLevel": "Graduate",
                "courseMeta": "Over the past 45 years, understanding NP-hardness has been an amazingly useful tool for algorithm designers. This course will expose students to additional ways to reason about obstacles for designing efficient algorithms. Topics will include unconditional lower bounds (query- and communication-complexity), total problems, Unique Games, average-case complexity, and fine-grained complexity. Prerequisites: CS 161 or equivalent. CS 254 recommended but not required.",
                "courseTitle": "Topics in Intractability: Unfulfilled Algorithmic Fantasies",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3",
                "semester": "Spring"
            },
            {
                "courseId": "CS 354:",
                "courseLevel": "Graduate",
                "courseMeta": "Over the past 45 years, understanding NP-hardness has been an amazingly useful tool for algorithm designers. This course will expose students to additional ways to reason about obstacles for designing efficient algorithms. Topics will include unconditional lower bounds (query- and communication-complexity), total problems, Unique Games, average-case complexity, and fine-grained complexity. Prerequisites: CS 161 or equivalent. CS 254 recommended but not required.",
                "courseTitle": "Topics in Intractability: Unfulfilled Algorithmic Fantasies",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3",
                "semester": "Spring"
            },
            {
                "courseId": "CS 354:",
                "courseLevel": "Graduate",
                "courseMeta": "Over the past 45 years, understanding NP-hardness has been an amazingly useful tool for algorithm designers. This course will expose students to additional ways to reason about obstacles for designing efficient algorithms. Topics will include unconditional lower bounds (query- and communication-complexity), total problems, Unique Games, average-case complexity, and fine-grained complexity. Prerequisites: CS 161 or equivalent. CS 254 recommended but not required.",
                "courseTitle": "Topics in Intractability: Unfulfilled Algorithmic Fantasies",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3",
                "semester": "Spring"
            },
            {
                "courseId": "CS 354:",
                "courseLevel": "Graduate",
                "courseMeta": "Over the past 45 years, understanding NP-hardness has been an amazingly useful tool for algorithm designers. This course will expose students to additional ways to reason about obstacles for designing efficient algorithms. Topics will include unconditional lower bounds (query- and communication-complexity), total problems, Unique Games, average-case complexity, and fine-grained complexity. Prerequisites: CS 161 or equivalent. CS 254 recommended but not required.",
                "courseTitle": "Topics in Intractability: Unfulfilled Algorithmic Fantasies",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3",
                "semester": "Spring"
            }
        ]
    },
    "Balaji Prabhakar": {
        "corpus": {
            "DBLP": "https://dblp.uni-trier.de/pers/hd/p/Prabhakar:Balaji",
            "domain": "",
            "home": "http://web.stanford.edu/~balaji"
        },
        "courses": [
            {
                "courseId": "CS 349F:",
                "courseLevel": "Graduate",
                "courseMeta": "Financial systems have spurred technological innovation and, in turn, are driven by cutting-edge technological developments.  This seminar course explores the synergy.  Students will learn from faculty and industry experts (from the finance and tech industries) how to build faster, fairer and better fintech.  Topics include network infrastructure: packet switch architectures, data center fabrics, ultra-low latency trading systems and financial exchange fabrics; cloud computing infrastructure: building large-scale risk computation platforms using virtual machines, containers and serverless computing; challenges and opportunities in building cloud-native financial exchanges: the role of fairness and synchronized clocks;  AI/ML in fintech; and trading systems based on distributed ledger technologies.  Recommended:  Knowledge of basic Networking , OS or Distributed Systems (CS 140, CS 144) and basic probability courses (CS 109, EE 178).",
                "courseTitle": "Technology for Financial Systems",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Spring"
            },
            {
                "courseId": "CS 349F:",
                "courseLevel": "Graduate",
                "courseMeta": "Financial systems have spurred technological innovation and, in turn, are driven by cutting-edge technological developments.  This seminar course explores the synergy.  Students will learn from faculty and industry experts (from the finance and tech industries) how to build faster, fairer and better fintech.  Topics include network infrastructure: packet switch architectures, data center fabrics, ultra-low latency trading systems and financial exchange fabrics; cloud computing infrastructure: building large-scale risk computation platforms using virtual machines, containers and serverless computing; challenges and opportunities in building cloud-native financial exchanges: the role of fairness and synchronized clocks;  AI/ML in fintech; and trading systems based on distributed ledger technologies.  Recommended:  Knowledge of basic Networking , OS or Distributed Systems (CS 140, CS 144) and basic probability courses (CS 109, EE 178).",
                "courseTitle": "Technology for Financial Systems",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Spring"
            },
            {
                "courseId": "CS 349F:",
                "courseLevel": "Graduate",
                "courseMeta": "Financial systems have spurred technological innovation and, in turn, are driven by cutting-edge technological developments.  This seminar course explores the synergy.  Students will learn from faculty and industry experts (from the finance and tech industries) how to build faster, fairer and better fintech.  Topics include network infrastructure: packet switch architectures, data center fabrics, ultra-low latency trading systems and financial exchange fabrics; cloud computing infrastructure: building large-scale risk computation platforms using virtual machines, containers and serverless computing; challenges and opportunities in building cloud-native financial exchanges: the role of fairness and synchronized clocks;  AI/ML in fintech; and trading systems based on distributed ledger technologies.  Recommended:  Knowledge of basic Networking , OS or Distributed Systems (CS 140, CS 144) and basic probability courses (CS 109, EE 178).",
                "courseTitle": "Technology for Financial Systems",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Spring"
            },
            {
                "courseId": "CS 349F:",
                "courseLevel": "Graduate",
                "courseMeta": "Financial systems have spurred technological innovation and, in turn, are driven by cutting-edge technological developments.  This seminar course explores the synergy.  Students will learn from faculty and industry experts (from the finance and tech industries) how to build faster, fairer and better fintech.  Topics include network infrastructure: packet switch architectures, data center fabrics, ultra-low latency trading systems and financial exchange fabrics; cloud computing infrastructure: building large-scale risk computation platforms using virtual machines, containers and serverless computing; challenges and opportunities in building cloud-native financial exchanges: the role of fairness and synchronized clocks;  AI/ML in fintech; and trading systems based on distributed ledger technologies.  Recommended:  Knowledge of basic Networking , OS or Distributed Systems (CS 140, CS 144) and basic probability courses (CS 109, EE 178).",
                "courseTitle": "Technology for Financial Systems",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Spring"
            },
            {
                "courseId": "CS 349F:",
                "courseLevel": "Graduate",
                "courseMeta": "Financial systems have spurred technological innovation and, in turn, are driven by cutting-edge technological developments.  This seminar course explores the synergy.  Students will learn from faculty and industry experts (from the finance and tech industries) how to build faster, fairer and better fintech.  Topics include network infrastructure: packet switch architectures, data center fabrics, ultra-low latency trading systems and financial exchange fabrics; cloud computing infrastructure: building large-scale risk computation platforms using virtual machines, containers and serverless computing; challenges and opportunities in building cloud-native financial exchanges: the role of fairness and synchronized clocks;  AI/ML in fintech; and trading systems based on distributed ledger technologies.  Recommended:  Knowledge of basic Networking , OS or Distributed Systems (CS 140, CS 144) and basic probability courses (CS 109, EE 178).",
                "courseTitle": "Technology for Financial Systems",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Spring"
            },
            {
                "courseId": "CS 349F:",
                "courseLevel": "Graduate",
                "courseMeta": "Financial systems have spurred technological innovation and, in turn, are driven by cutting-edge technological developments.  This seminar course explores the synergy.  Students will learn from faculty and industry experts (from the finance and tech industries) how to build faster, fairer and better fintech.  Topics include network infrastructure: packet switch architectures, data center fabrics, ultra-low latency trading systems and financial exchange fabrics; cloud computing infrastructure: building large-scale risk computation platforms using virtual machines, containers and serverless computing; challenges and opportunities in building cloud-native financial exchanges: the role of fairness and synchronized clocks;  AI/ML in fintech; and trading systems based on distributed ledger technologies.  Recommended:  Knowledge of basic Networking , OS or Distributed Systems (CS 140, CS 144) and basic probability courses (CS 109, EE 178).",
                "courseTitle": "Technology for Financial Systems",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Spring"
            },
            {
                "courseId": "CS 349F:",
                "courseLevel": "Graduate",
                "courseMeta": "Financial systems have spurred technological innovation and, in turn, are driven by cutting-edge technological developments.  This seminar course explores the synergy.  Students will learn from faculty and industry experts (from the finance and tech industries) how to build faster, fairer and better fintech.  Topics include network infrastructure: packet switch architectures, data center fabrics, ultra-low latency trading systems and financial exchange fabrics; cloud computing infrastructure: building large-scale risk computation platforms using virtual machines, containers and serverless computing; challenges and opportunities in building cloud-native financial exchanges: the role of fairness and synchronized clocks;  AI/ML in fintech; and trading systems based on distributed ledger technologies.  Recommended:  Knowledge of basic Networking , OS or Distributed Systems (CS 140, CS 144) and basic probability courses (CS 109, EE 178).",
                "courseTitle": "Technology for Financial Systems",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Spring"
            },
            {
                "courseId": "CS 349F:",
                "courseLevel": "Graduate",
                "courseMeta": "Financial systems have spurred technological innovation and, in turn, are driven by cutting-edge technological developments.  This seminar course explores the synergy.  Students will learn from faculty and industry experts (from the finance and tech industries) how to build faster, fairer and better fintech.  Topics include network infrastructure: packet switch architectures, data center fabrics, ultra-low latency trading systems and financial exchange fabrics; cloud computing infrastructure: building large-scale risk computation platforms using virtual machines, containers and serverless computing; challenges and opportunities in building cloud-native financial exchanges: the role of fairness and synchronized clocks;  AI/ML in fintech; and trading systems based on distributed ledger technologies.  Recommended:  Knowledge of basic Networking , OS or Distributed Systems (CS 140, CS 144) and basic probability courses (CS 109, EE 178).",
                "courseTitle": "Technology for Financial Systems",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Spring"
            },
            {
                "courseId": "CS 349F:",
                "courseLevel": "Graduate",
                "courseMeta": "Financial systems have spurred technological innovation and, in turn, are driven by cutting-edge technological developments.  This seminar course explores the synergy.  Students will learn from faculty and industry experts (from the finance and tech industries) how to build faster, fairer and better fintech.  Topics include network infrastructure: packet switch architectures, data center fabrics, ultra-low latency trading systems and financial exchange fabrics; cloud computing infrastructure: building large-scale risk computation platforms using virtual machines, containers and serverless computing; challenges and opportunities in building cloud-native financial exchanges: the role of fairness and synchronized clocks;  AI/ML in fintech; and trading systems based on distributed ledger technologies.  Recommended:  Knowledge of basic Networking , OS or Distributed Systems (CS 140, CS 144) and basic probability courses (CS 109, EE 178).",
                "courseTitle": "Technology for Financial Systems",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Spring"
            },
            {
                "courseId": "CS 349F:",
                "courseLevel": "Graduate",
                "courseMeta": "Financial systems have spurred technological innovation and, in turn, are driven by cutting-edge technological developments.  This seminar course explores the synergy.  Students will learn from faculty and industry experts (from the finance and tech industries) how to build faster, fairer and better fintech.  Topics include network infrastructure: packet switch architectures, data center fabrics, ultra-low latency trading systems and financial exchange fabrics; cloud computing infrastructure: building large-scale risk computation platforms using virtual machines, containers and serverless computing; challenges and opportunities in building cloud-native financial exchanges: the role of fairness and synchronized clocks;  AI/ML in fintech; and trading systems based on distributed ledger technologies.  Recommended:  Knowledge of basic Networking , OS or Distributed Systems (CS 140, CS 144) and basic probability courses (CS 109, EE 178).",
                "courseTitle": "Technology for Financial Systems",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Spring"
            },
            {
                "courseId": "CS 349F:",
                "courseLevel": "Graduate",
                "courseMeta": "Financial systems have spurred technological innovation and, in turn, are driven by cutting-edge technological developments.  This seminar course explores the synergy.  Students will learn from faculty and industry experts (from the finance and tech industries) how to build faster, fairer and better fintech.  Topics include network infrastructure: packet switch architectures, data center fabrics, ultra-low latency trading systems and financial exchange fabrics; cloud computing infrastructure: building large-scale risk computation platforms using virtual machines, containers and serverless computing; challenges and opportunities in building cloud-native financial exchanges: the role of fairness and synchronized clocks;  AI/ML in fintech; and trading systems based on distributed ledger technologies.  Recommended:  Knowledge of basic Networking , OS or Distributed Systems (CS 140, CS 144) and basic probability courses (CS 109, EE 178).",
                "courseTitle": "Technology for Financial Systems",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Spring"
            },
            {
                "courseId": "CS 349F:",
                "courseLevel": "Graduate",
                "courseMeta": "Financial systems have spurred technological innovation and, in turn, are driven by cutting-edge technological developments.  This seminar course explores the synergy.  Students will learn from faculty and industry experts (from the finance and tech industries) how to build faster, fairer and better fintech.  Topics include network infrastructure: packet switch architectures, data center fabrics, ultra-low latency trading systems and financial exchange fabrics; cloud computing infrastructure: building large-scale risk computation platforms using virtual machines, containers and serverless computing; challenges and opportunities in building cloud-native financial exchanges: the role of fairness and synchronized clocks;  AI/ML in fintech; and trading systems based on distributed ledger technologies.  Recommended:  Knowledge of basic Networking , OS or Distributed Systems (CS 140, CS 144) and basic probability courses (CS 109, EE 178).",
                "courseTitle": "Technology for Financial Systems",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Spring"
            },
            {
                "courseId": "CS 349F:",
                "courseLevel": "Graduate",
                "courseMeta": "Financial systems have spurred technological innovation and, in turn, are driven by cutting-edge technological developments.  This seminar course explores the synergy.  Students will learn from faculty and industry experts (from the finance and tech industries) how to build faster, fairer and better fintech.  Topics include network infrastructure: packet switch architectures, data center fabrics, ultra-low latency trading systems and financial exchange fabrics; cloud computing infrastructure: building large-scale risk computation platforms using virtual machines, containers and serverless computing; challenges and opportunities in building cloud-native financial exchanges: the role of fairness and synchronized clocks;  AI/ML in fintech; and trading systems based on distributed ledger technologies.  Recommended:  Knowledge of basic Networking , OS or Distributed Systems (CS 140, CS 144) and basic probability courses (CS 109, EE 178).",
                "courseTitle": "Technology for Financial Systems",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Spring"
            },
            {
                "courseId": "CS 349F:",
                "courseLevel": "Graduate",
                "courseMeta": "Financial systems have spurred technological innovation and, in turn, are driven by cutting-edge technological developments.  This seminar course explores the synergy.  Students will learn from faculty and industry experts (from the finance and tech industries) how to build faster, fairer and better fintech.  Topics include network infrastructure: packet switch architectures, data center fabrics, ultra-low latency trading systems and financial exchange fabrics; cloud computing infrastructure: building large-scale risk computation platforms using virtual machines, containers and serverless computing; challenges and opportunities in building cloud-native financial exchanges: the role of fairness and synchronized clocks;  AI/ML in fintech; and trading systems based on distributed ledger technologies.  Recommended:  Knowledge of basic Networking , OS or Distributed Systems (CS 140, CS 144) and basic probability courses (CS 109, EE 178).",
                "courseTitle": "Technology for Financial Systems",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Spring"
            },
            {
                "courseId": "CS 349F:",
                "courseLevel": "Graduate",
                "courseMeta": "Financial systems have spurred technological innovation and, in turn, are driven by cutting-edge technological developments.  This seminar course explores the synergy.  Students will learn from faculty and industry experts (from the finance and tech industries) how to build faster, fairer and better fintech.  Topics include network infrastructure: packet switch architectures, data center fabrics, ultra-low latency trading systems and financial exchange fabrics; cloud computing infrastructure: building large-scale risk computation platforms using virtual machines, containers and serverless computing; challenges and opportunities in building cloud-native financial exchanges: the role of fairness and synchronized clocks;  AI/ML in fintech; and trading systems based on distributed ledger technologies.  Recommended:  Knowledge of basic Networking , OS or Distributed Systems (CS 140, CS 144) and basic probability courses (CS 109, EE 178).",
                "courseTitle": "Technology for Financial Systems",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Spring"
            },
            {
                "courseId": "CS 349F:",
                "courseLevel": "Graduate",
                "courseMeta": "Financial systems have spurred technological innovation and, in turn, are driven by cutting-edge technological developments.  This seminar course explores the synergy.  Students will learn from faculty and industry experts (from the finance and tech industries) how to build faster, fairer and better fintech.  Topics include network infrastructure: packet switch architectures, data center fabrics, ultra-low latency trading systems and financial exchange fabrics; cloud computing infrastructure: building large-scale risk computation platforms using virtual machines, containers and serverless computing; challenges and opportunities in building cloud-native financial exchanges: the role of fairness and synchronized clocks;  AI/ML in fintech; and trading systems based on distributed ledger technologies.  Recommended:  Knowledge of basic Networking , OS or Distributed Systems (CS 140, CS 144) and basic probability courses (CS 109, EE 178).",
                "courseTitle": "Technology for Financial Systems",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Spring"
            },
            {
                "courseId": "CS 349F:",
                "courseLevel": "Graduate",
                "courseMeta": "Financial systems have spurred technological innovation and, in turn, are driven by cutting-edge technological developments.  This seminar course explores the synergy.  Students will learn from faculty and industry experts (from the finance and tech industries) how to build faster, fairer and better fintech.  Topics include network infrastructure: packet switch architectures, data center fabrics, ultra-low latency trading systems and financial exchange fabrics; cloud computing infrastructure: building large-scale risk computation platforms using virtual machines, containers and serverless computing; challenges and opportunities in building cloud-native financial exchanges: the role of fairness and synchronized clocks;  AI/ML in fintech; and trading systems based on distributed ledger technologies.  Recommended:  Knowledge of basic Networking , OS or Distributed Systems (CS 140, CS 144) and basic probability courses (CS 109, EE 178).",
                "courseTitle": "Technology for Financial Systems",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Spring"
            },
            {
                "courseId": "CS 349F:",
                "courseLevel": "Graduate",
                "courseMeta": "Financial systems have spurred technological innovation and, in turn, are driven by cutting-edge technological developments.  This seminar course explores the synergy.  Students will learn from faculty and industry experts (from the finance and tech industries) how to build faster, fairer and better fintech.  Topics include network infrastructure: packet switch architectures, data center fabrics, ultra-low latency trading systems and financial exchange fabrics; cloud computing infrastructure: building large-scale risk computation platforms using virtual machines, containers and serverless computing; challenges and opportunities in building cloud-native financial exchanges: the role of fairness and synchronized clocks;  AI/ML in fintech; and trading systems based on distributed ledger technologies.  Recommended:  Knowledge of basic Networking , OS or Distributed Systems (CS 140, CS 144) and basic probability courses (CS 109, EE 178).",
                "courseTitle": "Technology for Financial Systems",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Spring"
            },
            {
                "courseId": "CS 349F:",
                "courseLevel": "Graduate",
                "courseMeta": "Financial systems have spurred technological innovation and, in turn, are driven by cutting-edge technological developments.  This seminar course explores the synergy.  Students will learn from faculty and industry experts (from the finance and tech industries) how to build faster, fairer and better fintech.  Topics include network infrastructure: packet switch architectures, data center fabrics, ultra-low latency trading systems and financial exchange fabrics; cloud computing infrastructure: building large-scale risk computation platforms using virtual machines, containers and serverless computing; challenges and opportunities in building cloud-native financial exchanges: the role of fairness and synchronized clocks;  AI/ML in fintech; and trading systems based on distributed ledger technologies.  Recommended:  Knowledge of basic Networking , OS or Distributed Systems (CS 140, CS 144) and basic probability courses (CS 109, EE 178).",
                "courseTitle": "Technology for Financial Systems",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Spring"
            },
            {
                "courseId": "CS 349F:",
                "courseLevel": "Graduate",
                "courseMeta": "Financial systems have spurred technological innovation and, in turn, are driven by cutting-edge technological developments.  This seminar course explores the synergy.  Students will learn from faculty and industry experts (from the finance and tech industries) how to build faster, fairer and better fintech.  Topics include network infrastructure: packet switch architectures, data center fabrics, ultra-low latency trading systems and financial exchange fabrics; cloud computing infrastructure: building large-scale risk computation platforms using virtual machines, containers and serverless computing; challenges and opportunities in building cloud-native financial exchanges: the role of fairness and synchronized clocks;  AI/ML in fintech; and trading systems based on distributed ledger technologies.  Recommended:  Knowledge of basic Networking , OS or Distributed Systems (CS 140, CS 144) and basic probability courses (CS 109, EE 178).",
                "courseTitle": "Technology for Financial Systems",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Spring"
            },
            {
                "courseId": "CS 349F:",
                "courseLevel": "Graduate",
                "courseMeta": "Financial systems have spurred technological innovation and, in turn, are driven by cutting-edge technological developments.  This seminar course explores the synergy.  Students will learn from faculty and industry experts (from the finance and tech industries) how to build faster, fairer and better fintech.  Topics include network infrastructure: packet switch architectures, data center fabrics, ultra-low latency trading systems and financial exchange fabrics; cloud computing infrastructure: building large-scale risk computation platforms using virtual machines, containers and serverless computing; challenges and opportunities in building cloud-native financial exchanges: the role of fairness and synchronized clocks;  AI/ML in fintech; and trading systems based on distributed ledger technologies.  Recommended:  Knowledge of basic Networking , OS or Distributed Systems (CS 140, CS 144) and basic probability courses (CS 109, EE 178).",
                "courseTitle": "Technology for Financial Systems",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Spring"
            },
            {
                "courseId": "CS 349F:",
                "courseLevel": "Graduate",
                "courseMeta": "Financial systems have spurred technological innovation and, in turn, are driven by cutting-edge technological developments.  This seminar course explores the synergy.  Students will learn from faculty and industry experts (from the finance and tech industries) how to build faster, fairer and better fintech.  Topics include network infrastructure: packet switch architectures, data center fabrics, ultra-low latency trading systems and financial exchange fabrics; cloud computing infrastructure: building large-scale risk computation platforms using virtual machines, containers and serverless computing; challenges and opportunities in building cloud-native financial exchanges: the role of fairness and synchronized clocks;  AI/ML in fintech; and trading systems based on distributed ledger technologies.  Recommended:  Knowledge of basic Networking , OS or Distributed Systems (CS 140, CS 144) and basic probability courses (CS 109, EE 178).",
                "courseTitle": "Technology for Financial Systems",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Spring"
            },
            {
                "courseId": "CS 349F:",
                "courseLevel": "Graduate",
                "courseMeta": "Financial systems have spurred technological innovation and, in turn, are driven by cutting-edge technological developments.  This seminar course explores the synergy.  Students will learn from faculty and industry experts (from the finance and tech industries) how to build faster, fairer and better fintech.  Topics include network infrastructure: packet switch architectures, data center fabrics, ultra-low latency trading systems and financial exchange fabrics; cloud computing infrastructure: building large-scale risk computation platforms using virtual machines, containers and serverless computing; challenges and opportunities in building cloud-native financial exchanges: the role of fairness and synchronized clocks;  AI/ML in fintech; and trading systems based on distributed ledger technologies.  Recommended:  Knowledge of basic Networking , OS or Distributed Systems (CS 140, CS 144) and basic probability courses (CS 109, EE 178).",
                "courseTitle": "Technology for Financial Systems",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Spring"
            },
            {
                "courseId": "CS 349F:",
                "courseLevel": "Graduate",
                "courseMeta": "Financial systems have spurred technological innovation and, in turn, are driven by cutting-edge technological developments.  This seminar course explores the synergy.  Students will learn from faculty and industry experts (from the finance and tech industries) how to build faster, fairer and better fintech.  Topics include network infrastructure: packet switch architectures, data center fabrics, ultra-low latency trading systems and financial exchange fabrics; cloud computing infrastructure: building large-scale risk computation platforms using virtual machines, containers and serverless computing; challenges and opportunities in building cloud-native financial exchanges: the role of fairness and synchronized clocks;  AI/ML in fintech; and trading systems based on distributed ledger technologies.  Recommended:  Knowledge of basic Networking , OS or Distributed Systems (CS 140, CS 144) and basic probability courses (CS 109, EE 178).",
                "courseTitle": "Technology for Financial Systems",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Spring"
            },
            {
                "courseId": "CS 349F:",
                "courseLevel": "Graduate",
                "courseMeta": "Financial systems have spurred technological innovation and, in turn, are driven by cutting-edge technological developments.  This seminar course explores the synergy.  Students will learn from faculty and industry experts (from the finance and tech industries) how to build faster, fairer and better fintech.  Topics include network infrastructure: packet switch architectures, data center fabrics, ultra-low latency trading systems and financial exchange fabrics; cloud computing infrastructure: building large-scale risk computation platforms using virtual machines, containers and serverless computing; challenges and opportunities in building cloud-native financial exchanges: the role of fairness and synchronized clocks;  AI/ML in fintech; and trading systems based on distributed ledger technologies.  Recommended:  Knowledge of basic Networking , OS or Distributed Systems (CS 140, CS 144) and basic probability courses (CS 109, EE 178).",
                "courseTitle": "Technology for Financial Systems",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Spring"
            }
        ]
    },
    "Bill dally": {
        "corpus": {
            "DBLP": "https://dblp.uni-trier.de/pers/hd/d/Dally:William_J=",
            "Google Scholar": "https://scholar.google.com/citations?user=YZHj-Y4AAAAJ&hl=en&oi=ao",
            "domain": "",
            "home": "http://csl.stanford.edu/~billd"
        },
        "courses": [
            {
                "courseId": "CS 390A:",
                "courseLevel": "Graduate",
                "courseMeta": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.",
                "courseTitle": "Curricular Practical Training",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "CS 390A:",
                "courseLevel": "Graduate",
                "courseMeta": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.",
                "courseTitle": "Curricular Practical Training",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "CS 390A:",
                "courseLevel": "Graduate",
                "courseMeta": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.",
                "courseTitle": "Curricular Practical Training",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "CS 390A:",
                "courseLevel": "Graduate",
                "courseMeta": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.",
                "courseTitle": "Curricular Practical Training",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "CS 390A:",
                "courseLevel": "Graduate",
                "courseMeta": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.",
                "courseTitle": "Curricular Practical Training",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "CS 390A:",
                "courseLevel": "Graduate",
                "courseMeta": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.",
                "courseTitle": "Curricular Practical Training",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "CS 390A:",
                "courseLevel": "Graduate",
                "courseMeta": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.",
                "courseTitle": "Curricular Practical Training",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "CS 390A:",
                "courseLevel": "Graduate",
                "courseMeta": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.",
                "courseTitle": "Curricular Practical Training",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "CS 390A:",
                "courseLevel": "Graduate",
                "courseMeta": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.",
                "courseTitle": "Curricular Practical Training",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "CS 390A:",
                "courseLevel": "Graduate",
                "courseMeta": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.",
                "courseTitle": "Curricular Practical Training",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "CS 390A:",
                "courseLevel": "Graduate",
                "courseMeta": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.",
                "courseTitle": "Curricular Practical Training",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "CS 390A:",
                "courseLevel": "Graduate",
                "courseMeta": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.",
                "courseTitle": "Curricular Practical Training",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "CS 390A:",
                "courseLevel": "Graduate",
                "courseMeta": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.",
                "courseTitle": "Curricular Practical Training",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "CS 390A:",
                "courseLevel": "Graduate",
                "courseMeta": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.",
                "courseTitle": "Curricular Practical Training",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "CS 390A:",
                "courseLevel": "Graduate",
                "courseMeta": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.",
                "courseTitle": "Curricular Practical Training",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "CS 390A:",
                "courseLevel": "Graduate",
                "courseMeta": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.",
                "courseTitle": "Curricular Practical Training",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "CS 390A:",
                "courseLevel": "Graduate",
                "courseMeta": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.",
                "courseTitle": "Curricular Practical Training",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "CS 390A:",
                "courseLevel": "Graduate",
                "courseMeta": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.",
                "courseTitle": "Curricular Practical Training",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "CS 390A:",
                "courseLevel": "Graduate",
                "courseMeta": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.",
                "courseTitle": "Curricular Practical Training",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "CS 390A:",
                "courseLevel": "Graduate",
                "courseMeta": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.",
                "courseTitle": "Curricular Practical Training",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "CS 390A:",
                "courseLevel": "Graduate",
                "courseMeta": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.",
                "courseTitle": "Curricular Practical Training",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "CS 390A:",
                "courseLevel": "Graduate",
                "courseMeta": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.",
                "courseTitle": "Curricular Practical Training",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "CS 390A:",
                "courseLevel": "Graduate",
                "courseMeta": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.",
                "courseTitle": "Curricular Practical Training",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Fall, Winter, Spring, Summer"
            }
        ]
    },
    "Chris Piech": {
        "corpus": {
            "DBLP": "https://dblp.uni-trier.de/pers/hd/p/Piech:Chris",
            "Google Scholar": "https://scholar.google.com/citations?user=fpT49d8AAAAJ&hl=en&oi=ao",
            "domain": "ml",
            "home": "https://stanford.edu/~cpiech/bio/index.html"
        },
        "courses": [
            {
                "courseId": "CS 21SI:",
                "courseLevel": "Undergraduate",
                "courseMeta": "Students will learn about and apply cutting-edge artificial intelligence techniques to real-world social good spaces (such as healthcare, government, education, and environment). Taught jointly by CS+Social Good and the Stanford AI Group, the aim of the class is to empower students to apply these techniques outside of the classroom. The class will focus on techniques from machine learning and deep learning, including regression, support vector machines (SVMs), neural networks, convolutional neural networks (CNNs), and recurrent neural networks (RNNs). The course alternates between lectures on machine learning theory and discussions with invited speakers, who will challenge students to apply techniques in their social good domains. Students complete weekly coding assignments reinforcing machine learning concepts and applications. Prerequisites: programming experience at the level of CS107, mathematical fluency at the level of CS103, comfort with probability at the level of CS109 (or equivalent). Application required for enrollment.",
                "courseTitle": "AI for Social Good",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "2",
                "semester": "Spring"
            },
            {
                "courseId": "CS 21SI:",
                "courseLevel": "Undergraduate",
                "courseMeta": "Students will learn about and apply cutting-edge artificial intelligence techniques to real-world social good spaces (such as healthcare, government, education, and environment). Taught jointly by CS+Social Good and the Stanford AI Group, the aim of the class is to empower students to apply these techniques outside of the classroom. The class will focus on techniques from machine learning and deep learning, including regression, support vector machines (SVMs), neural networks, convolutional neural networks (CNNs), and recurrent neural networks (RNNs). The course alternates between lectures on machine learning theory and discussions with invited speakers, who will challenge students to apply techniques in their social good domains. Students complete weekly coding assignments reinforcing machine learning concepts and applications. Prerequisites: programming experience at the level of CS107, mathematical fluency at the level of CS103, comfort with probability at the level of CS109 (or equivalent). Application required for enrollment.",
                "courseTitle": "AI for Social Good",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "2",
                "semester": "Spring"
            },
            {
                "courseId": "CS 21SI:",
                "courseLevel": "Undergraduate",
                "courseMeta": "Students will learn about and apply cutting-edge artificial intelligence techniques to real-world social good spaces (such as healthcare, government, education, and environment). Taught jointly by CS+Social Good and the Stanford AI Group, the aim of the class is to empower students to apply these techniques outside of the classroom. The class will focus on techniques from machine learning and deep learning, including regression, support vector machines (SVMs), neural networks, convolutional neural networks (CNNs), and recurrent neural networks (RNNs). The course alternates between lectures on machine learning theory and discussions with invited speakers, who will challenge students to apply techniques in their social good domains. Students complete weekly coding assignments reinforcing machine learning concepts and applications. Prerequisites: programming experience at the level of CS107, mathematical fluency at the level of CS103, comfort with probability at the level of CS109 (or equivalent). Application required for enrollment.",
                "courseTitle": "AI for Social Good",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "2",
                "semester": "Spring"
            },
            {
                "courseId": "CS 21SI:",
                "courseLevel": "Undergraduate",
                "courseMeta": "Students will learn about and apply cutting-edge artificial intelligence techniques to real-world social good spaces (such as healthcare, government, education, and environment). Taught jointly by CS+Social Good and the Stanford AI Group, the aim of the class is to empower students to apply these techniques outside of the classroom. The class will focus on techniques from machine learning and deep learning, including regression, support vector machines (SVMs), neural networks, convolutional neural networks (CNNs), and recurrent neural networks (RNNs). The course alternates between lectures on machine learning theory and discussions with invited speakers, who will challenge students to apply techniques in their social good domains. Students complete weekly coding assignments reinforcing machine learning concepts and applications. Prerequisites: programming experience at the level of CS107, mathematical fluency at the level of CS103, comfort with probability at the level of CS109 (or equivalent). Application required for enrollment.",
                "courseTitle": "AI for Social Good",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "2",
                "semester": "Spring"
            },
            {
                "courseId": "CS 21SI:",
                "courseLevel": "Undergraduate",
                "courseMeta": "Students will learn about and apply cutting-edge artificial intelligence techniques to real-world social good spaces (such as healthcare, government, education, and environment). Taught jointly by CS+Social Good and the Stanford AI Group, the aim of the class is to empower students to apply these techniques outside of the classroom. The class will focus on techniques from machine learning and deep learning, including regression, support vector machines (SVMs), neural networks, convolutional neural networks (CNNs), and recurrent neural networks (RNNs). The course alternates between lectures on machine learning theory and discussions with invited speakers, who will challenge students to apply techniques in their social good domains. Students complete weekly coding assignments reinforcing machine learning concepts and applications. Prerequisites: programming experience at the level of CS107, mathematical fluency at the level of CS103, comfort with probability at the level of CS109 (or equivalent). Application required for enrollment.",
                "courseTitle": "AI for Social Good",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "2",
                "semester": "Spring"
            },
            {
                "courseId": "CS 21SI:",
                "courseLevel": "Undergraduate",
                "courseMeta": "Students will learn about and apply cutting-edge artificial intelligence techniques to real-world social good spaces (such as healthcare, government, education, and environment). Taught jointly by CS+Social Good and the Stanford AI Group, the aim of the class is to empower students to apply these techniques outside of the classroom. The class will focus on techniques from machine learning and deep learning, including regression, support vector machines (SVMs), neural networks, convolutional neural networks (CNNs), and recurrent neural networks (RNNs). The course alternates between lectures on machine learning theory and discussions with invited speakers, who will challenge students to apply techniques in their social good domains. Students complete weekly coding assignments reinforcing machine learning concepts and applications. Prerequisites: programming experience at the level of CS107, mathematical fluency at the level of CS103, comfort with probability at the level of CS109 (or equivalent). Application required for enrollment.",
                "courseTitle": "AI for Social Good",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "2",
                "semester": "Spring"
            },
            {
                "courseId": "CS 21SI:",
                "courseLevel": "Undergraduate",
                "courseMeta": "Students will learn about and apply cutting-edge artificial intelligence techniques to real-world social good spaces (such as healthcare, government, education, and environment). Taught jointly by CS+Social Good and the Stanford AI Group, the aim of the class is to empower students to apply these techniques outside of the classroom. The class will focus on techniques from machine learning and deep learning, including regression, support vector machines (SVMs), neural networks, convolutional neural networks (CNNs), and recurrent neural networks (RNNs). The course alternates between lectures on machine learning theory and discussions with invited speakers, who will challenge students to apply techniques in their social good domains. Students complete weekly coding assignments reinforcing machine learning concepts and applications. Prerequisites: programming experience at the level of CS107, mathematical fluency at the level of CS103, comfort with probability at the level of CS109 (or equivalent). Application required for enrollment.",
                "courseTitle": "AI for Social Good",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "2",
                "semester": "Spring"
            },
            {
                "courseId": "CS 21SI:",
                "courseLevel": "Undergraduate",
                "courseMeta": "Students will learn about and apply cutting-edge artificial intelligence techniques to real-world social good spaces (such as healthcare, government, education, and environment). Taught jointly by CS+Social Good and the Stanford AI Group, the aim of the class is to empower students to apply these techniques outside of the classroom. The class will focus on techniques from machine learning and deep learning, including regression, support vector machines (SVMs), neural networks, convolutional neural networks (CNNs), and recurrent neural networks (RNNs). The course alternates between lectures on machine learning theory and discussions with invited speakers, who will challenge students to apply techniques in their social good domains. Students complete weekly coding assignments reinforcing machine learning concepts and applications. Prerequisites: programming experience at the level of CS107, mathematical fluency at the level of CS103, comfort with probability at the level of CS109 (or equivalent). Application required for enrollment.",
                "courseTitle": "AI for Social Good",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "2",
                "semester": "Spring"
            },
            {
                "courseId": "CS 21SI:",
                "courseLevel": "Undergraduate",
                "courseMeta": "Students will learn about and apply cutting-edge artificial intelligence techniques to real-world social good spaces (such as healthcare, government, education, and environment). Taught jointly by CS+Social Good and the Stanford AI Group, the aim of the class is to empower students to apply these techniques outside of the classroom. The class will focus on techniques from machine learning and deep learning, including regression, support vector machines (SVMs), neural networks, convolutional neural networks (CNNs), and recurrent neural networks (RNNs). The course alternates between lectures on machine learning theory and discussions with invited speakers, who will challenge students to apply techniques in their social good domains. Students complete weekly coding assignments reinforcing machine learning concepts and applications. Prerequisites: programming experience at the level of CS107, mathematical fluency at the level of CS103, comfort with probability at the level of CS109 (or equivalent). Application required for enrollment.",
                "courseTitle": "AI for Social Good",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "2",
                "semester": "Spring"
            },
            {
                "courseId": "CS 21SI:",
                "courseLevel": "Undergraduate",
                "courseMeta": "Students will learn about and apply cutting-edge artificial intelligence techniques to real-world social good spaces (such as healthcare, government, education, and environment). Taught jointly by CS+Social Good and the Stanford AI Group, the aim of the class is to empower students to apply these techniques outside of the classroom. The class will focus on techniques from machine learning and deep learning, including regression, support vector machines (SVMs), neural networks, convolutional neural networks (CNNs), and recurrent neural networks (RNNs). The course alternates between lectures on machine learning theory and discussions with invited speakers, who will challenge students to apply techniques in their social good domains. Students complete weekly coding assignments reinforcing machine learning concepts and applications. Prerequisites: programming experience at the level of CS107, mathematical fluency at the level of CS103, comfort with probability at the level of CS109 (or equivalent). Application required for enrollment.",
                "courseTitle": "AI for Social Good",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "2",
                "semester": "Spring"
            }
        ]
    },
    "Christopher D. Manning": {
        "corpus": {
            "DBLP": "https://dblp.uni-trier.de/pers/hd/m/Manning:Christopher_D=",
            "Google Scholar": "https://scholar.google.com/citations?user=1zmDOdwAAAAJ&hl=en&oi=ao",
            "domain": "vision",
            "home": "http://nlp.stanford.edu/manning"
        },
        "courses": [
            {
                "courseId": "BIOMEDIN 290:",
                "courseLevel": "Graduate",
                "courseMeta": "Hands-on training in biomedical informatics pedagogy. Practical experience in pedagogical approaches, variously including didactic, inquiry, project, team, case, field, and/or problem-based approaches. Students create course content, including lectures, exercises, and assessments, and evaluate learning activities and outcomes. Prerequisite: instructor consent.",
                "courseTitle": "Biomedical Informatics Teaching Methods",
                "gradingMethod": "Medical Option (Med-Ltr-CR/NC)",
                "numberOfUnits": "1-6",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "BIOMEDIN 290:",
                "courseLevel": "Graduate",
                "courseMeta": "Hands-on training in biomedical informatics pedagogy. Practical experience in pedagogical approaches, variously including didactic, inquiry, project, team, case, field, and/or problem-based approaches. Students create course content, including lectures, exercises, and assessments, and evaluate learning activities and outcomes. Prerequisite: instructor consent.",
                "courseTitle": "Biomedical Informatics Teaching Methods",
                "gradingMethod": "Medical Option (Med-Ltr-CR/NC)",
                "numberOfUnits": "1-6",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "BIOMEDIN 290:",
                "courseLevel": "Graduate",
                "courseMeta": "Hands-on training in biomedical informatics pedagogy. Practical experience in pedagogical approaches, variously including didactic, inquiry, project, team, case, field, and/or problem-based approaches. Students create course content, including lectures, exercises, and assessments, and evaluate learning activities and outcomes. Prerequisite: instructor consent.",
                "courseTitle": "Biomedical Informatics Teaching Methods",
                "gradingMethod": "Medical Option (Med-Ltr-CR/NC)",
                "numberOfUnits": "1-6",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "BIOMEDIN 290:",
                "courseLevel": "Graduate",
                "courseMeta": "Hands-on training in biomedical informatics pedagogy. Practical experience in pedagogical approaches, variously including didactic, inquiry, project, team, case, field, and/or problem-based approaches. Students create course content, including lectures, exercises, and assessments, and evaluate learning activities and outcomes. Prerequisite: instructor consent.",
                "courseTitle": "Biomedical Informatics Teaching Methods",
                "gradingMethod": "Medical Option (Med-Ltr-CR/NC)",
                "numberOfUnits": "1-6",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "BIOMEDIN 290:",
                "courseLevel": "Graduate",
                "courseMeta": "Hands-on training in biomedical informatics pedagogy. Practical experience in pedagogical approaches, variously including didactic, inquiry, project, team, case, field, and/or problem-based approaches. Students create course content, including lectures, exercises, and assessments, and evaluate learning activities and outcomes. Prerequisite: instructor consent.",
                "courseTitle": "Biomedical Informatics Teaching Methods",
                "gradingMethod": "Medical Option (Med-Ltr-CR/NC)",
                "numberOfUnits": "1-6",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "BIOMEDIN 290:",
                "courseLevel": "Graduate",
                "courseMeta": "Hands-on training in biomedical informatics pedagogy. Practical experience in pedagogical approaches, variously including didactic, inquiry, project, team, case, field, and/or problem-based approaches. Students create course content, including lectures, exercises, and assessments, and evaluate learning activities and outcomes. Prerequisite: instructor consent.",
                "courseTitle": "Biomedical Informatics Teaching Methods",
                "gradingMethod": "Medical Option (Med-Ltr-CR/NC)",
                "numberOfUnits": "1-6",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "BIOMEDIN 290:",
                "courseLevel": "Graduate",
                "courseMeta": "Hands-on training in biomedical informatics pedagogy. Practical experience in pedagogical approaches, variously including didactic, inquiry, project, team, case, field, and/or problem-based approaches. Students create course content, including lectures, exercises, and assessments, and evaluate learning activities and outcomes. Prerequisite: instructor consent.",
                "courseTitle": "Biomedical Informatics Teaching Methods",
                "gradingMethod": "Medical Option (Med-Ltr-CR/NC)",
                "numberOfUnits": "1-6",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "BIOMEDIN 290:",
                "courseLevel": "Graduate",
                "courseMeta": "Hands-on training in biomedical informatics pedagogy. Practical experience in pedagogical approaches, variously including didactic, inquiry, project, team, case, field, and/or problem-based approaches. Students create course content, including lectures, exercises, and assessments, and evaluate learning activities and outcomes. Prerequisite: instructor consent.",
                "courseTitle": "Biomedical Informatics Teaching Methods",
                "gradingMethod": "Medical Option (Med-Ltr-CR/NC)",
                "numberOfUnits": "1-6",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "BIOMEDIN 290:",
                "courseLevel": "Graduate",
                "courseMeta": "Hands-on training in biomedical informatics pedagogy. Practical experience in pedagogical approaches, variously including didactic, inquiry, project, team, case, field, and/or problem-based approaches. Students create course content, including lectures, exercises, and assessments, and evaluate learning activities and outcomes. Prerequisite: instructor consent.",
                "courseTitle": "Biomedical Informatics Teaching Methods",
                "gradingMethod": "Medical Option (Med-Ltr-CR/NC)",
                "numberOfUnits": "1-6",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "BIOMEDIN 290:",
                "courseLevel": "Graduate",
                "courseMeta": "Hands-on training in biomedical informatics pedagogy. Practical experience in pedagogical approaches, variously including didactic, inquiry, project, team, case, field, and/or problem-based approaches. Students create course content, including lectures, exercises, and assessments, and evaluate learning activities and outcomes. Prerequisite: instructor consent.",
                "courseTitle": "Biomedical Informatics Teaching Methods",
                "gradingMethod": "Medical Option (Med-Ltr-CR/NC)",
                "numberOfUnits": "1-6",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "BIOMEDIN 290:",
                "courseLevel": "Graduate",
                "courseMeta": "Hands-on training in biomedical informatics pedagogy. Practical experience in pedagogical approaches, variously including didactic, inquiry, project, team, case, field, and/or problem-based approaches. Students create course content, including lectures, exercises, and assessments, and evaluate learning activities and outcomes. Prerequisite: instructor consent.",
                "courseTitle": "Biomedical Informatics Teaching Methods",
                "gradingMethod": "Medical Option (Med-Ltr-CR/NC)",
                "numberOfUnits": "1-6",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "BIOMEDIN 290:",
                "courseLevel": "Graduate",
                "courseMeta": "Hands-on training in biomedical informatics pedagogy. Practical experience in pedagogical approaches, variously including didactic, inquiry, project, team, case, field, and/or problem-based approaches. Students create course content, including lectures, exercises, and assessments, and evaluate learning activities and outcomes. Prerequisite: instructor consent.",
                "courseTitle": "Biomedical Informatics Teaching Methods",
                "gradingMethod": "Medical Option (Med-Ltr-CR/NC)",
                "numberOfUnits": "1-6",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "BIOMEDIN 290:",
                "courseLevel": "Graduate",
                "courseMeta": "Hands-on training in biomedical informatics pedagogy. Practical experience in pedagogical approaches, variously including didactic, inquiry, project, team, case, field, and/or problem-based approaches. Students create course content, including lectures, exercises, and assessments, and evaluate learning activities and outcomes. Prerequisite: instructor consent.",
                "courseTitle": "Biomedical Informatics Teaching Methods",
                "gradingMethod": "Medical Option (Med-Ltr-CR/NC)",
                "numberOfUnits": "1-6",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "BIOMEDIN 290:",
                "courseLevel": "Graduate",
                "courseMeta": "Hands-on training in biomedical informatics pedagogy. Practical experience in pedagogical approaches, variously including didactic, inquiry, project, team, case, field, and/or problem-based approaches. Students create course content, including lectures, exercises, and assessments, and evaluate learning activities and outcomes. Prerequisite: instructor consent.",
                "courseTitle": "Biomedical Informatics Teaching Methods",
                "gradingMethod": "Medical Option (Med-Ltr-CR/NC)",
                "numberOfUnits": "1-6",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "BIOMEDIN 290:",
                "courseLevel": "Graduate",
                "courseMeta": "Hands-on training in biomedical informatics pedagogy. Practical experience in pedagogical approaches, variously including didactic, inquiry, project, team, case, field, and/or problem-based approaches. Students create course content, including lectures, exercises, and assessments, and evaluate learning activities and outcomes. Prerequisite: instructor consent.",
                "courseTitle": "Biomedical Informatics Teaching Methods",
                "gradingMethod": "Medical Option (Med-Ltr-CR/NC)",
                "numberOfUnits": "1-6",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "BIOMEDIN 290:",
                "courseLevel": "Graduate",
                "courseMeta": "Hands-on training in biomedical informatics pedagogy. Practical experience in pedagogical approaches, variously including didactic, inquiry, project, team, case, field, and/or problem-based approaches. Students create course content, including lectures, exercises, and assessments, and evaluate learning activities and outcomes. Prerequisite: instructor consent.",
                "courseTitle": "Biomedical Informatics Teaching Methods",
                "gradingMethod": "Medical Option (Med-Ltr-CR/NC)",
                "numberOfUnits": "1-6",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "BIOMEDIN 290:",
                "courseLevel": "Graduate",
                "courseMeta": "Hands-on training in biomedical informatics pedagogy. Practical experience in pedagogical approaches, variously including didactic, inquiry, project, team, case, field, and/or problem-based approaches. Students create course content, including lectures, exercises, and assessments, and evaluate learning activities and outcomes. Prerequisite: instructor consent.",
                "courseTitle": "Biomedical Informatics Teaching Methods",
                "gradingMethod": "Medical Option (Med-Ltr-CR/NC)",
                "numberOfUnits": "1-6",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "BIOMEDIN 290:",
                "courseLevel": "Graduate",
                "courseMeta": "Hands-on training in biomedical informatics pedagogy. Practical experience in pedagogical approaches, variously including didactic, inquiry, project, team, case, field, and/or problem-based approaches. Students create course content, including lectures, exercises, and assessments, and evaluate learning activities and outcomes. Prerequisite: instructor consent.",
                "courseTitle": "Biomedical Informatics Teaching Methods",
                "gradingMethod": "Medical Option (Med-Ltr-CR/NC)",
                "numberOfUnits": "1-6",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "BIOMEDIN 290:",
                "courseLevel": "Graduate",
                "courseMeta": "Hands-on training in biomedical informatics pedagogy. Practical experience in pedagogical approaches, variously including didactic, inquiry, project, team, case, field, and/or problem-based approaches. Students create course content, including lectures, exercises, and assessments, and evaluate learning activities and outcomes. Prerequisite: instructor consent.",
                "courseTitle": "Biomedical Informatics Teaching Methods",
                "gradingMethod": "Medical Option (Med-Ltr-CR/NC)",
                "numberOfUnits": "1-6",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "BIOMEDIN 290:",
                "courseLevel": "Graduate",
                "courseMeta": "Hands-on training in biomedical informatics pedagogy. Practical experience in pedagogical approaches, variously including didactic, inquiry, project, team, case, field, and/or problem-based approaches. Students create course content, including lectures, exercises, and assessments, and evaluate learning activities and outcomes. Prerequisite: instructor consent.",
                "courseTitle": "Biomedical Informatics Teaching Methods",
                "gradingMethod": "Medical Option (Med-Ltr-CR/NC)",
                "numberOfUnits": "1-6",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "BIOMEDIN 290:",
                "courseLevel": "Graduate",
                "courseMeta": "Hands-on training in biomedical informatics pedagogy. Practical experience in pedagogical approaches, variously including didactic, inquiry, project, team, case, field, and/or problem-based approaches. Students create course content, including lectures, exercises, and assessments, and evaluate learning activities and outcomes. Prerequisite: instructor consent.",
                "courseTitle": "Biomedical Informatics Teaching Methods",
                "gradingMethod": "Medical Option (Med-Ltr-CR/NC)",
                "numberOfUnits": "1-6",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "BIOMEDIN 290:",
                "courseLevel": "Graduate",
                "courseMeta": "Hands-on training in biomedical informatics pedagogy. Practical experience in pedagogical approaches, variously including didactic, inquiry, project, team, case, field, and/or problem-based approaches. Students create course content, including lectures, exercises, and assessments, and evaluate learning activities and outcomes. Prerequisite: instructor consent.",
                "courseTitle": "Biomedical Informatics Teaching Methods",
                "gradingMethod": "Medical Option (Med-Ltr-CR/NC)",
                "numberOfUnits": "1-6",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "BIOMEDIN 290:",
                "courseLevel": "Graduate",
                "courseMeta": "Hands-on training in biomedical informatics pedagogy. Practical experience in pedagogical approaches, variously including didactic, inquiry, project, team, case, field, and/or problem-based approaches. Students create course content, including lectures, exercises, and assessments, and evaluate learning activities and outcomes. Prerequisite: instructor consent.",
                "courseTitle": "Biomedical Informatics Teaching Methods",
                "gradingMethod": "Medical Option (Med-Ltr-CR/NC)",
                "numberOfUnits": "1-6",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "BIOMEDIN 290:",
                "courseLevel": "Graduate",
                "courseMeta": "Hands-on training in biomedical informatics pedagogy. Practical experience in pedagogical approaches, variously including didactic, inquiry, project, team, case, field, and/or problem-based approaches. Students create course content, including lectures, exercises, and assessments, and evaluate learning activities and outcomes. Prerequisite: instructor consent.",
                "courseTitle": "Biomedical Informatics Teaching Methods",
                "gradingMethod": "Medical Option (Med-Ltr-CR/NC)",
                "numberOfUnits": "1-6",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "BIOMEDIN 290:",
                "courseLevel": "Graduate",
                "courseMeta": "Hands-on training in biomedical informatics pedagogy. Practical experience in pedagogical approaches, variously including didactic, inquiry, project, team, case, field, and/or problem-based approaches. Students create course content, including lectures, exercises, and assessments, and evaluate learning activities and outcomes. Prerequisite: instructor consent.",
                "courseTitle": "Biomedical Informatics Teaching Methods",
                "gradingMethod": "Medical Option (Med-Ltr-CR/NC)",
                "numberOfUnits": "1-6",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "BIOMEDIN 290:",
                "courseLevel": "Graduate",
                "courseMeta": "Hands-on training in biomedical informatics pedagogy. Practical experience in pedagogical approaches, variously including didactic, inquiry, project, team, case, field, and/or problem-based approaches. Students create course content, including lectures, exercises, and assessments, and evaluate learning activities and outcomes. Prerequisite: instructor consent.",
                "courseTitle": "Biomedical Informatics Teaching Methods",
                "gradingMethod": "Medical Option (Med-Ltr-CR/NC)",
                "numberOfUnits": "1-6",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "BIOMEDIN 290:",
                "courseLevel": "Graduate",
                "courseMeta": "Hands-on training in biomedical informatics pedagogy. Practical experience in pedagogical approaches, variously including didactic, inquiry, project, team, case, field, and/or problem-based approaches. Students create course content, including lectures, exercises, and assessments, and evaluate learning activities and outcomes. Prerequisite: instructor consent.",
                "courseTitle": "Biomedical Informatics Teaching Methods",
                "gradingMethod": "Medical Option (Med-Ltr-CR/NC)",
                "numberOfUnits": "1-6",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "BIOMEDIN 290:",
                "courseLevel": "Graduate",
                "courseMeta": "Hands-on training in biomedical informatics pedagogy. Practical experience in pedagogical approaches, variously including didactic, inquiry, project, team, case, field, and/or problem-based approaches. Students create course content, including lectures, exercises, and assessments, and evaluate learning activities and outcomes. Prerequisite: instructor consent.",
                "courseTitle": "Biomedical Informatics Teaching Methods",
                "gradingMethod": "Medical Option (Med-Ltr-CR/NC)",
                "numberOfUnits": "1-6",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "BIOMEDIN 290:",
                "courseLevel": "Graduate",
                "courseMeta": "Hands-on training in biomedical informatics pedagogy. Practical experience in pedagogical approaches, variously including didactic, inquiry, project, team, case, field, and/or problem-based approaches. Students create course content, including lectures, exercises, and assessments, and evaluate learning activities and outcomes. Prerequisite: instructor consent.",
                "courseTitle": "Biomedical Informatics Teaching Methods",
                "gradingMethod": "Medical Option (Med-Ltr-CR/NC)",
                "numberOfUnits": "1-6",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "BIOMEDIN 290:",
                "courseLevel": "Graduate",
                "courseMeta": "Hands-on training in biomedical informatics pedagogy. Practical experience in pedagogical approaches, variously including didactic, inquiry, project, team, case, field, and/or problem-based approaches. Students create course content, including lectures, exercises, and assessments, and evaluate learning activities and outcomes. Prerequisite: instructor consent.",
                "courseTitle": "Biomedical Informatics Teaching Methods",
                "gradingMethod": "Medical Option (Med-Ltr-CR/NC)",
                "numberOfUnits": "1-6",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "BIOMEDIN 290:",
                "courseLevel": "Graduate",
                "courseMeta": "Hands-on training in biomedical informatics pedagogy. Practical experience in pedagogical approaches, variously including didactic, inquiry, project, team, case, field, and/or problem-based approaches. Students create course content, including lectures, exercises, and assessments, and evaluate learning activities and outcomes. Prerequisite: instructor consent.",
                "courseTitle": "Biomedical Informatics Teaching Methods",
                "gradingMethod": "Medical Option (Med-Ltr-CR/NC)",
                "numberOfUnits": "1-6",
                "semester": "Fall, Winter, Spring, Summer"
            }
        ]
    },
    "Christopher Re": {
        "corpus": {
            "DBLP": "https://dblp.uni-trier.de/pers/hd/r/R=eacute=:Christopher",
            "Google Scholar": "https://scholar.google.com/citations?user=DnnCWN0AAAAJ&hl=en&oi=ao",
            "domain": "nlp",
            "home": "http://cs.stanford.edu/people/chrismre"
        },
        "courses": [
            {
                "courseId": "CS 229:",
                "courseLevel": "Graduate",
                "courseMeta": "Topics: statistical pattern recognition, linear and non-linear regression, non-parametric methods, exponential family, GLMs, support vector machines, kernel methods, model/feature selection, learning theory, VC dimension, clustering, density estimation, EM, dimensionality reduction, ICA, PCA, reinforcement learning and adaptive control, Markov decision processes, approximate dynamic programming, and policy search. Prerequisites: linear algebra, and basic probability and statistics.",
                "courseTitle": "Machine Learning (STATS 229)",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3-4",
                "semester": "Fall, Spring, Summer"
            },
            {
                "courseId": "CS 229:",
                "courseLevel": "Graduate",
                "courseMeta": "Topics: statistical pattern recognition, linear and non-linear regression, non-parametric methods, exponential family, GLMs, support vector machines, kernel methods, model/feature selection, learning theory, VC dimension, clustering, density estimation, EM, dimensionality reduction, ICA, PCA, reinforcement learning and adaptive control, Markov decision processes, approximate dynamic programming, and policy search. Prerequisites: linear algebra, and basic probability and statistics.",
                "courseTitle": "Machine Learning (STATS 229)",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3-4",
                "semester": "Fall, Spring, Summer"
            },
            {
                "courseId": "CS 229:",
                "courseLevel": "Graduate",
                "courseMeta": "Topics: statistical pattern recognition, linear and non-linear regression, non-parametric methods, exponential family, GLMs, support vector machines, kernel methods, model/feature selection, learning theory, VC dimension, clustering, density estimation, EM, dimensionality reduction, ICA, PCA, reinforcement learning and adaptive control, Markov decision processes, approximate dynamic programming, and policy search. Prerequisites: linear algebra, and basic probability and statistics.",
                "courseTitle": "Machine Learning (STATS 229)",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3-4",
                "semester": "Fall, Spring, Summer"
            },
            {
                "courseId": "CS 229:",
                "courseLevel": "Graduate",
                "courseMeta": "Topics: statistical pattern recognition, linear and non-linear regression, non-parametric methods, exponential family, GLMs, support vector machines, kernel methods, model/feature selection, learning theory, VC dimension, clustering, density estimation, EM, dimensionality reduction, ICA, PCA, reinforcement learning and adaptive control, Markov decision processes, approximate dynamic programming, and policy search. Prerequisites: linear algebra, and basic probability and statistics.",
                "courseTitle": "Machine Learning (STATS 229)",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3-4",
                "semester": "Fall, Spring, Summer"
            },
            {
                "courseId": "CS 229:",
                "courseLevel": "Graduate",
                "courseMeta": "Topics: statistical pattern recognition, linear and non-linear regression, non-parametric methods, exponential family, GLMs, support vector machines, kernel methods, model/feature selection, learning theory, VC dimension, clustering, density estimation, EM, dimensionality reduction, ICA, PCA, reinforcement learning and adaptive control, Markov decision processes, approximate dynamic programming, and policy search. Prerequisites: linear algebra, and basic probability and statistics.",
                "courseTitle": "Machine Learning (STATS 229)",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3-4",
                "semester": "Fall, Spring, Summer"
            },
            {
                "courseId": "CS 229:",
                "courseLevel": "Graduate",
                "courseMeta": "Topics: statistical pattern recognition, linear and non-linear regression, non-parametric methods, exponential family, GLMs, support vector machines, kernel methods, model/feature selection, learning theory, VC dimension, clustering, density estimation, EM, dimensionality reduction, ICA, PCA, reinforcement learning and adaptive control, Markov decision processes, approximate dynamic programming, and policy search. Prerequisites: linear algebra, and basic probability and statistics.",
                "courseTitle": "Machine Learning (STATS 229)",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3-4",
                "semester": "Fall, Spring, Summer"
            },
            {
                "courseId": "CS 229:",
                "courseLevel": "Graduate",
                "courseMeta": "Topics: statistical pattern recognition, linear and non-linear regression, non-parametric methods, exponential family, GLMs, support vector machines, kernel methods, model/feature selection, learning theory, VC dimension, clustering, density estimation, EM, dimensionality reduction, ICA, PCA, reinforcement learning and adaptive control, Markov decision processes, approximate dynamic programming, and policy search. Prerequisites: linear algebra, and basic probability and statistics.",
                "courseTitle": "Machine Learning (STATS 229)",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3-4",
                "semester": "Fall, Spring, Summer"
            },
            {
                "courseId": "CS 229:",
                "courseLevel": "Graduate",
                "courseMeta": "Topics: statistical pattern recognition, linear and non-linear regression, non-parametric methods, exponential family, GLMs, support vector machines, kernel methods, model/feature selection, learning theory, VC dimension, clustering, density estimation, EM, dimensionality reduction, ICA, PCA, reinforcement learning and adaptive control, Markov decision processes, approximate dynamic programming, and policy search. Prerequisites: linear algebra, and basic probability and statistics.",
                "courseTitle": "Machine Learning (STATS 229)",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3-4",
                "semester": "Fall, Spring, Summer"
            },
            {
                "courseId": "CS 229:",
                "courseLevel": "Graduate",
                "courseMeta": "Topics: statistical pattern recognition, linear and non-linear regression, non-parametric methods, exponential family, GLMs, support vector machines, kernel methods, model/feature selection, learning theory, VC dimension, clustering, density estimation, EM, dimensionality reduction, ICA, PCA, reinforcement learning and adaptive control, Markov decision processes, approximate dynamic programming, and policy search. Prerequisites: linear algebra, and basic probability and statistics.",
                "courseTitle": "Machine Learning (STATS 229)",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3-4",
                "semester": "Fall, Spring, Summer"
            },
            {
                "courseId": "CS 229:",
                "courseLevel": "Graduate",
                "courseMeta": "Topics: statistical pattern recognition, linear and non-linear regression, non-parametric methods, exponential family, GLMs, support vector machines, kernel methods, model/feature selection, learning theory, VC dimension, clustering, density estimation, EM, dimensionality reduction, ICA, PCA, reinforcement learning and adaptive control, Markov decision processes, approximate dynamic programming, and policy search. Prerequisites: linear algebra, and basic probability and statistics.",
                "courseTitle": "Machine Learning (STATS 229)",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3-4",
                "semester": "Fall, Spring, Summer"
            },
            {
                "courseId": "CS 229:",
                "courseLevel": "Graduate",
                "courseMeta": "Topics: statistical pattern recognition, linear and non-linear regression, non-parametric methods, exponential family, GLMs, support vector machines, kernel methods, model/feature selection, learning theory, VC dimension, clustering, density estimation, EM, dimensionality reduction, ICA, PCA, reinforcement learning and adaptive control, Markov decision processes, approximate dynamic programming, and policy search. Prerequisites: linear algebra, and basic probability and statistics.",
                "courseTitle": "Machine Learning (STATS 229)",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3-4",
                "semester": "Fall, Spring, Summer"
            },
            {
                "courseId": "CS 229:",
                "courseLevel": "Graduate",
                "courseMeta": "Topics: statistical pattern recognition, linear and non-linear regression, non-parametric methods, exponential family, GLMs, support vector machines, kernel methods, model/feature selection, learning theory, VC dimension, clustering, density estimation, EM, dimensionality reduction, ICA, PCA, reinforcement learning and adaptive control, Markov decision processes, approximate dynamic programming, and policy search. Prerequisites: linear algebra, and basic probability and statistics.",
                "courseTitle": "Machine Learning (STATS 229)",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3-4",
                "semester": "Fall, Spring, Summer"
            },
            {
                "courseId": "CS 229:",
                "courseLevel": "Graduate",
                "courseMeta": "Topics: statistical pattern recognition, linear and non-linear regression, non-parametric methods, exponential family, GLMs, support vector machines, kernel methods, model/feature selection, learning theory, VC dimension, clustering, density estimation, EM, dimensionality reduction, ICA, PCA, reinforcement learning and adaptive control, Markov decision processes, approximate dynamic programming, and policy search. Prerequisites: linear algebra, and basic probability and statistics.",
                "courseTitle": "Machine Learning (STATS 229)",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3-4",
                "semester": "Fall, Spring, Summer"
            },
            {
                "courseId": "CS 229:",
                "courseLevel": "Graduate",
                "courseMeta": "Topics: statistical pattern recognition, linear and non-linear regression, non-parametric methods, exponential family, GLMs, support vector machines, kernel methods, model/feature selection, learning theory, VC dimension, clustering, density estimation, EM, dimensionality reduction, ICA, PCA, reinforcement learning and adaptive control, Markov decision processes, approximate dynamic programming, and policy search. Prerequisites: linear algebra, and basic probability and statistics.",
                "courseTitle": "Machine Learning (STATS 229)",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3-4",
                "semester": "Fall, Spring, Summer"
            },
            {
                "courseId": "CS 229:",
                "courseLevel": "Graduate",
                "courseMeta": "Topics: statistical pattern recognition, linear and non-linear regression, non-parametric methods, exponential family, GLMs, support vector machines, kernel methods, model/feature selection, learning theory, VC dimension, clustering, density estimation, EM, dimensionality reduction, ICA, PCA, reinforcement learning and adaptive control, Markov decision processes, approximate dynamic programming, and policy search. Prerequisites: linear algebra, and basic probability and statistics.",
                "courseTitle": "Machine Learning (STATS 229)",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3-4",
                "semester": "Fall, Spring, Summer"
            },
            {
                "courseId": "CS 229:",
                "courseLevel": "Graduate",
                "courseMeta": "Topics: statistical pattern recognition, linear and non-linear regression, non-parametric methods, exponential family, GLMs, support vector machines, kernel methods, model/feature selection, learning theory, VC dimension, clustering, density estimation, EM, dimensionality reduction, ICA, PCA, reinforcement learning and adaptive control, Markov decision processes, approximate dynamic programming, and policy search. Prerequisites: linear algebra, and basic probability and statistics.",
                "courseTitle": "Machine Learning (STATS 229)",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3-4",
                "semester": "Fall, Spring, Summer"
            }
        ]
    },
    "Christos Kozyrakis": {
        "corpus": {
            "DBLP": "https://dblp.uni-trier.de/pers/hd/k/Kozyrakis:Christoforos_E=",
            "Google Scholar": "https://scholar.google.com/citations?user=G2EJz5kAAAAJ&hl=en&oi=ao",
            "domain": "",
            "home": "http://csl.stanford.edu/~christos"
        },
        "courses": [
            {
                "courseId": "CS 316:",
                "courseLevel": "Graduate",
                "courseMeta": "In-depth coverage of the architectural techniques used in modern, multi-core chips for mobile and server systems. Advanced processor design techniques (superscalar cores, VLIW cores, multi-threaded cores, energy-efficient cores), cache coherence, memory consistency, vector processors, graphics processors, heterogeneous processors, and hardware support for security and parallel programming. Students will become familiar with complex trade-offs between performance-power-complexity and hardware-software interactions. A central part of CS316 is a project on an open research question on multi-core technologies. Prerequisites: EE 180 (formerly 108B) and EE 282. Recommended: CS 149.",
                "courseTitle": "Advanced Multi-Core Systems",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3",
                "semester": "not given this year"
            },
            {
                "courseId": "CS 316:",
                "courseLevel": "Graduate",
                "courseMeta": "In-depth coverage of the architectural techniques used in modern, multi-core chips for mobile and server systems. Advanced processor design techniques (superscalar cores, VLIW cores, multi-threaded cores, energy-efficient cores), cache coherence, memory consistency, vector processors, graphics processors, heterogeneous processors, and hardware support for security and parallel programming. Students will become familiar with complex trade-offs between performance-power-complexity and hardware-software interactions. A central part of CS316 is a project on an open research question on multi-core technologies. Prerequisites: EE 180 (formerly 108B) and EE 282. Recommended: CS 149.",
                "courseTitle": "Advanced Multi-Core Systems",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3",
                "semester": "not given this year"
            },
            {
                "courseId": "CS 316:",
                "courseLevel": "Graduate",
                "courseMeta": "In-depth coverage of the architectural techniques used in modern, multi-core chips for mobile and server systems. Advanced processor design techniques (superscalar cores, VLIW cores, multi-threaded cores, energy-efficient cores), cache coherence, memory consistency, vector processors, graphics processors, heterogeneous processors, and hardware support for security and parallel programming. Students will become familiar with complex trade-offs between performance-power-complexity and hardware-software interactions. A central part of CS316 is a project on an open research question on multi-core technologies. Prerequisites: EE 180 (formerly 108B) and EE 282. Recommended: CS 149.",
                "courseTitle": "Advanced Multi-Core Systems",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3",
                "semester": "not given this year"
            },
            {
                "courseId": "CS 316:",
                "courseLevel": "Graduate",
                "courseMeta": "In-depth coverage of the architectural techniques used in modern, multi-core chips for mobile and server systems. Advanced processor design techniques (superscalar cores, VLIW cores, multi-threaded cores, energy-efficient cores), cache coherence, memory consistency, vector processors, graphics processors, heterogeneous processors, and hardware support for security and parallel programming. Students will become familiar with complex trade-offs between performance-power-complexity and hardware-software interactions. A central part of CS316 is a project on an open research question on multi-core technologies. Prerequisites: EE 180 (formerly 108B) and EE 282. Recommended: CS 149.",
                "courseTitle": "Advanced Multi-Core Systems",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3",
                "semester": "not given this year"
            },
            {
                "courseId": "CS 316:",
                "courseLevel": "Graduate",
                "courseMeta": "In-depth coverage of the architectural techniques used in modern, multi-core chips for mobile and server systems. Advanced processor design techniques (superscalar cores, VLIW cores, multi-threaded cores, energy-efficient cores), cache coherence, memory consistency, vector processors, graphics processors, heterogeneous processors, and hardware support for security and parallel programming. Students will become familiar with complex trade-offs between performance-power-complexity and hardware-software interactions. A central part of CS316 is a project on an open research question on multi-core technologies. Prerequisites: EE 180 (formerly 108B) and EE 282. Recommended: CS 149.",
                "courseTitle": "Advanced Multi-Core Systems",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3",
                "semester": "not given this year"
            },
            {
                "courseId": "CS 316:",
                "courseLevel": "Graduate",
                "courseMeta": "In-depth coverage of the architectural techniques used in modern, multi-core chips for mobile and server systems. Advanced processor design techniques (superscalar cores, VLIW cores, multi-threaded cores, energy-efficient cores), cache coherence, memory consistency, vector processors, graphics processors, heterogeneous processors, and hardware support for security and parallel programming. Students will become familiar with complex trade-offs between performance-power-complexity and hardware-software interactions. A central part of CS316 is a project on an open research question on multi-core technologies. Prerequisites: EE 180 (formerly 108B) and EE 282. Recommended: CS 149.",
                "courseTitle": "Advanced Multi-Core Systems",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3",
                "semester": "not given this year"
            },
            {
                "courseId": "CS 316:",
                "courseLevel": "Graduate",
                "courseMeta": "In-depth coverage of the architectural techniques used in modern, multi-core chips for mobile and server systems. Advanced processor design techniques (superscalar cores, VLIW cores, multi-threaded cores, energy-efficient cores), cache coherence, memory consistency, vector processors, graphics processors, heterogeneous processors, and hardware support for security and parallel programming. Students will become familiar with complex trade-offs between performance-power-complexity and hardware-software interactions. A central part of CS316 is a project on an open research question on multi-core technologies. Prerequisites: EE 180 (formerly 108B) and EE 282. Recommended: CS 149.",
                "courseTitle": "Advanced Multi-Core Systems",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3",
                "semester": "not given this year"
            },
            {
                "courseId": "CS 316:",
                "courseLevel": "Graduate",
                "courseMeta": "In-depth coverage of the architectural techniques used in modern, multi-core chips for mobile and server systems. Advanced processor design techniques (superscalar cores, VLIW cores, multi-threaded cores, energy-efficient cores), cache coherence, memory consistency, vector processors, graphics processors, heterogeneous processors, and hardware support for security and parallel programming. Students will become familiar with complex trade-offs between performance-power-complexity and hardware-software interactions. A central part of CS316 is a project on an open research question on multi-core technologies. Prerequisites: EE 180 (formerly 108B) and EE 282. Recommended: CS 149.",
                "courseTitle": "Advanced Multi-Core Systems",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3",
                "semester": "not given this year"
            },
            {
                "courseId": "CS 316:",
                "courseLevel": "Graduate",
                "courseMeta": "In-depth coverage of the architectural techniques used in modern, multi-core chips for mobile and server systems. Advanced processor design techniques (superscalar cores, VLIW cores, multi-threaded cores, energy-efficient cores), cache coherence, memory consistency, vector processors, graphics processors, heterogeneous processors, and hardware support for security and parallel programming. Students will become familiar with complex trade-offs between performance-power-complexity and hardware-software interactions. A central part of CS316 is a project on an open research question on multi-core technologies. Prerequisites: EE 180 (formerly 108B) and EE 282. Recommended: CS 149.",
                "courseTitle": "Advanced Multi-Core Systems",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3",
                "semester": "not given this year"
            },
            {
                "courseId": "CS 316:",
                "courseLevel": "Graduate",
                "courseMeta": "In-depth coverage of the architectural techniques used in modern, multi-core chips for mobile and server systems. Advanced processor design techniques (superscalar cores, VLIW cores, multi-threaded cores, energy-efficient cores), cache coherence, memory consistency, vector processors, graphics processors, heterogeneous processors, and hardware support for security and parallel programming. Students will become familiar with complex trade-offs between performance-power-complexity and hardware-software interactions. A central part of CS316 is a project on an open research question on multi-core technologies. Prerequisites: EE 180 (formerly 108B) and EE 282. Recommended: CS 149.",
                "courseTitle": "Advanced Multi-Core Systems",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3",
                "semester": "not given this year"
            },
            {
                "courseId": "CS 316:",
                "courseLevel": "Graduate",
                "courseMeta": "In-depth coverage of the architectural techniques used in modern, multi-core chips for mobile and server systems. Advanced processor design techniques (superscalar cores, VLIW cores, multi-threaded cores, energy-efficient cores), cache coherence, memory consistency, vector processors, graphics processors, heterogeneous processors, and hardware support for security and parallel programming. Students will become familiar with complex trade-offs between performance-power-complexity and hardware-software interactions. A central part of CS316 is a project on an open research question on multi-core technologies. Prerequisites: EE 180 (formerly 108B) and EE 282. Recommended: CS 149.",
                "courseTitle": "Advanced Multi-Core Systems",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3",
                "semester": "not given this year"
            },
            {
                "courseId": "CS 316:",
                "courseLevel": "Graduate",
                "courseMeta": "In-depth coverage of the architectural techniques used in modern, multi-core chips for mobile and server systems. Advanced processor design techniques (superscalar cores, VLIW cores, multi-threaded cores, energy-efficient cores), cache coherence, memory consistency, vector processors, graphics processors, heterogeneous processors, and hardware support for security and parallel programming. Students will become familiar with complex trade-offs between performance-power-complexity and hardware-software interactions. A central part of CS316 is a project on an open research question on multi-core technologies. Prerequisites: EE 180 (formerly 108B) and EE 282. Recommended: CS 149.",
                "courseTitle": "Advanced Multi-Core Systems",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3",
                "semester": "not given this year"
            },
            {
                "courseId": "CS 316:",
                "courseLevel": "Graduate",
                "courseMeta": "In-depth coverage of the architectural techniques used in modern, multi-core chips for mobile and server systems. Advanced processor design techniques (superscalar cores, VLIW cores, multi-threaded cores, energy-efficient cores), cache coherence, memory consistency, vector processors, graphics processors, heterogeneous processors, and hardware support for security and parallel programming. Students will become familiar with complex trade-offs between performance-power-complexity and hardware-software interactions. A central part of CS316 is a project on an open research question on multi-core technologies. Prerequisites: EE 180 (formerly 108B) and EE 282. Recommended: CS 149.",
                "courseTitle": "Advanced Multi-Core Systems",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3",
                "semester": "not given this year"
            },
            {
                "courseId": "CS 316:",
                "courseLevel": "Graduate",
                "courseMeta": "In-depth coverage of the architectural techniques used in modern, multi-core chips for mobile and server systems. Advanced processor design techniques (superscalar cores, VLIW cores, multi-threaded cores, energy-efficient cores), cache coherence, memory consistency, vector processors, graphics processors, heterogeneous processors, and hardware support for security and parallel programming. Students will become familiar with complex trade-offs between performance-power-complexity and hardware-software interactions. A central part of CS316 is a project on an open research question on multi-core technologies. Prerequisites: EE 180 (formerly 108B) and EE 282. Recommended: CS 149.",
                "courseTitle": "Advanced Multi-Core Systems",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3",
                "semester": "not given this year"
            },
            {
                "courseId": "CS 316:",
                "courseLevel": "Graduate",
                "courseMeta": "In-depth coverage of the architectural techniques used in modern, multi-core chips for mobile and server systems. Advanced processor design techniques (superscalar cores, VLIW cores, multi-threaded cores, energy-efficient cores), cache coherence, memory consistency, vector processors, graphics processors, heterogeneous processors, and hardware support for security and parallel programming. Students will become familiar with complex trade-offs between performance-power-complexity and hardware-software interactions. A central part of CS316 is a project on an open research question on multi-core technologies. Prerequisites: EE 180 (formerly 108B) and EE 282. Recommended: CS 149.",
                "courseTitle": "Advanced Multi-Core Systems",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3",
                "semester": "not given this year"
            },
            {
                "courseId": "CS 316:",
                "courseLevel": "Graduate",
                "courseMeta": "In-depth coverage of the architectural techniques used in modern, multi-core chips for mobile and server systems. Advanced processor design techniques (superscalar cores, VLIW cores, multi-threaded cores, energy-efficient cores), cache coherence, memory consistency, vector processors, graphics processors, heterogeneous processors, and hardware support for security and parallel programming. Students will become familiar with complex trade-offs between performance-power-complexity and hardware-software interactions. A central part of CS316 is a project on an open research question on multi-core technologies. Prerequisites: EE 180 (formerly 108B) and EE 282. Recommended: CS 149.",
                "courseTitle": "Advanced Multi-Core Systems",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3",
                "semester": "not given this year"
            },
            {
                "courseId": "CS 316:",
                "courseLevel": "Graduate",
                "courseMeta": "In-depth coverage of the architectural techniques used in modern, multi-core chips for mobile and server systems. Advanced processor design techniques (superscalar cores, VLIW cores, multi-threaded cores, energy-efficient cores), cache coherence, memory consistency, vector processors, graphics processors, heterogeneous processors, and hardware support for security and parallel programming. Students will become familiar with complex trade-offs between performance-power-complexity and hardware-software interactions. A central part of CS316 is a project on an open research question on multi-core technologies. Prerequisites: EE 180 (formerly 108B) and EE 282. Recommended: CS 149.",
                "courseTitle": "Advanced Multi-Core Systems",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3",
                "semester": "not given this year"
            },
            {
                "courseId": "CS 316:",
                "courseLevel": "Graduate",
                "courseMeta": "In-depth coverage of the architectural techniques used in modern, multi-core chips for mobile and server systems. Advanced processor design techniques (superscalar cores, VLIW cores, multi-threaded cores, energy-efficient cores), cache coherence, memory consistency, vector processors, graphics processors, heterogeneous processors, and hardware support for security and parallel programming. Students will become familiar with complex trade-offs between performance-power-complexity and hardware-software interactions. A central part of CS316 is a project on an open research question on multi-core technologies. Prerequisites: EE 180 (formerly 108B) and EE 282. Recommended: CS 149.",
                "courseTitle": "Advanced Multi-Core Systems",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3",
                "semester": "not given this year"
            },
            {
                "courseId": "CS 316:",
                "courseLevel": "Graduate",
                "courseMeta": "In-depth coverage of the architectural techniques used in modern, multi-core chips for mobile and server systems. Advanced processor design techniques (superscalar cores, VLIW cores, multi-threaded cores, energy-efficient cores), cache coherence, memory consistency, vector processors, graphics processors, heterogeneous processors, and hardware support for security and parallel programming. Students will become familiar with complex trade-offs between performance-power-complexity and hardware-software interactions. A central part of CS316 is a project on an open research question on multi-core technologies. Prerequisites: EE 180 (formerly 108B) and EE 282. Recommended: CS 149.",
                "courseTitle": "Advanced Multi-Core Systems",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3",
                "semester": "not given this year"
            },
            {
                "courseId": "CS 316:",
                "courseLevel": "Graduate",
                "courseMeta": "In-depth coverage of the architectural techniques used in modern, multi-core chips for mobile and server systems. Advanced processor design techniques (superscalar cores, VLIW cores, multi-threaded cores, energy-efficient cores), cache coherence, memory consistency, vector processors, graphics processors, heterogeneous processors, and hardware support for security and parallel programming. Students will become familiar with complex trade-offs between performance-power-complexity and hardware-software interactions. A central part of CS316 is a project on an open research question on multi-core technologies. Prerequisites: EE 180 (formerly 108B) and EE 282. Recommended: CS 149.",
                "courseTitle": "Advanced Multi-Core Systems",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3",
                "semester": "not given this year"
            },
            {
                "courseId": "CS 316:",
                "courseLevel": "Graduate",
                "courseMeta": "In-depth coverage of the architectural techniques used in modern, multi-core chips for mobile and server systems. Advanced processor design techniques (superscalar cores, VLIW cores, multi-threaded cores, energy-efficient cores), cache coherence, memory consistency, vector processors, graphics processors, heterogeneous processors, and hardware support for security and parallel programming. Students will become familiar with complex trade-offs between performance-power-complexity and hardware-software interactions. A central part of CS316 is a project on an open research question on multi-core technologies. Prerequisites: EE 180 (formerly 108B) and EE 282. Recommended: CS 149.",
                "courseTitle": "Advanced Multi-Core Systems",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3",
                "semester": "not given this year"
            },
            {
                "courseId": "CS 316:",
                "courseLevel": "Graduate",
                "courseMeta": "In-depth coverage of the architectural techniques used in modern, multi-core chips for mobile and server systems. Advanced processor design techniques (superscalar cores, VLIW cores, multi-threaded cores, energy-efficient cores), cache coherence, memory consistency, vector processors, graphics processors, heterogeneous processors, and hardware support for security and parallel programming. Students will become familiar with complex trade-offs between performance-power-complexity and hardware-software interactions. A central part of CS316 is a project on an open research question on multi-core technologies. Prerequisites: EE 180 (formerly 108B) and EE 282. Recommended: CS 149.",
                "courseTitle": "Advanced Multi-Core Systems",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3",
                "semester": "not given this year"
            },
            {
                "courseId": "CS 316:",
                "courseLevel": "Graduate",
                "courseMeta": "In-depth coverage of the architectural techniques used in modern, multi-core chips for mobile and server systems. Advanced processor design techniques (superscalar cores, VLIW cores, multi-threaded cores, energy-efficient cores), cache coherence, memory consistency, vector processors, graphics processors, heterogeneous processors, and hardware support for security and parallel programming. Students will become familiar with complex trade-offs between performance-power-complexity and hardware-software interactions. A central part of CS316 is a project on an open research question on multi-core technologies. Prerequisites: EE 180 (formerly 108B) and EE 282. Recommended: CS 149.",
                "courseTitle": "Advanced Multi-Core Systems",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3",
                "semester": "not given this year"
            },
            {
                "courseId": "CS 316:",
                "courseLevel": "Graduate",
                "courseMeta": "In-depth coverage of the architectural techniques used in modern, multi-core chips for mobile and server systems. Advanced processor design techniques (superscalar cores, VLIW cores, multi-threaded cores, energy-efficient cores), cache coherence, memory consistency, vector processors, graphics processors, heterogeneous processors, and hardware support for security and parallel programming. Students will become familiar with complex trade-offs between performance-power-complexity and hardware-software interactions. A central part of CS316 is a project on an open research question on multi-core technologies. Prerequisites: EE 180 (formerly 108B) and EE 282. Recommended: CS 149.",
                "courseTitle": "Advanced Multi-Core Systems",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3",
                "semester": "not given this year"
            },
            {
                "courseId": "CS 316:",
                "courseLevel": "Graduate",
                "courseMeta": "In-depth coverage of the architectural techniques used in modern, multi-core chips for mobile and server systems. Advanced processor design techniques (superscalar cores, VLIW cores, multi-threaded cores, energy-efficient cores), cache coherence, memory consistency, vector processors, graphics processors, heterogeneous processors, and hardware support for security and parallel programming. Students will become familiar with complex trade-offs between performance-power-complexity and hardware-software interactions. A central part of CS316 is a project on an open research question on multi-core technologies. Prerequisites: EE 180 (formerly 108B) and EE 282. Recommended: CS 149.",
                "courseTitle": "Advanced Multi-Core Systems",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3",
                "semester": "not given this year"
            }
        ]
    },
    "Dan Boneh": {
        "corpus": {
            "DBLP": "https://dblp.uni-trier.de/pers/hd/b/Boneh:Dan",
            "Google Scholar": "https://scholar.google.com/citations?user=MwLqCs4AAAAJ&hl=en&oi=ao",
            "domain": "db",
            "home": "http://crypto.stanford.edu/~dabo"
        },
        "courses": [
            {
                "courseId": "CS 251:",
                "courseLevel": "Graduate",
                "courseMeta": "For advanced undergraduates and for graduate students.  The potential applications for Bitcoin-like technologies is enormous.  The course will cover the technical aspects of cryptocurrencies, blockchain technologies, and distributed consensus. Students will learn how these systems work and how to engineer secure software that interacts with the Bitcoin network and other cryptocurrencies. Prerequisite: CS110. Recommended: CS255.",
                "courseTitle": "Cryptocurrencies and blockchain technologies",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3",
                "semester": "Fall"
            },
            {
                "courseId": "CS 251:",
                "courseLevel": "Graduate",
                "courseMeta": "For advanced undergraduates and for graduate students.  The potential applications for Bitcoin-like technologies is enormous.  The course will cover the technical aspects of cryptocurrencies, blockchain technologies, and distributed consensus. Students will learn how these systems work and how to engineer secure software that interacts with the Bitcoin network and other cryptocurrencies. Prerequisite: CS110. Recommended: CS255.",
                "courseTitle": "Cryptocurrencies and blockchain technologies",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3",
                "semester": "Fall"
            },
            {
                "courseId": "CS 251:",
                "courseLevel": "Graduate",
                "courseMeta": "For advanced undergraduates and for graduate students.  The potential applications for Bitcoin-like technologies is enormous.  The course will cover the technical aspects of cryptocurrencies, blockchain technologies, and distributed consensus. Students will learn how these systems work and how to engineer secure software that interacts with the Bitcoin network and other cryptocurrencies. Prerequisite: CS110. Recommended: CS255.",
                "courseTitle": "Cryptocurrencies and blockchain technologies",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3",
                "semester": "Fall"
            },
            {
                "courseId": "CS 251:",
                "courseLevel": "Graduate",
                "courseMeta": "For advanced undergraduates and for graduate students.  The potential applications for Bitcoin-like technologies is enormous.  The course will cover the technical aspects of cryptocurrencies, blockchain technologies, and distributed consensus. Students will learn how these systems work and how to engineer secure software that interacts with the Bitcoin network and other cryptocurrencies. Prerequisite: CS110. Recommended: CS255.",
                "courseTitle": "Cryptocurrencies and blockchain technologies",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3",
                "semester": "Fall"
            },
            {
                "courseId": "CS 251:",
                "courseLevel": "Graduate",
                "courseMeta": "For advanced undergraduates and for graduate students.  The potential applications for Bitcoin-like technologies is enormous.  The course will cover the technical aspects of cryptocurrencies, blockchain technologies, and distributed consensus. Students will learn how these systems work and how to engineer secure software that interacts with the Bitcoin network and other cryptocurrencies. Prerequisite: CS110. Recommended: CS255.",
                "courseTitle": "Cryptocurrencies and blockchain technologies",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3",
                "semester": "Fall"
            },
            {
                "courseId": "CS 251:",
                "courseLevel": "Graduate",
                "courseMeta": "For advanced undergraduates and for graduate students.  The potential applications for Bitcoin-like technologies is enormous.  The course will cover the technical aspects of cryptocurrencies, blockchain technologies, and distributed consensus. Students will learn how these systems work and how to engineer secure software that interacts with the Bitcoin network and other cryptocurrencies. Prerequisite: CS110. Recommended: CS255.",
                "courseTitle": "Cryptocurrencies and blockchain technologies",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3",
                "semester": "Fall"
            },
            {
                "courseId": "CS 251:",
                "courseLevel": "Graduate",
                "courseMeta": "For advanced undergraduates and for graduate students.  The potential applications for Bitcoin-like technologies is enormous.  The course will cover the technical aspects of cryptocurrencies, blockchain technologies, and distributed consensus. Students will learn how these systems work and how to engineer secure software that interacts with the Bitcoin network and other cryptocurrencies. Prerequisite: CS110. Recommended: CS255.",
                "courseTitle": "Cryptocurrencies and blockchain technologies",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3",
                "semester": "Fall"
            },
            {
                "courseId": "CS 251:",
                "courseLevel": "Graduate",
                "courseMeta": "For advanced undergraduates and for graduate students.  The potential applications for Bitcoin-like technologies is enormous.  The course will cover the technical aspects of cryptocurrencies, blockchain technologies, and distributed consensus. Students will learn how these systems work and how to engineer secure software that interacts with the Bitcoin network and other cryptocurrencies. Prerequisite: CS110. Recommended: CS255.",
                "courseTitle": "Cryptocurrencies and blockchain technologies",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3",
                "semester": "Fall"
            },
            {
                "courseId": "CS 251:",
                "courseLevel": "Graduate",
                "courseMeta": "For advanced undergraduates and for graduate students.  The potential applications for Bitcoin-like technologies is enormous.  The course will cover the technical aspects of cryptocurrencies, blockchain technologies, and distributed consensus. Students will learn how these systems work and how to engineer secure software that interacts with the Bitcoin network and other cryptocurrencies. Prerequisite: CS110. Recommended: CS255.",
                "courseTitle": "Cryptocurrencies and blockchain technologies",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3",
                "semester": "Fall"
            },
            {
                "courseId": "CS 251:",
                "courseLevel": "Graduate",
                "courseMeta": "For advanced undergraduates and for graduate students.  The potential applications for Bitcoin-like technologies is enormous.  The course will cover the technical aspects of cryptocurrencies, blockchain technologies, and distributed consensus. Students will learn how these systems work and how to engineer secure software that interacts with the Bitcoin network and other cryptocurrencies. Prerequisite: CS110. Recommended: CS255.",
                "courseTitle": "Cryptocurrencies and blockchain technologies",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3",
                "semester": "Fall"
            },
            {
                "courseId": "CS 251:",
                "courseLevel": "Graduate",
                "courseMeta": "For advanced undergraduates and for graduate students.  The potential applications for Bitcoin-like technologies is enormous.  The course will cover the technical aspects of cryptocurrencies, blockchain technologies, and distributed consensus. Students will learn how these systems work and how to engineer secure software that interacts with the Bitcoin network and other cryptocurrencies. Prerequisite: CS110. Recommended: CS255.",
                "courseTitle": "Cryptocurrencies and blockchain technologies",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3",
                "semester": "Fall"
            },
            {
                "courseId": "CS 251:",
                "courseLevel": "Graduate",
                "courseMeta": "For advanced undergraduates and for graduate students.  The potential applications for Bitcoin-like technologies is enormous.  The course will cover the technical aspects of cryptocurrencies, blockchain technologies, and distributed consensus. Students will learn how these systems work and how to engineer secure software that interacts with the Bitcoin network and other cryptocurrencies. Prerequisite: CS110. Recommended: CS255.",
                "courseTitle": "Cryptocurrencies and blockchain technologies",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3",
                "semester": "Fall"
            },
            {
                "courseId": "CS 251:",
                "courseLevel": "Graduate",
                "courseMeta": "For advanced undergraduates and for graduate students.  The potential applications for Bitcoin-like technologies is enormous.  The course will cover the technical aspects of cryptocurrencies, blockchain technologies, and distributed consensus. Students will learn how these systems work and how to engineer secure software that interacts with the Bitcoin network and other cryptocurrencies. Prerequisite: CS110. Recommended: CS255.",
                "courseTitle": "Cryptocurrencies and blockchain technologies",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3",
                "semester": "Fall"
            },
            {
                "courseId": "CS 251:",
                "courseLevel": "Graduate",
                "courseMeta": "For advanced undergraduates and for graduate students.  The potential applications for Bitcoin-like technologies is enormous.  The course will cover the technical aspects of cryptocurrencies, blockchain technologies, and distributed consensus. Students will learn how these systems work and how to engineer secure software that interacts with the Bitcoin network and other cryptocurrencies. Prerequisite: CS110. Recommended: CS255.",
                "courseTitle": "Cryptocurrencies and blockchain technologies",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3",
                "semester": "Fall"
            },
            {
                "courseId": "CS 251:",
                "courseLevel": "Graduate",
                "courseMeta": "For advanced undergraduates and for graduate students.  The potential applications for Bitcoin-like technologies is enormous.  The course will cover the technical aspects of cryptocurrencies, blockchain technologies, and distributed consensus. Students will learn how these systems work and how to engineer secure software that interacts with the Bitcoin network and other cryptocurrencies. Prerequisite: CS110. Recommended: CS255.",
                "courseTitle": "Cryptocurrencies and blockchain technologies",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3",
                "semester": "Fall"
            },
            {
                "courseId": "CS 251:",
                "courseLevel": "Graduate",
                "courseMeta": "For advanced undergraduates and for graduate students.  The potential applications for Bitcoin-like technologies is enormous.  The course will cover the technical aspects of cryptocurrencies, blockchain technologies, and distributed consensus. Students will learn how these systems work and how to engineer secure software that interacts with the Bitcoin network and other cryptocurrencies. Prerequisite: CS110. Recommended: CS255.",
                "courseTitle": "Cryptocurrencies and blockchain technologies",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3",
                "semester": "Fall"
            },
            {
                "courseId": "CS 251:",
                "courseLevel": "Graduate",
                "courseMeta": "For advanced undergraduates and for graduate students.  The potential applications for Bitcoin-like technologies is enormous.  The course will cover the technical aspects of cryptocurrencies, blockchain technologies, and distributed consensus. Students will learn how these systems work and how to engineer secure software that interacts with the Bitcoin network and other cryptocurrencies. Prerequisite: CS110. Recommended: CS255.",
                "courseTitle": "Cryptocurrencies and blockchain technologies",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3",
                "semester": "Fall"
            },
            {
                "courseId": "CS 251:",
                "courseLevel": "Graduate",
                "courseMeta": "For advanced undergraduates and for graduate students.  The potential applications for Bitcoin-like technologies is enormous.  The course will cover the technical aspects of cryptocurrencies, blockchain technologies, and distributed consensus. Students will learn how these systems work and how to engineer secure software that interacts with the Bitcoin network and other cryptocurrencies. Prerequisite: CS110. Recommended: CS255.",
                "courseTitle": "Cryptocurrencies and blockchain technologies",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3",
                "semester": "Fall"
            },
            {
                "courseId": "CS 251:",
                "courseLevel": "Graduate",
                "courseMeta": "For advanced undergraduates and for graduate students.  The potential applications for Bitcoin-like technologies is enormous.  The course will cover the technical aspects of cryptocurrencies, blockchain technologies, and distributed consensus. Students will learn how these systems work and how to engineer secure software that interacts with the Bitcoin network and other cryptocurrencies. Prerequisite: CS110. Recommended: CS255.",
                "courseTitle": "Cryptocurrencies and blockchain technologies",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3",
                "semester": "Fall"
            },
            {
                "courseId": "CS 251:",
                "courseLevel": "Graduate",
                "courseMeta": "For advanced undergraduates and for graduate students.  The potential applications for Bitcoin-like technologies is enormous.  The course will cover the technical aspects of cryptocurrencies, blockchain technologies, and distributed consensus. Students will learn how these systems work and how to engineer secure software that interacts with the Bitcoin network and other cryptocurrencies. Prerequisite: CS110. Recommended: CS255.",
                "courseTitle": "Cryptocurrencies and blockchain technologies",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3",
                "semester": "Fall"
            },
            {
                "courseId": "CS 251:",
                "courseLevel": "Graduate",
                "courseMeta": "For advanced undergraduates and for graduate students.  The potential applications for Bitcoin-like technologies is enormous.  The course will cover the technical aspects of cryptocurrencies, blockchain technologies, and distributed consensus. Students will learn how these systems work and how to engineer secure software that interacts with the Bitcoin network and other cryptocurrencies. Prerequisite: CS110. Recommended: CS255.",
                "courseTitle": "Cryptocurrencies and blockchain technologies",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3",
                "semester": "Fall"
            },
            {
                "courseId": "CS 251:",
                "courseLevel": "Graduate",
                "courseMeta": "For advanced undergraduates and for graduate students.  The potential applications for Bitcoin-like technologies is enormous.  The course will cover the technical aspects of cryptocurrencies, blockchain technologies, and distributed consensus. Students will learn how these systems work and how to engineer secure software that interacts with the Bitcoin network and other cryptocurrencies. Prerequisite: CS110. Recommended: CS255.",
                "courseTitle": "Cryptocurrencies and blockchain technologies",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3",
                "semester": "Fall"
            },
            {
                "courseId": "CS 251:",
                "courseLevel": "Graduate",
                "courseMeta": "For advanced undergraduates and for graduate students.  The potential applications for Bitcoin-like technologies is enormous.  The course will cover the technical aspects of cryptocurrencies, blockchain technologies, and distributed consensus. Students will learn how these systems work and how to engineer secure software that interacts with the Bitcoin network and other cryptocurrencies. Prerequisite: CS110. Recommended: CS255.",
                "courseTitle": "Cryptocurrencies and blockchain technologies",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3",
                "semester": "Fall"
            },
            {
                "courseId": "CS 251:",
                "courseLevel": "Graduate",
                "courseMeta": "For advanced undergraduates and for graduate students.  The potential applications for Bitcoin-like technologies is enormous.  The course will cover the technical aspects of cryptocurrencies, blockchain technologies, and distributed consensus. Students will learn how these systems work and how to engineer secure software that interacts with the Bitcoin network and other cryptocurrencies. Prerequisite: CS110. Recommended: CS255.",
                "courseTitle": "Cryptocurrencies and blockchain technologies",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3",
                "semester": "Fall"
            },
            {
                "courseId": "CS 251:",
                "courseLevel": "Graduate",
                "courseMeta": "For advanced undergraduates and for graduate students.  The potential applications for Bitcoin-like technologies is enormous.  The course will cover the technical aspects of cryptocurrencies, blockchain technologies, and distributed consensus. Students will learn how these systems work and how to engineer secure software that interacts with the Bitcoin network and other cryptocurrencies. Prerequisite: CS110. Recommended: CS255.",
                "courseTitle": "Cryptocurrencies and blockchain technologies",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3",
                "semester": "Fall"
            },
            {
                "courseId": "CS 251:",
                "courseLevel": "Graduate",
                "courseMeta": "For advanced undergraduates and for graduate students.  The potential applications for Bitcoin-like technologies is enormous.  The course will cover the technical aspects of cryptocurrencies, blockchain technologies, and distributed consensus. Students will learn how these systems work and how to engineer secure software that interacts with the Bitcoin network and other cryptocurrencies. Prerequisite: CS110. Recommended: CS255.",
                "courseTitle": "Cryptocurrencies and blockchain technologies",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3",
                "semester": "Fall"
            },
            {
                "courseId": "CS 251:",
                "courseLevel": "Graduate",
                "courseMeta": "For advanced undergraduates and for graduate students.  The potential applications for Bitcoin-like technologies is enormous.  The course will cover the technical aspects of cryptocurrencies, blockchain technologies, and distributed consensus. Students will learn how these systems work and how to engineer secure software that interacts with the Bitcoin network and other cryptocurrencies. Prerequisite: CS110. Recommended: CS255.",
                "courseTitle": "Cryptocurrencies and blockchain technologies",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3",
                "semester": "Fall"
            }
        ]
    },
    "Daniel Jurafsky": {
        "corpus": {
            "DBLP": "https://dblp.uni-trier.de/pers/hd/j/Jurafsky:Daniel",
            "Google Scholar": "https://scholar.google.com/citations?user=uZg9l58AAAAJ&hl=en&oi=ao",
            "domain": "vision",
            "home": "http://web.stanford.edu/~jurafsky"
        },
        "courses": [
            {
                "courseId": "LINGUIST 198:",
                "courseLevel": "Undergraduate",
                "courseMeta": "Under the supervision of their faculty honors adviser, students work on their senior honors project. May be repeated for credit.",
                "courseTitle": "Honors Research",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "1-15",
                "semester": "Fall, Winter, Spring"
            },
            {
                "courseId": "LINGUIST 198:",
                "courseLevel": "Undergraduate",
                "courseMeta": "Under the supervision of their faculty honors adviser, students work on their senior honors project. May be repeated for credit.",
                "courseTitle": "Honors Research",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "1-15",
                "semester": "Fall, Winter, Spring"
            },
            {
                "courseId": "LINGUIST 198:",
                "courseLevel": "Undergraduate",
                "courseMeta": "Under the supervision of their faculty honors adviser, students work on their senior honors project. May be repeated for credit.",
                "courseTitle": "Honors Research",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "1-15",
                "semester": "Fall, Winter, Spring"
            }
        ]
    },
    "Dorsa Sadigh": {
        "corpus": {
            "DBLP": "https://dblp.uni-trier.de/pers/hd/s/Sadigh:Dorsa",
            "Google Scholar": "https://scholar.google.com/citations?user=MEeYxLMAAAAJ&hl=en&oi=ao",
            "domain": "",
            "home": "https://dorsa.fyi"
        },
        "courses": [
            {
                "courseId": "CS 221:",
                "courseLevel": "Graduate",
                "courseMeta": "Artificial intelligence (AI) has had a huge impact in many areas, including medical diagnosis, speech recognition, robotics, web search, advertising, and scheduling.  This course focuses on the foundational concepts that drive these applications.  In short, AI is the mathematics of making good decisions given incomplete information (hence the need for probability) and limited computation (hence the need for algorithms).  Specific topics include search, constraint satisfaction, game playing, Markov decision processes, graphical models, machine learning, and logic. Prerequisites: CS 103 or CS 103B/X, CS 106B or CS 106X, CS 107, and CS 109 (algorithms, probability, and programming experience).",
                "courseTitle": "Artificial Intelligence: Principles and Techniques",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3-4",
                "semester": "Fall, Spring, Summer"
            },
            {
                "courseId": "CS 221:",
                "courseLevel": "Graduate",
                "courseMeta": "Artificial intelligence (AI) has had a huge impact in many areas, including medical diagnosis, speech recognition, robotics, web search, advertising, and scheduling.  This course focuses on the foundational concepts that drive these applications.  In short, AI is the mathematics of making good decisions given incomplete information (hence the need for probability) and limited computation (hence the need for algorithms).  Specific topics include search, constraint satisfaction, game playing, Markov decision processes, graphical models, machine learning, and logic. Prerequisites: CS 103 or CS 103B/X, CS 106B or CS 106X, CS 107, and CS 109 (algorithms, probability, and programming experience).",
                "courseTitle": "Artificial Intelligence: Principles and Techniques",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3-4",
                "semester": "Fall, Spring, Summer"
            },
            {
                "courseId": "CS 221:",
                "courseLevel": "Graduate",
                "courseMeta": "Artificial intelligence (AI) has had a huge impact in many areas, including medical diagnosis, speech recognition, robotics, web search, advertising, and scheduling.  This course focuses on the foundational concepts that drive these applications.  In short, AI is the mathematics of making good decisions given incomplete information (hence the need for probability) and limited computation (hence the need for algorithms).  Specific topics include search, constraint satisfaction, game playing, Markov decision processes, graphical models, machine learning, and logic. Prerequisites: CS 103 or CS 103B/X, CS 106B or CS 106X, CS 107, and CS 109 (algorithms, probability, and programming experience).",
                "courseTitle": "Artificial Intelligence: Principles and Techniques",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3-4",
                "semester": "Fall, Spring, Summer"
            },
            {
                "courseId": "CS 221:",
                "courseLevel": "Graduate",
                "courseMeta": "Artificial intelligence (AI) has had a huge impact in many areas, including medical diagnosis, speech recognition, robotics, web search, advertising, and scheduling.  This course focuses on the foundational concepts that drive these applications.  In short, AI is the mathematics of making good decisions given incomplete information (hence the need for probability) and limited computation (hence the need for algorithms).  Specific topics include search, constraint satisfaction, game playing, Markov decision processes, graphical models, machine learning, and logic. Prerequisites: CS 103 or CS 103B/X, CS 106B or CS 106X, CS 107, and CS 109 (algorithms, probability, and programming experience).",
                "courseTitle": "Artificial Intelligence: Principles and Techniques",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3-4",
                "semester": "Fall, Spring, Summer"
            },
            {
                "courseId": "CS 221:",
                "courseLevel": "Graduate",
                "courseMeta": "Artificial intelligence (AI) has had a huge impact in many areas, including medical diagnosis, speech recognition, robotics, web search, advertising, and scheduling.  This course focuses on the foundational concepts that drive these applications.  In short, AI is the mathematics of making good decisions given incomplete information (hence the need for probability) and limited computation (hence the need for algorithms).  Specific topics include search, constraint satisfaction, game playing, Markov decision processes, graphical models, machine learning, and logic. Prerequisites: CS 103 or CS 103B/X, CS 106B or CS 106X, CS 107, and CS 109 (algorithms, probability, and programming experience).",
                "courseTitle": "Artificial Intelligence: Principles and Techniques",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3-4",
                "semester": "Fall, Spring, Summer"
            },
            {
                "courseId": "CS 221:",
                "courseLevel": "Graduate",
                "courseMeta": "Artificial intelligence (AI) has had a huge impact in many areas, including medical diagnosis, speech recognition, robotics, web search, advertising, and scheduling.  This course focuses on the foundational concepts that drive these applications.  In short, AI is the mathematics of making good decisions given incomplete information (hence the need for probability) and limited computation (hence the need for algorithms).  Specific topics include search, constraint satisfaction, game playing, Markov decision processes, graphical models, machine learning, and logic. Prerequisites: CS 103 or CS 103B/X, CS 106B or CS 106X, CS 107, and CS 109 (algorithms, probability, and programming experience).",
                "courseTitle": "Artificial Intelligence: Principles and Techniques",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3-4",
                "semester": "Fall, Spring, Summer"
            },
            {
                "courseId": "CS 221:",
                "courseLevel": "Graduate",
                "courseMeta": "Artificial intelligence (AI) has had a huge impact in many areas, including medical diagnosis, speech recognition, robotics, web search, advertising, and scheduling.  This course focuses on the foundational concepts that drive these applications.  In short, AI is the mathematics of making good decisions given incomplete information (hence the need for probability) and limited computation (hence the need for algorithms).  Specific topics include search, constraint satisfaction, game playing, Markov decision processes, graphical models, machine learning, and logic. Prerequisites: CS 103 or CS 103B/X, CS 106B or CS 106X, CS 107, and CS 109 (algorithms, probability, and programming experience).",
                "courseTitle": "Artificial Intelligence: Principles and Techniques",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3-4",
                "semester": "Fall, Spring, Summer"
            },
            {
                "courseId": "CS 221:",
                "courseLevel": "Graduate",
                "courseMeta": "Artificial intelligence (AI) has had a huge impact in many areas, including medical diagnosis, speech recognition, robotics, web search, advertising, and scheduling.  This course focuses on the foundational concepts that drive these applications.  In short, AI is the mathematics of making good decisions given incomplete information (hence the need for probability) and limited computation (hence the need for algorithms).  Specific topics include search, constraint satisfaction, game playing, Markov decision processes, graphical models, machine learning, and logic. Prerequisites: CS 103 or CS 103B/X, CS 106B or CS 106X, CS 107, and CS 109 (algorithms, probability, and programming experience).",
                "courseTitle": "Artificial Intelligence: Principles and Techniques",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3-4",
                "semester": "Fall, Spring, Summer"
            },
            {
                "courseId": "CS 221:",
                "courseLevel": "Graduate",
                "courseMeta": "Artificial intelligence (AI) has had a huge impact in many areas, including medical diagnosis, speech recognition, robotics, web search, advertising, and scheduling.  This course focuses on the foundational concepts that drive these applications.  In short, AI is the mathematics of making good decisions given incomplete information (hence the need for probability) and limited computation (hence the need for algorithms).  Specific topics include search, constraint satisfaction, game playing, Markov decision processes, graphical models, machine learning, and logic. Prerequisites: CS 103 or CS 103B/X, CS 106B or CS 106X, CS 107, and CS 109 (algorithms, probability, and programming experience).",
                "courseTitle": "Artificial Intelligence: Principles and Techniques",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3-4",
                "semester": "Fall, Spring, Summer"
            }
        ]
    },
    "Emma Brunskill": {
        "corpus": {
            "DBLP": "https://dblp.uni-trier.de/pers/hd/b/Brunskill:Emma",
            "Google Scholar": "https://scholar.google.com/citations?user=HaN8b2YAAAAJ&hl=en&oi=ao",
            "domain": "ai",
            "home": "http://www.cs.cmu.edu/~ebrun"
        },
        "courses": [
            {
                "courseId": "CS 234:",
                "courseLevel": "Graduate",
                "courseMeta": "To realize the dreams and impact of AI requires autonomous systems that learn to make good decisions. Reinforcement learning is one powerful paradigm for doing so, and it is relevant to an enormous range of tasks, including robotics, game playing, consumer modeling and healthcare. This class will briefly cover background on Markov decision processes and reinforcement learning, before focusing on some of the central problems, including scaling up to large domains and the exploration challenge. One key tool for tackling complex RL domains is deep learning and this class will include at least one homework on deep reinforcement learning. Prerequisites: proficiency in python, CS 229 or equivalents or permission of the instructor; linear algebra, basic probability.",
                "courseTitle": "Reinforcement Learning",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3",
                "semester": "Winter"
            },
            {
                "courseId": "CS 234:",
                "courseLevel": "Graduate",
                "courseMeta": "To realize the dreams and impact of AI requires autonomous systems that learn to make good decisions. Reinforcement learning is one powerful paradigm for doing so, and it is relevant to an enormous range of tasks, including robotics, game playing, consumer modeling and healthcare. This class will briefly cover background on Markov decision processes and reinforcement learning, before focusing on some of the central problems, including scaling up to large domains and the exploration challenge. One key tool for tackling complex RL domains is deep learning and this class will include at least one homework on deep reinforcement learning. Prerequisites: proficiency in python, CS 229 or equivalents or permission of the instructor; linear algebra, basic probability.",
                "courseTitle": "Reinforcement Learning",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3",
                "semester": "Winter"
            },
            {
                "courseId": "CS 234:",
                "courseLevel": "Graduate",
                "courseMeta": "To realize the dreams and impact of AI requires autonomous systems that learn to make good decisions. Reinforcement learning is one powerful paradigm for doing so, and it is relevant to an enormous range of tasks, including robotics, game playing, consumer modeling and healthcare. This class will briefly cover background on Markov decision processes and reinforcement learning, before focusing on some of the central problems, including scaling up to large domains and the exploration challenge. One key tool for tackling complex RL domains is deep learning and this class will include at least one homework on deep reinforcement learning. Prerequisites: proficiency in python, CS 229 or equivalents or permission of the instructor; linear algebra, basic probability.",
                "courseTitle": "Reinforcement Learning",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3",
                "semester": "Winter"
            },
            {
                "courseId": "CS 234:",
                "courseLevel": "Graduate",
                "courseMeta": "To realize the dreams and impact of AI requires autonomous systems that learn to make good decisions. Reinforcement learning is one powerful paradigm for doing so, and it is relevant to an enormous range of tasks, including robotics, game playing, consumer modeling and healthcare. This class will briefly cover background on Markov decision processes and reinforcement learning, before focusing on some of the central problems, including scaling up to large domains and the exploration challenge. One key tool for tackling complex RL domains is deep learning and this class will include at least one homework on deep reinforcement learning. Prerequisites: proficiency in python, CS 229 or equivalents or permission of the instructor; linear algebra, basic probability.",
                "courseTitle": "Reinforcement Learning",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3",
                "semester": "Winter"
            },
            {
                "courseId": "CS 234:",
                "courseLevel": "Graduate",
                "courseMeta": "To realize the dreams and impact of AI requires autonomous systems that learn to make good decisions. Reinforcement learning is one powerful paradigm for doing so, and it is relevant to an enormous range of tasks, including robotics, game playing, consumer modeling and healthcare. This class will briefly cover background on Markov decision processes and reinforcement learning, before focusing on some of the central problems, including scaling up to large domains and the exploration challenge. One key tool for tackling complex RL domains is deep learning and this class will include at least one homework on deep reinforcement learning. Prerequisites: proficiency in python, CS 229 or equivalents or permission of the instructor; linear algebra, basic probability.",
                "courseTitle": "Reinforcement Learning",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3",
                "semester": "Winter"
            },
            {
                "courseId": "CS 234:",
                "courseLevel": "Graduate",
                "courseMeta": "To realize the dreams and impact of AI requires autonomous systems that learn to make good decisions. Reinforcement learning is one powerful paradigm for doing so, and it is relevant to an enormous range of tasks, including robotics, game playing, consumer modeling and healthcare. This class will briefly cover background on Markov decision processes and reinforcement learning, before focusing on some of the central problems, including scaling up to large domains and the exploration challenge. One key tool for tackling complex RL domains is deep learning and this class will include at least one homework on deep reinforcement learning. Prerequisites: proficiency in python, CS 229 or equivalents or permission of the instructor; linear algebra, basic probability.",
                "courseTitle": "Reinforcement Learning",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3",
                "semester": "Winter"
            },
            {
                "courseId": "CS 234:",
                "courseLevel": "Graduate",
                "courseMeta": "To realize the dreams and impact of AI requires autonomous systems that learn to make good decisions. Reinforcement learning is one powerful paradigm for doing so, and it is relevant to an enormous range of tasks, including robotics, game playing, consumer modeling and healthcare. This class will briefly cover background on Markov decision processes and reinforcement learning, before focusing on some of the central problems, including scaling up to large domains and the exploration challenge. One key tool for tackling complex RL domains is deep learning and this class will include at least one homework on deep reinforcement learning. Prerequisites: proficiency in python, CS 229 or equivalents or permission of the instructor; linear algebra, basic probability.",
                "courseTitle": "Reinforcement Learning",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3",
                "semester": "Winter"
            },
            {
                "courseId": "CS 234:",
                "courseLevel": "Graduate",
                "courseMeta": "To realize the dreams and impact of AI requires autonomous systems that learn to make good decisions. Reinforcement learning is one powerful paradigm for doing so, and it is relevant to an enormous range of tasks, including robotics, game playing, consumer modeling and healthcare. This class will briefly cover background on Markov decision processes and reinforcement learning, before focusing on some of the central problems, including scaling up to large domains and the exploration challenge. One key tool for tackling complex RL domains is deep learning and this class will include at least one homework on deep reinforcement learning. Prerequisites: proficiency in python, CS 229 or equivalents or permission of the instructor; linear algebra, basic probability.",
                "courseTitle": "Reinforcement Learning",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3",
                "semester": "Winter"
            },
            {
                "courseId": "CS 234:",
                "courseLevel": "Graduate",
                "courseMeta": "To realize the dreams and impact of AI requires autonomous systems that learn to make good decisions. Reinforcement learning is one powerful paradigm for doing so, and it is relevant to an enormous range of tasks, including robotics, game playing, consumer modeling and healthcare. This class will briefly cover background on Markov decision processes and reinforcement learning, before focusing on some of the central problems, including scaling up to large domains and the exploration challenge. One key tool for tackling complex RL domains is deep learning and this class will include at least one homework on deep reinforcement learning. Prerequisites: proficiency in python, CS 229 or equivalents or permission of the instructor; linear algebra, basic probability.",
                "courseTitle": "Reinforcement Learning",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3",
                "semester": "Winter"
            }
        ]
    },
    "Fei-Fei Li": {
        "corpus": {
            "DBLP": "https://dblp.uni-trier.de/pers/hd/l/Li:Fei=Fei",
            "Google Scholar": "https://scholar.google.com/citations?user=rDfyQnIAAAAJ&hl=en&oi=ao",
            "domain": "nlp,ml",
            "home": "http://vision.stanford.edu/feifeili"
        },
        "courses": [
            {
                "courseId": "CS 231N:",
                "courseLevel": "Graduate",
                "courseMeta": "Computer Vision has become ubiquitous in our society, with applications innsearch, image understanding, apps, mapping, medicine, drones, andnself-driving cars. Core to many of these applications are the tasks of image classification, localization and detection. This course is a deep dive into details of neural network architectures with a focus on learning end-to-end models for these tasks, particularly image classification. During the 10-week course, students will learn to implement, train and debug their own neural networks and gain a detailed understanding of cutting-edge research in computer vision. The final assignment will involve training a multi-million parameter convolutional neural network and applying it on the largest image classification dataset (ImageNet). We will focus on teaching how to set up the problem of image recognition, the learning algorithms (e.g. backpropagation), practical engineering tricks for training and fine-tuning the networks and guide the students through hands-on assignments and a final course project. Much of the background and materials of this course will be drawn from the ImageNet Challenge: http://image-net.org/challenges/LSVRC/2014/index. Prerequisites: Proficiency in Python; familiarity with C/C++; CS 131 and CS 229 or equivalents; Math 21 or equivalent, linear algebra.",
                "courseTitle": "Convolutional Neural Networks for Visual Recognition",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3-4",
                "semester": "Spring"
            },
            {
                "courseId": "CS 231N:",
                "courseLevel": "Graduate",
                "courseMeta": "Computer Vision has become ubiquitous in our society, with applications innsearch, image understanding, apps, mapping, medicine, drones, andnself-driving cars. Core to many of these applications are the tasks of image classification, localization and detection. This course is a deep dive into details of neural network architectures with a focus on learning end-to-end models for these tasks, particularly image classification. During the 10-week course, students will learn to implement, train and debug their own neural networks and gain a detailed understanding of cutting-edge research in computer vision. The final assignment will involve training a multi-million parameter convolutional neural network and applying it on the largest image classification dataset (ImageNet). We will focus on teaching how to set up the problem of image recognition, the learning algorithms (e.g. backpropagation), practical engineering tricks for training and fine-tuning the networks and guide the students through hands-on assignments and a final course project. Much of the background and materials of this course will be drawn from the ImageNet Challenge: http://image-net.org/challenges/LSVRC/2014/index. Prerequisites: Proficiency in Python; familiarity with C/C++; CS 131 and CS 229 or equivalents; Math 21 or equivalent, linear algebra.",
                "courseTitle": "Convolutional Neural Networks for Visual Recognition",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3-4",
                "semester": "Spring"
            },
            {
                "courseId": "CS 231N:",
                "courseLevel": "Graduate",
                "courseMeta": "Computer Vision has become ubiquitous in our society, with applications innsearch, image understanding, apps, mapping, medicine, drones, andnself-driving cars. Core to many of these applications are the tasks of image classification, localization and detection. This course is a deep dive into details of neural network architectures with a focus on learning end-to-end models for these tasks, particularly image classification. During the 10-week course, students will learn to implement, train and debug their own neural networks and gain a detailed understanding of cutting-edge research in computer vision. The final assignment will involve training a multi-million parameter convolutional neural network and applying it on the largest image classification dataset (ImageNet). We will focus on teaching how to set up the problem of image recognition, the learning algorithms (e.g. backpropagation), practical engineering tricks for training and fine-tuning the networks and guide the students through hands-on assignments and a final course project. Much of the background and materials of this course will be drawn from the ImageNet Challenge: http://image-net.org/challenges/LSVRC/2014/index. Prerequisites: Proficiency in Python; familiarity with C/C++; CS 131 and CS 229 or equivalents; Math 21 or equivalent, linear algebra.",
                "courseTitle": "Convolutional Neural Networks for Visual Recognition",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3-4",
                "semester": "Spring"
            },
            {
                "courseId": "CS 231N:",
                "courseLevel": "Graduate",
                "courseMeta": "Computer Vision has become ubiquitous in our society, with applications innsearch, image understanding, apps, mapping, medicine, drones, andnself-driving cars. Core to many of these applications are the tasks of image classification, localization and detection. This course is a deep dive into details of neural network architectures with a focus on learning end-to-end models for these tasks, particularly image classification. During the 10-week course, students will learn to implement, train and debug their own neural networks and gain a detailed understanding of cutting-edge research in computer vision. The final assignment will involve training a multi-million parameter convolutional neural network and applying it on the largest image classification dataset (ImageNet). We will focus on teaching how to set up the problem of image recognition, the learning algorithms (e.g. backpropagation), practical engineering tricks for training and fine-tuning the networks and guide the students through hands-on assignments and a final course project. Much of the background and materials of this course will be drawn from the ImageNet Challenge: http://image-net.org/challenges/LSVRC/2014/index. Prerequisites: Proficiency in Python; familiarity with C/C++; CS 131 and CS 229 or equivalents; Math 21 or equivalent, linear algebra.",
                "courseTitle": "Convolutional Neural Networks for Visual Recognition",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3-4",
                "semester": "Spring"
            },
            {
                "courseId": "CS 231N:",
                "courseLevel": "Graduate",
                "courseMeta": "Computer Vision has become ubiquitous in our society, with applications innsearch, image understanding, apps, mapping, medicine, drones, andnself-driving cars. Core to many of these applications are the tasks of image classification, localization and detection. This course is a deep dive into details of neural network architectures with a focus on learning end-to-end models for these tasks, particularly image classification. During the 10-week course, students will learn to implement, train and debug their own neural networks and gain a detailed understanding of cutting-edge research in computer vision. The final assignment will involve training a multi-million parameter convolutional neural network and applying it on the largest image classification dataset (ImageNet). We will focus on teaching how to set up the problem of image recognition, the learning algorithms (e.g. backpropagation), practical engineering tricks for training and fine-tuning the networks and guide the students through hands-on assignments and a final course project. Much of the background and materials of this course will be drawn from the ImageNet Challenge: http://image-net.org/challenges/LSVRC/2014/index. Prerequisites: Proficiency in Python; familiarity with C/C++; CS 131 and CS 229 or equivalents; Math 21 or equivalent, linear algebra.",
                "courseTitle": "Convolutional Neural Networks for Visual Recognition",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3-4",
                "semester": "Spring"
            },
            {
                "courseId": "CS 231N:",
                "courseLevel": "Graduate",
                "courseMeta": "Computer Vision has become ubiquitous in our society, with applications innsearch, image understanding, apps, mapping, medicine, drones, andnself-driving cars. Core to many of these applications are the tasks of image classification, localization and detection. This course is a deep dive into details of neural network architectures with a focus on learning end-to-end models for these tasks, particularly image classification. During the 10-week course, students will learn to implement, train and debug their own neural networks and gain a detailed understanding of cutting-edge research in computer vision. The final assignment will involve training a multi-million parameter convolutional neural network and applying it on the largest image classification dataset (ImageNet). We will focus on teaching how to set up the problem of image recognition, the learning algorithms (e.g. backpropagation), practical engineering tricks for training and fine-tuning the networks and guide the students through hands-on assignments and a final course project. Much of the background and materials of this course will be drawn from the ImageNet Challenge: http://image-net.org/challenges/LSVRC/2014/index. Prerequisites: Proficiency in Python; familiarity with C/C++; CS 131 and CS 229 or equivalents; Math 21 or equivalent, linear algebra.",
                "courseTitle": "Convolutional Neural Networks for Visual Recognition",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3-4",
                "semester": "Spring"
            },
            {
                "courseId": "CS 231N:",
                "courseLevel": "Graduate",
                "courseMeta": "Computer Vision has become ubiquitous in our society, with applications innsearch, image understanding, apps, mapping, medicine, drones, andnself-driving cars. Core to many of these applications are the tasks of image classification, localization and detection. This course is a deep dive into details of neural network architectures with a focus on learning end-to-end models for these tasks, particularly image classification. During the 10-week course, students will learn to implement, train and debug their own neural networks and gain a detailed understanding of cutting-edge research in computer vision. The final assignment will involve training a multi-million parameter convolutional neural network and applying it on the largest image classification dataset (ImageNet). We will focus on teaching how to set up the problem of image recognition, the learning algorithms (e.g. backpropagation), practical engineering tricks for training and fine-tuning the networks and guide the students through hands-on assignments and a final course project. Much of the background and materials of this course will be drawn from the ImageNet Challenge: http://image-net.org/challenges/LSVRC/2014/index. Prerequisites: Proficiency in Python; familiarity with C/C++; CS 131 and CS 229 or equivalents; Math 21 or equivalent, linear algebra.",
                "courseTitle": "Convolutional Neural Networks for Visual Recognition",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3-4",
                "semester": "Spring"
            },
            {
                "courseId": "CS 231N:",
                "courseLevel": "Graduate",
                "courseMeta": "Computer Vision has become ubiquitous in our society, with applications innsearch, image understanding, apps, mapping, medicine, drones, andnself-driving cars. Core to many of these applications are the tasks of image classification, localization and detection. This course is a deep dive into details of neural network architectures with a focus on learning end-to-end models for these tasks, particularly image classification. During the 10-week course, students will learn to implement, train and debug their own neural networks and gain a detailed understanding of cutting-edge research in computer vision. The final assignment will involve training a multi-million parameter convolutional neural network and applying it on the largest image classification dataset (ImageNet). We will focus on teaching how to set up the problem of image recognition, the learning algorithms (e.g. backpropagation), practical engineering tricks for training and fine-tuning the networks and guide the students through hands-on assignments and a final course project. Much of the background and materials of this course will be drawn from the ImageNet Challenge: http://image-net.org/challenges/LSVRC/2014/index. Prerequisites: Proficiency in Python; familiarity with C/C++; CS 131 and CS 229 or equivalents; Math 21 or equivalent, linear algebra.",
                "courseTitle": "Convolutional Neural Networks for Visual Recognition",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3-4",
                "semester": "Spring"
            },
            {
                "courseId": "CS 231N:",
                "courseLevel": "Graduate",
                "courseMeta": "Computer Vision has become ubiquitous in our society, with applications innsearch, image understanding, apps, mapping, medicine, drones, andnself-driving cars. Core to many of these applications are the tasks of image classification, localization and detection. This course is a deep dive into details of neural network architectures with a focus on learning end-to-end models for these tasks, particularly image classification. During the 10-week course, students will learn to implement, train and debug their own neural networks and gain a detailed understanding of cutting-edge research in computer vision. The final assignment will involve training a multi-million parameter convolutional neural network and applying it on the largest image classification dataset (ImageNet). We will focus on teaching how to set up the problem of image recognition, the learning algorithms (e.g. backpropagation), practical engineering tricks for training and fine-tuning the networks and guide the students through hands-on assignments and a final course project. Much of the background and materials of this course will be drawn from the ImageNet Challenge: http://image-net.org/challenges/LSVRC/2014/index. Prerequisites: Proficiency in Python; familiarity with C/C++; CS 131 and CS 229 or equivalents; Math 21 or equivalent, linear algebra.",
                "courseTitle": "Convolutional Neural Networks for Visual Recognition",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3-4",
                "semester": "Spring"
            },
            {
                "courseId": "CS 231N:",
                "courseLevel": "Graduate",
                "courseMeta": "Computer Vision has become ubiquitous in our society, with applications innsearch, image understanding, apps, mapping, medicine, drones, andnself-driving cars. Core to many of these applications are the tasks of image classification, localization and detection. This course is a deep dive into details of neural network architectures with a focus on learning end-to-end models for these tasks, particularly image classification. During the 10-week course, students will learn to implement, train and debug their own neural networks and gain a detailed understanding of cutting-edge research in computer vision. The final assignment will involve training a multi-million parameter convolutional neural network and applying it on the largest image classification dataset (ImageNet). We will focus on teaching how to set up the problem of image recognition, the learning algorithms (e.g. backpropagation), practical engineering tricks for training and fine-tuning the networks and guide the students through hands-on assignments and a final course project. Much of the background and materials of this course will be drawn from the ImageNet Challenge: http://image-net.org/challenges/LSVRC/2014/index. Prerequisites: Proficiency in Python; familiarity with C/C++; CS 131 and CS 229 or equivalents; Math 21 or equivalent, linear algebra.",
                "courseTitle": "Convolutional Neural Networks for Visual Recognition",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3-4",
                "semester": "Spring"
            },
            {
                "courseId": "CS 231N:",
                "courseLevel": "Graduate",
                "courseMeta": "Computer Vision has become ubiquitous in our society, with applications innsearch, image understanding, apps, mapping, medicine, drones, andnself-driving cars. Core to many of these applications are the tasks of image classification, localization and detection. This course is a deep dive into details of neural network architectures with a focus on learning end-to-end models for these tasks, particularly image classification. During the 10-week course, students will learn to implement, train and debug their own neural networks and gain a detailed understanding of cutting-edge research in computer vision. The final assignment will involve training a multi-million parameter convolutional neural network and applying it on the largest image classification dataset (ImageNet). We will focus on teaching how to set up the problem of image recognition, the learning algorithms (e.g. backpropagation), practical engineering tricks for training and fine-tuning the networks and guide the students through hands-on assignments and a final course project. Much of the background and materials of this course will be drawn from the ImageNet Challenge: http://image-net.org/challenges/LSVRC/2014/index. Prerequisites: Proficiency in Python; familiarity with C/C++; CS 131 and CS 229 or equivalents; Math 21 or equivalent, linear algebra.",
                "courseTitle": "Convolutional Neural Networks for Visual Recognition",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3-4",
                "semester": "Spring"
            },
            {
                "courseId": "CS 231N:",
                "courseLevel": "Graduate",
                "courseMeta": "Computer Vision has become ubiquitous in our society, with applications innsearch, image understanding, apps, mapping, medicine, drones, andnself-driving cars. Core to many of these applications are the tasks of image classification, localization and detection. This course is a deep dive into details of neural network architectures with a focus on learning end-to-end models for these tasks, particularly image classification. During the 10-week course, students will learn to implement, train and debug their own neural networks and gain a detailed understanding of cutting-edge research in computer vision. The final assignment will involve training a multi-million parameter convolutional neural network and applying it on the largest image classification dataset (ImageNet). We will focus on teaching how to set up the problem of image recognition, the learning algorithms (e.g. backpropagation), practical engineering tricks for training and fine-tuning the networks and guide the students through hands-on assignments and a final course project. Much of the background and materials of this course will be drawn from the ImageNet Challenge: http://image-net.org/challenges/LSVRC/2014/index. Prerequisites: Proficiency in Python; familiarity with C/C++; CS 131 and CS 229 or equivalents; Math 21 or equivalent, linear algebra.",
                "courseTitle": "Convolutional Neural Networks for Visual Recognition",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3-4",
                "semester": "Spring"
            },
            {
                "courseId": "CS 231N:",
                "courseLevel": "Graduate",
                "courseMeta": "Computer Vision has become ubiquitous in our society, with applications innsearch, image understanding, apps, mapping, medicine, drones, andnself-driving cars. Core to many of these applications are the tasks of image classification, localization and detection. This course is a deep dive into details of neural network architectures with a focus on learning end-to-end models for these tasks, particularly image classification. During the 10-week course, students will learn to implement, train and debug their own neural networks and gain a detailed understanding of cutting-edge research in computer vision. The final assignment will involve training a multi-million parameter convolutional neural network and applying it on the largest image classification dataset (ImageNet). We will focus on teaching how to set up the problem of image recognition, the learning algorithms (e.g. backpropagation), practical engineering tricks for training and fine-tuning the networks and guide the students through hands-on assignments and a final course project. Much of the background and materials of this course will be drawn from the ImageNet Challenge: http://image-net.org/challenges/LSVRC/2014/index. Prerequisites: Proficiency in Python; familiarity with C/C++; CS 131 and CS 229 or equivalents; Math 21 or equivalent, linear algebra.",
                "courseTitle": "Convolutional Neural Networks for Visual Recognition",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3-4",
                "semester": "Spring"
            },
            {
                "courseId": "CS 231N:",
                "courseLevel": "Graduate",
                "courseMeta": "Computer Vision has become ubiquitous in our society, with applications innsearch, image understanding, apps, mapping, medicine, drones, andnself-driving cars. Core to many of these applications are the tasks of image classification, localization and detection. This course is a deep dive into details of neural network architectures with a focus on learning end-to-end models for these tasks, particularly image classification. During the 10-week course, students will learn to implement, train and debug their own neural networks and gain a detailed understanding of cutting-edge research in computer vision. The final assignment will involve training a multi-million parameter convolutional neural network and applying it on the largest image classification dataset (ImageNet). We will focus on teaching how to set up the problem of image recognition, the learning algorithms (e.g. backpropagation), practical engineering tricks for training and fine-tuning the networks and guide the students through hands-on assignments and a final course project. Much of the background and materials of this course will be drawn from the ImageNet Challenge: http://image-net.org/challenges/LSVRC/2014/index. Prerequisites: Proficiency in Python; familiarity with C/C++; CS 131 and CS 229 or equivalents; Math 21 or equivalent, linear algebra.",
                "courseTitle": "Convolutional Neural Networks for Visual Recognition",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3-4",
                "semester": "Spring"
            },
            {
                "courseId": "CS 231N:",
                "courseLevel": "Graduate",
                "courseMeta": "Computer Vision has become ubiquitous in our society, with applications innsearch, image understanding, apps, mapping, medicine, drones, andnself-driving cars. Core to many of these applications are the tasks of image classification, localization and detection. This course is a deep dive into details of neural network architectures with a focus on learning end-to-end models for these tasks, particularly image classification. During the 10-week course, students will learn to implement, train and debug their own neural networks and gain a detailed understanding of cutting-edge research in computer vision. The final assignment will involve training a multi-million parameter convolutional neural network and applying it on the largest image classification dataset (ImageNet). We will focus on teaching how to set up the problem of image recognition, the learning algorithms (e.g. backpropagation), practical engineering tricks for training and fine-tuning the networks and guide the students through hands-on assignments and a final course project. Much of the background and materials of this course will be drawn from the ImageNet Challenge: http://image-net.org/challenges/LSVRC/2014/index. Prerequisites: Proficiency in Python; familiarity with C/C++; CS 131 and CS 229 or equivalents; Math 21 or equivalent, linear algebra.",
                "courseTitle": "Convolutional Neural Networks for Visual Recognition",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3-4",
                "semester": "Spring"
            },
            {
                "courseId": "CS 231N:",
                "courseLevel": "Graduate",
                "courseMeta": "Computer Vision has become ubiquitous in our society, with applications innsearch, image understanding, apps, mapping, medicine, drones, andnself-driving cars. Core to many of these applications are the tasks of image classification, localization and detection. This course is a deep dive into details of neural network architectures with a focus on learning end-to-end models for these tasks, particularly image classification. During the 10-week course, students will learn to implement, train and debug their own neural networks and gain a detailed understanding of cutting-edge research in computer vision. The final assignment will involve training a multi-million parameter convolutional neural network and applying it on the largest image classification dataset (ImageNet). We will focus on teaching how to set up the problem of image recognition, the learning algorithms (e.g. backpropagation), practical engineering tricks for training and fine-tuning the networks and guide the students through hands-on assignments and a final course project. Much of the background and materials of this course will be drawn from the ImageNet Challenge: http://image-net.org/challenges/LSVRC/2014/index. Prerequisites: Proficiency in Python; familiarity with C/C++; CS 131 and CS 229 or equivalents; Math 21 or equivalent, linear algebra.",
                "courseTitle": "Convolutional Neural Networks for Visual Recognition",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3-4",
                "semester": "Spring"
            },
            {
                "courseId": "CS 231N:",
                "courseLevel": "Graduate",
                "courseMeta": "Computer Vision has become ubiquitous in our society, with applications innsearch, image understanding, apps, mapping, medicine, drones, andnself-driving cars. Core to many of these applications are the tasks of image classification, localization and detection. This course is a deep dive into details of neural network architectures with a focus on learning end-to-end models for these tasks, particularly image classification. During the 10-week course, students will learn to implement, train and debug their own neural networks and gain a detailed understanding of cutting-edge research in computer vision. The final assignment will involve training a multi-million parameter convolutional neural network and applying it on the largest image classification dataset (ImageNet). We will focus on teaching how to set up the problem of image recognition, the learning algorithms (e.g. backpropagation), practical engineering tricks for training and fine-tuning the networks and guide the students through hands-on assignments and a final course project. Much of the background and materials of this course will be drawn from the ImageNet Challenge: http://image-net.org/challenges/LSVRC/2014/index. Prerequisites: Proficiency in Python; familiarity with C/C++; CS 131 and CS 229 or equivalents; Math 21 or equivalent, linear algebra.",
                "courseTitle": "Convolutional Neural Networks for Visual Recognition",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3-4",
                "semester": "Spring"
            },
            {
                "courseId": "CS 231N:",
                "courseLevel": "Graduate",
                "courseMeta": "Computer Vision has become ubiquitous in our society, with applications innsearch, image understanding, apps, mapping, medicine, drones, andnself-driving cars. Core to many of these applications are the tasks of image classification, localization and detection. This course is a deep dive into details of neural network architectures with a focus on learning end-to-end models for these tasks, particularly image classification. During the 10-week course, students will learn to implement, train and debug their own neural networks and gain a detailed understanding of cutting-edge research in computer vision. The final assignment will involve training a multi-million parameter convolutional neural network and applying it on the largest image classification dataset (ImageNet). We will focus on teaching how to set up the problem of image recognition, the learning algorithms (e.g. backpropagation), practical engineering tricks for training and fine-tuning the networks and guide the students through hands-on assignments and a final course project. Much of the background and materials of this course will be drawn from the ImageNet Challenge: http://image-net.org/challenges/LSVRC/2014/index. Prerequisites: Proficiency in Python; familiarity with C/C++; CS 131 and CS 229 or equivalents; Math 21 or equivalent, linear algebra.",
                "courseTitle": "Convolutional Neural Networks for Visual Recognition",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3-4",
                "semester": "Spring"
            },
            {
                "courseId": "CS 231N:",
                "courseLevel": "Graduate",
                "courseMeta": "Computer Vision has become ubiquitous in our society, with applications innsearch, image understanding, apps, mapping, medicine, drones, andnself-driving cars. Core to many of these applications are the tasks of image classification, localization and detection. This course is a deep dive into details of neural network architectures with a focus on learning end-to-end models for these tasks, particularly image classification. During the 10-week course, students will learn to implement, train and debug their own neural networks and gain a detailed understanding of cutting-edge research in computer vision. The final assignment will involve training a multi-million parameter convolutional neural network and applying it on the largest image classification dataset (ImageNet). We will focus on teaching how to set up the problem of image recognition, the learning algorithms (e.g. backpropagation), practical engineering tricks for training and fine-tuning the networks and guide the students through hands-on assignments and a final course project. Much of the background and materials of this course will be drawn from the ImageNet Challenge: http://image-net.org/challenges/LSVRC/2014/index. Prerequisites: Proficiency in Python; familiarity with C/C++; CS 131 and CS 229 or equivalents; Math 21 or equivalent, linear algebra.",
                "courseTitle": "Convolutional Neural Networks for Visual Recognition",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3-4",
                "semester": "Spring"
            },
            {
                "courseId": "CS 231N:",
                "courseLevel": "Graduate",
                "courseMeta": "Computer Vision has become ubiquitous in our society, with applications innsearch, image understanding, apps, mapping, medicine, drones, andnself-driving cars. Core to many of these applications are the tasks of image classification, localization and detection. This course is a deep dive into details of neural network architectures with a focus on learning end-to-end models for these tasks, particularly image classification. During the 10-week course, students will learn to implement, train and debug their own neural networks and gain a detailed understanding of cutting-edge research in computer vision. The final assignment will involve training a multi-million parameter convolutional neural network and applying it on the largest image classification dataset (ImageNet). We will focus on teaching how to set up the problem of image recognition, the learning algorithms (e.g. backpropagation), practical engineering tricks for training and fine-tuning the networks and guide the students through hands-on assignments and a final course project. Much of the background and materials of this course will be drawn from the ImageNet Challenge: http://image-net.org/challenges/LSVRC/2014/index. Prerequisites: Proficiency in Python; familiarity with C/C++; CS 131 and CS 229 or equivalents; Math 21 or equivalent, linear algebra.",
                "courseTitle": "Convolutional Neural Networks for Visual Recognition",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3-4",
                "semester": "Spring"
            },
            {
                "courseId": "CS 231N:",
                "courseLevel": "Graduate",
                "courseMeta": "Computer Vision has become ubiquitous in our society, with applications innsearch, image understanding, apps, mapping, medicine, drones, andnself-driving cars. Core to many of these applications are the tasks of image classification, localization and detection. This course is a deep dive into details of neural network architectures with a focus on learning end-to-end models for these tasks, particularly image classification. During the 10-week course, students will learn to implement, train and debug their own neural networks and gain a detailed understanding of cutting-edge research in computer vision. The final assignment will involve training a multi-million parameter convolutional neural network and applying it on the largest image classification dataset (ImageNet). We will focus on teaching how to set up the problem of image recognition, the learning algorithms (e.g. backpropagation), practical engineering tricks for training and fine-tuning the networks and guide the students through hands-on assignments and a final course project. Much of the background and materials of this course will be drawn from the ImageNet Challenge: http://image-net.org/challenges/LSVRC/2014/index. Prerequisites: Proficiency in Python; familiarity with C/C++; CS 131 and CS 229 or equivalents; Math 21 or equivalent, linear algebra.",
                "courseTitle": "Convolutional Neural Networks for Visual Recognition",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3-4",
                "semester": "Spring"
            },
            {
                "courseId": "CS 231N:",
                "courseLevel": "Graduate",
                "courseMeta": "Computer Vision has become ubiquitous in our society, with applications innsearch, image understanding, apps, mapping, medicine, drones, andnself-driving cars. Core to many of these applications are the tasks of image classification, localization and detection. This course is a deep dive into details of neural network architectures with a focus on learning end-to-end models for these tasks, particularly image classification. During the 10-week course, students will learn to implement, train and debug their own neural networks and gain a detailed understanding of cutting-edge research in computer vision. The final assignment will involve training a multi-million parameter convolutional neural network and applying it on the largest image classification dataset (ImageNet). We will focus on teaching how to set up the problem of image recognition, the learning algorithms (e.g. backpropagation), practical engineering tricks for training and fine-tuning the networks and guide the students through hands-on assignments and a final course project. Much of the background and materials of this course will be drawn from the ImageNet Challenge: http://image-net.org/challenges/LSVRC/2014/index. Prerequisites: Proficiency in Python; familiarity with C/C++; CS 131 and CS 229 or equivalents; Math 21 or equivalent, linear algebra.",
                "courseTitle": "Convolutional Neural Networks for Visual Recognition",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3-4",
                "semester": "Spring"
            },
            {
                "courseId": "CS 231N:",
                "courseLevel": "Graduate",
                "courseMeta": "Computer Vision has become ubiquitous in our society, with applications innsearch, image understanding, apps, mapping, medicine, drones, andnself-driving cars. Core to many of these applications are the tasks of image classification, localization and detection. This course is a deep dive into details of neural network architectures with a focus on learning end-to-end models for these tasks, particularly image classification. During the 10-week course, students will learn to implement, train and debug their own neural networks and gain a detailed understanding of cutting-edge research in computer vision. The final assignment will involve training a multi-million parameter convolutional neural network and applying it on the largest image classification dataset (ImageNet). We will focus on teaching how to set up the problem of image recognition, the learning algorithms (e.g. backpropagation), practical engineering tricks for training and fine-tuning the networks and guide the students through hands-on assignments and a final course project. Much of the background and materials of this course will be drawn from the ImageNet Challenge: http://image-net.org/challenges/LSVRC/2014/index. Prerequisites: Proficiency in Python; familiarity with C/C++; CS 131 and CS 229 or equivalents; Math 21 or equivalent, linear algebra.",
                "courseTitle": "Convolutional Neural Networks for Visual Recognition",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3-4",
                "semester": "Spring"
            },
            {
                "courseId": "CS 231N:",
                "courseLevel": "Graduate",
                "courseMeta": "Computer Vision has become ubiquitous in our society, with applications innsearch, image understanding, apps, mapping, medicine, drones, andnself-driving cars. Core to many of these applications are the tasks of image classification, localization and detection. This course is a deep dive into details of neural network architectures with a focus on learning end-to-end models for these tasks, particularly image classification. During the 10-week course, students will learn to implement, train and debug their own neural networks and gain a detailed understanding of cutting-edge research in computer vision. The final assignment will involve training a multi-million parameter convolutional neural network and applying it on the largest image classification dataset (ImageNet). We will focus on teaching how to set up the problem of image recognition, the learning algorithms (e.g. backpropagation), practical engineering tricks for training and fine-tuning the networks and guide the students through hands-on assignments and a final course project. Much of the background and materials of this course will be drawn from the ImageNet Challenge: http://image-net.org/challenges/LSVRC/2014/index. Prerequisites: Proficiency in Python; familiarity with C/C++; CS 131 and CS 229 or equivalents; Math 21 or equivalent, linear algebra.",
                "courseTitle": "Convolutional Neural Networks for Visual Recognition",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3-4",
                "semester": "Spring"
            }
        ]
    },
    "Gregory Valiant": {
        "corpus": {
            "DBLP": "https://dblp.uni-trier.de/pers/hd/v/Valiant:Gregory",
            "Google Scholar": "https://scholar.google.com/citations?user=CgItEbQAAAAJ&hl=en&oi=ao",
            "domain": "theory",
            "home": "http://theory.stanford.edu/~valiant"
        },
        "courses": [
            {
                "courseId": "CME 309:",
                "courseLevel": "Graduate",
                "courseMeta": "Randomness pervades the natural processes around us, from the formation of networks, to genetic recombination, to quantum physics. Randomness is also a powerful tool that can be leveraged to create algorithms and data structures which, in many cases, are more efficient and simpler than their deterministic counterparts. This course covers the key tools of probabilistic analysis, and application of these tools to understand the behaviors of random processes and algorithms. Emphasis is on theoretical foundations, though we will apply this theory broadly, discussing applications in machine learning and data analysis, networking, and systems. Topics include tail bounds, the probabilistic method, Markov chains, and martingales, with applications to analyzing random graphs, metric embeddings, random walks, and a host of powerful and elegant randomized algorithms. Prerequisites: CS 161 and STAT 116, or equivalents and instructor consent.",
                "courseTitle": "Randomized Algorithms and Probabilistic Analysis (CS 265)",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3",
                "semester": "Fall"
            },
            {
                "courseId": "CME 309:",
                "courseLevel": "Graduate",
                "courseMeta": "Randomness pervades the natural processes around us, from the formation of networks, to genetic recombination, to quantum physics. Randomness is also a powerful tool that can be leveraged to create algorithms and data structures which, in many cases, are more efficient and simpler than their deterministic counterparts. This course covers the key tools of probabilistic analysis, and application of these tools to understand the behaviors of random processes and algorithms. Emphasis is on theoretical foundations, though we will apply this theory broadly, discussing applications in machine learning and data analysis, networking, and systems. Topics include tail bounds, the probabilistic method, Markov chains, and martingales, with applications to analyzing random graphs, metric embeddings, random walks, and a host of powerful and elegant randomized algorithms. Prerequisites: CS 161 and STAT 116, or equivalents and instructor consent.",
                "courseTitle": "Randomized Algorithms and Probabilistic Analysis (CS 265)",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3",
                "semester": "Fall"
            },
            {
                "courseId": "CME 309:",
                "courseLevel": "Graduate",
                "courseMeta": "Randomness pervades the natural processes around us, from the formation of networks, to genetic recombination, to quantum physics. Randomness is also a powerful tool that can be leveraged to create algorithms and data structures which, in many cases, are more efficient and simpler than their deterministic counterparts. This course covers the key tools of probabilistic analysis, and application of these tools to understand the behaviors of random processes and algorithms. Emphasis is on theoretical foundations, though we will apply this theory broadly, discussing applications in machine learning and data analysis, networking, and systems. Topics include tail bounds, the probabilistic method, Markov chains, and martingales, with applications to analyzing random graphs, metric embeddings, random walks, and a host of powerful and elegant randomized algorithms. Prerequisites: CS 161 and STAT 116, or equivalents and instructor consent.",
                "courseTitle": "Randomized Algorithms and Probabilistic Analysis (CS 265)",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3",
                "semester": "Fall"
            },
            {
                "courseId": "CME 309:",
                "courseLevel": "Graduate",
                "courseMeta": "Randomness pervades the natural processes around us, from the formation of networks, to genetic recombination, to quantum physics. Randomness is also a powerful tool that can be leveraged to create algorithms and data structures which, in many cases, are more efficient and simpler than their deterministic counterparts. This course covers the key tools of probabilistic analysis, and application of these tools to understand the behaviors of random processes and algorithms. Emphasis is on theoretical foundations, though we will apply this theory broadly, discussing applications in machine learning and data analysis, networking, and systems. Topics include tail bounds, the probabilistic method, Markov chains, and martingales, with applications to analyzing random graphs, metric embeddings, random walks, and a host of powerful and elegant randomized algorithms. Prerequisites: CS 161 and STAT 116, or equivalents and instructor consent.",
                "courseTitle": "Randomized Algorithms and Probabilistic Analysis (CS 265)",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3",
                "semester": "Fall"
            },
            {
                "courseId": "CME 309:",
                "courseLevel": "Graduate",
                "courseMeta": "Randomness pervades the natural processes around us, from the formation of networks, to genetic recombination, to quantum physics. Randomness is also a powerful tool that can be leveraged to create algorithms and data structures which, in many cases, are more efficient and simpler than their deterministic counterparts. This course covers the key tools of probabilistic analysis, and application of these tools to understand the behaviors of random processes and algorithms. Emphasis is on theoretical foundations, though we will apply this theory broadly, discussing applications in machine learning and data analysis, networking, and systems. Topics include tail bounds, the probabilistic method, Markov chains, and martingales, with applications to analyzing random graphs, metric embeddings, random walks, and a host of powerful and elegant randomized algorithms. Prerequisites: CS 161 and STAT 116, or equivalents and instructor consent.",
                "courseTitle": "Randomized Algorithms and Probabilistic Analysis (CS 265)",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3",
                "semester": "Fall"
            },
            {
                "courseId": "CME 309:",
                "courseLevel": "Graduate",
                "courseMeta": "Randomness pervades the natural processes around us, from the formation of networks, to genetic recombination, to quantum physics. Randomness is also a powerful tool that can be leveraged to create algorithms and data structures which, in many cases, are more efficient and simpler than their deterministic counterparts. This course covers the key tools of probabilistic analysis, and application of these tools to understand the behaviors of random processes and algorithms. Emphasis is on theoretical foundations, though we will apply this theory broadly, discussing applications in machine learning and data analysis, networking, and systems. Topics include tail bounds, the probabilistic method, Markov chains, and martingales, with applications to analyzing random graphs, metric embeddings, random walks, and a host of powerful and elegant randomized algorithms. Prerequisites: CS 161 and STAT 116, or equivalents and instructor consent.",
                "courseTitle": "Randomized Algorithms and Probabilistic Analysis (CS 265)",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3",
                "semester": "Fall"
            },
            {
                "courseId": "CME 309:",
                "courseLevel": "Graduate",
                "courseMeta": "Randomness pervades the natural processes around us, from the formation of networks, to genetic recombination, to quantum physics. Randomness is also a powerful tool that can be leveraged to create algorithms and data structures which, in many cases, are more efficient and simpler than their deterministic counterparts. This course covers the key tools of probabilistic analysis, and application of these tools to understand the behaviors of random processes and algorithms. Emphasis is on theoretical foundations, though we will apply this theory broadly, discussing applications in machine learning and data analysis, networking, and systems. Topics include tail bounds, the probabilistic method, Markov chains, and martingales, with applications to analyzing random graphs, metric embeddings, random walks, and a host of powerful and elegant randomized algorithms. Prerequisites: CS 161 and STAT 116, or equivalents and instructor consent.",
                "courseTitle": "Randomized Algorithms and Probabilistic Analysis (CS 265)",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3",
                "semester": "Fall"
            },
            {
                "courseId": "CME 309:",
                "courseLevel": "Graduate",
                "courseMeta": "Randomness pervades the natural processes around us, from the formation of networks, to genetic recombination, to quantum physics. Randomness is also a powerful tool that can be leveraged to create algorithms and data structures which, in many cases, are more efficient and simpler than their deterministic counterparts. This course covers the key tools of probabilistic analysis, and application of these tools to understand the behaviors of random processes and algorithms. Emphasis is on theoretical foundations, though we will apply this theory broadly, discussing applications in machine learning and data analysis, networking, and systems. Topics include tail bounds, the probabilistic method, Markov chains, and martingales, with applications to analyzing random graphs, metric embeddings, random walks, and a host of powerful and elegant randomized algorithms. Prerequisites: CS 161 and STAT 116, or equivalents and instructor consent.",
                "courseTitle": "Randomized Algorithms and Probabilistic Analysis (CS 265)",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3",
                "semester": "Fall"
            },
            {
                "courseId": "CME 309:",
                "courseLevel": "Graduate",
                "courseMeta": "Randomness pervades the natural processes around us, from the formation of networks, to genetic recombination, to quantum physics. Randomness is also a powerful tool that can be leveraged to create algorithms and data structures which, in many cases, are more efficient and simpler than their deterministic counterparts. This course covers the key tools of probabilistic analysis, and application of these tools to understand the behaviors of random processes and algorithms. Emphasis is on theoretical foundations, though we will apply this theory broadly, discussing applications in machine learning and data analysis, networking, and systems. Topics include tail bounds, the probabilistic method, Markov chains, and martingales, with applications to analyzing random graphs, metric embeddings, random walks, and a host of powerful and elegant randomized algorithms. Prerequisites: CS 161 and STAT 116, or equivalents and instructor consent.",
                "courseTitle": "Randomized Algorithms and Probabilistic Analysis (CS 265)",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3",
                "semester": "Fall"
            },
            {
                "courseId": "CME 309:",
                "courseLevel": "Graduate",
                "courseMeta": "Randomness pervades the natural processes around us, from the formation of networks, to genetic recombination, to quantum physics. Randomness is also a powerful tool that can be leveraged to create algorithms and data structures which, in many cases, are more efficient and simpler than their deterministic counterparts. This course covers the key tools of probabilistic analysis, and application of these tools to understand the behaviors of random processes and algorithms. Emphasis is on theoretical foundations, though we will apply this theory broadly, discussing applications in machine learning and data analysis, networking, and systems. Topics include tail bounds, the probabilistic method, Markov chains, and martingales, with applications to analyzing random graphs, metric embeddings, random walks, and a host of powerful and elegant randomized algorithms. Prerequisites: CS 161 and STAT 116, or equivalents and instructor consent.",
                "courseTitle": "Randomized Algorithms and Probabilistic Analysis (CS 265)",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3",
                "semester": "Fall"
            },
            {
                "courseId": "CME 309:",
                "courseLevel": "Graduate",
                "courseMeta": "Randomness pervades the natural processes around us, from the formation of networks, to genetic recombination, to quantum physics. Randomness is also a powerful tool that can be leveraged to create algorithms and data structures which, in many cases, are more efficient and simpler than their deterministic counterparts. This course covers the key tools of probabilistic analysis, and application of these tools to understand the behaviors of random processes and algorithms. Emphasis is on theoretical foundations, though we will apply this theory broadly, discussing applications in machine learning and data analysis, networking, and systems. Topics include tail bounds, the probabilistic method, Markov chains, and martingales, with applications to analyzing random graphs, metric embeddings, random walks, and a host of powerful and elegant randomized algorithms. Prerequisites: CS 161 and STAT 116, or equivalents and instructor consent.",
                "courseTitle": "Randomized Algorithms and Probabilistic Analysis (CS 265)",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3",
                "semester": "Fall"
            },
            {
                "courseId": "CME 309:",
                "courseLevel": "Graduate",
                "courseMeta": "Randomness pervades the natural processes around us, from the formation of networks, to genetic recombination, to quantum physics. Randomness is also a powerful tool that can be leveraged to create algorithms and data structures which, in many cases, are more efficient and simpler than their deterministic counterparts. This course covers the key tools of probabilistic analysis, and application of these tools to understand the behaviors of random processes and algorithms. Emphasis is on theoretical foundations, though we will apply this theory broadly, discussing applications in machine learning and data analysis, networking, and systems. Topics include tail bounds, the probabilistic method, Markov chains, and martingales, with applications to analyzing random graphs, metric embeddings, random walks, and a host of powerful and elegant randomized algorithms. Prerequisites: CS 161 and STAT 116, or equivalents and instructor consent.",
                "courseTitle": "Randomized Algorithms and Probabilistic Analysis (CS 265)",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3",
                "semester": "Fall"
            },
            {
                "courseId": "CME 309:",
                "courseLevel": "Graduate",
                "courseMeta": "Randomness pervades the natural processes around us, from the formation of networks, to genetic recombination, to quantum physics. Randomness is also a powerful tool that can be leveraged to create algorithms and data structures which, in many cases, are more efficient and simpler than their deterministic counterparts. This course covers the key tools of probabilistic analysis, and application of these tools to understand the behaviors of random processes and algorithms. Emphasis is on theoretical foundations, though we will apply this theory broadly, discussing applications in machine learning and data analysis, networking, and systems. Topics include tail bounds, the probabilistic method, Markov chains, and martingales, with applications to analyzing random graphs, metric embeddings, random walks, and a host of powerful and elegant randomized algorithms. Prerequisites: CS 161 and STAT 116, or equivalents and instructor consent.",
                "courseTitle": "Randomized Algorithms and Probabilistic Analysis (CS 265)",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3",
                "semester": "Fall"
            },
            {
                "courseId": "CME 309:",
                "courseLevel": "Graduate",
                "courseMeta": "Randomness pervades the natural processes around us, from the formation of networks, to genetic recombination, to quantum physics. Randomness is also a powerful tool that can be leveraged to create algorithms and data structures which, in many cases, are more efficient and simpler than their deterministic counterparts. This course covers the key tools of probabilistic analysis, and application of these tools to understand the behaviors of random processes and algorithms. Emphasis is on theoretical foundations, though we will apply this theory broadly, discussing applications in machine learning and data analysis, networking, and systems. Topics include tail bounds, the probabilistic method, Markov chains, and martingales, with applications to analyzing random graphs, metric embeddings, random walks, and a host of powerful and elegant randomized algorithms. Prerequisites: CS 161 and STAT 116, or equivalents and instructor consent.",
                "courseTitle": "Randomized Algorithms and Probabilistic Analysis (CS 265)",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3",
                "semester": "Fall"
            },
            {
                "courseId": "CME 309:",
                "courseLevel": "Graduate",
                "courseMeta": "Randomness pervades the natural processes around us, from the formation of networks, to genetic recombination, to quantum physics. Randomness is also a powerful tool that can be leveraged to create algorithms and data structures which, in many cases, are more efficient and simpler than their deterministic counterparts. This course covers the key tools of probabilistic analysis, and application of these tools to understand the behaviors of random processes and algorithms. Emphasis is on theoretical foundations, though we will apply this theory broadly, discussing applications in machine learning and data analysis, networking, and systems. Topics include tail bounds, the probabilistic method, Markov chains, and martingales, with applications to analyzing random graphs, metric embeddings, random walks, and a host of powerful and elegant randomized algorithms. Prerequisites: CS 161 and STAT 116, or equivalents and instructor consent.",
                "courseTitle": "Randomized Algorithms and Probabilistic Analysis (CS 265)",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3",
                "semester": "Fall"
            },
            {
                "courseId": "CME 309:",
                "courseLevel": "Graduate",
                "courseMeta": "Randomness pervades the natural processes around us, from the formation of networks, to genetic recombination, to quantum physics. Randomness is also a powerful tool that can be leveraged to create algorithms and data structures which, in many cases, are more efficient and simpler than their deterministic counterparts. This course covers the key tools of probabilistic analysis, and application of these tools to understand the behaviors of random processes and algorithms. Emphasis is on theoretical foundations, though we will apply this theory broadly, discussing applications in machine learning and data analysis, networking, and systems. Topics include tail bounds, the probabilistic method, Markov chains, and martingales, with applications to analyzing random graphs, metric embeddings, random walks, and a host of powerful and elegant randomized algorithms. Prerequisites: CS 161 and STAT 116, or equivalents and instructor consent.",
                "courseTitle": "Randomized Algorithms and Probabilistic Analysis (CS 265)",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3",
                "semester": "Fall"
            }
        ]
    },
    "Hector Garcia-Molina": {
        "corpus": {
            "DBLP": "https://dblp.uni-trier.de/pers/hd/g/Garcia=Molina:Hector",
            "Google Scholar": "https://scholar.google.com/citations?user=bAa___kAAAAJ&hl=en&oi=ao",
            "domain": "ml",
            "home": "http://infolab.stanford.edu/people/hector.html"
        },
        "courses": [
            {
                "courseId": "CS 390A:",
                "courseLevel": "Graduate",
                "courseMeta": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.",
                "courseTitle": "Curricular Practical Training",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "CS 390A:",
                "courseLevel": "Graduate",
                "courseMeta": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.",
                "courseTitle": "Curricular Practical Training",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "CS 390A:",
                "courseLevel": "Graduate",
                "courseMeta": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.",
                "courseTitle": "Curricular Practical Training",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "CS 390A:",
                "courseLevel": "Graduate",
                "courseMeta": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.",
                "courseTitle": "Curricular Practical Training",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "CS 390A:",
                "courseLevel": "Graduate",
                "courseMeta": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.",
                "courseTitle": "Curricular Practical Training",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "CS 390A:",
                "courseLevel": "Graduate",
                "courseMeta": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.",
                "courseTitle": "Curricular Practical Training",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "CS 390A:",
                "courseLevel": "Graduate",
                "courseMeta": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.",
                "courseTitle": "Curricular Practical Training",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "CS 390A:",
                "courseLevel": "Graduate",
                "courseMeta": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.",
                "courseTitle": "Curricular Practical Training",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "CS 390A:",
                "courseLevel": "Graduate",
                "courseMeta": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.",
                "courseTitle": "Curricular Practical Training",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "CS 390A:",
                "courseLevel": "Graduate",
                "courseMeta": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.",
                "courseTitle": "Curricular Practical Training",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "CS 390A:",
                "courseLevel": "Graduate",
                "courseMeta": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.",
                "courseTitle": "Curricular Practical Training",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "CS 390A:",
                "courseLevel": "Graduate",
                "courseMeta": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.",
                "courseTitle": "Curricular Practical Training",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "CS 390A:",
                "courseLevel": "Graduate",
                "courseMeta": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.",
                "courseTitle": "Curricular Practical Training",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "CS 390A:",
                "courseLevel": "Graduate",
                "courseMeta": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.",
                "courseTitle": "Curricular Practical Training",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "CS 390A:",
                "courseLevel": "Graduate",
                "courseMeta": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.",
                "courseTitle": "Curricular Practical Training",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "CS 390A:",
                "courseLevel": "Graduate",
                "courseMeta": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.",
                "courseTitle": "Curricular Practical Training",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "CS 390A:",
                "courseLevel": "Graduate",
                "courseMeta": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.",
                "courseTitle": "Curricular Practical Training",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "CS 390A:",
                "courseLevel": "Graduate",
                "courseMeta": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.",
                "courseTitle": "Curricular Practical Training",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "CS 390A:",
                "courseLevel": "Graduate",
                "courseMeta": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.",
                "courseTitle": "Curricular Practical Training",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "CS 390A:",
                "courseLevel": "Graduate",
                "courseMeta": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.",
                "courseTitle": "Curricular Practical Training",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "CS 390A:",
                "courseLevel": "Graduate",
                "courseMeta": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.",
                "courseTitle": "Curricular Practical Training",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "CS 390A:",
                "courseLevel": "Graduate",
                "courseMeta": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.",
                "courseTitle": "Curricular Practical Training",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "CS 390A:",
                "courseLevel": "Graduate",
                "courseMeta": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.",
                "courseTitle": "Curricular Practical Training",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Fall, Winter, Spring, Summer"
            }
        ]
    },
    "John C. Duchi": {
        "corpus": {
            "DBLP": "https://dblp.uni-trier.de/pers/hd/d/Duchi:John_C=",
            "Google Scholar": "https://scholar.google.com/citations?user=i5srt20AAAAJ&hl=en&oi=ao",
            "domain": "vision",
            "home": "https://stanford.edu/~jduchi/cv.pdf"
        },
        "courses": [
            {
                "courseId": "CS 390A:",
                "courseLevel": "Graduate",
                "courseMeta": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.",
                "courseTitle": "Curricular Practical Training",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "CS 390A:",
                "courseLevel": "Graduate",
                "courseMeta": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.",
                "courseTitle": "Curricular Practical Training",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "CS 390A:",
                "courseLevel": "Graduate",
                "courseMeta": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.",
                "courseTitle": "Curricular Practical Training",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "CS 390A:",
                "courseLevel": "Graduate",
                "courseMeta": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.",
                "courseTitle": "Curricular Practical Training",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "CS 390A:",
                "courseLevel": "Graduate",
                "courseMeta": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.",
                "courseTitle": "Curricular Practical Training",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "CS 390A:",
                "courseLevel": "Graduate",
                "courseMeta": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.",
                "courseTitle": "Curricular Practical Training",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "CS 390A:",
                "courseLevel": "Graduate",
                "courseMeta": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.",
                "courseTitle": "Curricular Practical Training",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "CS 390A:",
                "courseLevel": "Graduate",
                "courseMeta": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.",
                "courseTitle": "Curricular Practical Training",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "CS 390A:",
                "courseLevel": "Graduate",
                "courseMeta": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.",
                "courseTitle": "Curricular Practical Training",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "CS 390A:",
                "courseLevel": "Graduate",
                "courseMeta": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.",
                "courseTitle": "Curricular Practical Training",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "CS 390A:",
                "courseLevel": "Graduate",
                "courseMeta": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.",
                "courseTitle": "Curricular Practical Training",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "CS 390A:",
                "courseLevel": "Graduate",
                "courseMeta": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.",
                "courseTitle": "Curricular Practical Training",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "CS 390A:",
                "courseLevel": "Graduate",
                "courseMeta": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.",
                "courseTitle": "Curricular Practical Training",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "CS 390A:",
                "courseLevel": "Graduate",
                "courseMeta": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.",
                "courseTitle": "Curricular Practical Training",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "CS 390A:",
                "courseLevel": "Graduate",
                "courseMeta": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.",
                "courseTitle": "Curricular Practical Training",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "CS 390A:",
                "courseLevel": "Graduate",
                "courseMeta": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.",
                "courseTitle": "Curricular Practical Training",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Fall, Winter, Spring, Summer"
            }
        ]
    },
    "John C. Mitchell": {
        "corpus": {
            "DBLP": "https://dblp.uni-trier.de/pers/hd/m/Mitchell:John_C=",
            "Google Scholar": "https://scholar.google.com/citations?user=1_kJPIEAAAAJ&hl=en&oi=ao",
            "domain": "",
            "home": "http://theory.stanford.edu/people/jcm"
        },
        "courses": [
            {
                "courseId": "CBIO 260:",
                "courseLevel": "Graduate",
                "courseMeta": "Practical experience in teaching by serving as a teaching assistant in a cancer biology course. Unit values are allotted  individually to reflect the level of teaching responsibility assigned to the student.",
                "courseTitle": "Teaching in Cancer Biology",
                "gradingMethod": "Medical Satisfactory/No Credit",
                "numberOfUnits": "1-10",
                "semester": "Fall, Winter, Spring"
            },
            {
                "courseId": "CBIO 260:",
                "courseLevel": "Graduate",
                "courseMeta": "Practical experience in teaching by serving as a teaching assistant in a cancer biology course. Unit values are allotted  individually to reflect the level of teaching responsibility assigned to the student.",
                "courseTitle": "Teaching in Cancer Biology",
                "gradingMethod": "Medical Satisfactory/No Credit",
                "numberOfUnits": "1-10",
                "semester": "Fall, Winter, Spring"
            },
            {
                "courseId": "CBIO 260:",
                "courseLevel": "Graduate",
                "courseMeta": "Practical experience in teaching by serving as a teaching assistant in a cancer biology course. Unit values are allotted  individually to reflect the level of teaching responsibility assigned to the student.",
                "courseTitle": "Teaching in Cancer Biology",
                "gradingMethod": "Medical Satisfactory/No Credit",
                "numberOfUnits": "1-10",
                "semester": "Fall, Winter, Spring"
            },
            {
                "courseId": "CBIO 260:",
                "courseLevel": "Graduate",
                "courseMeta": "Practical experience in teaching by serving as a teaching assistant in a cancer biology course. Unit values are allotted  individually to reflect the level of teaching responsibility assigned to the student.",
                "courseTitle": "Teaching in Cancer Biology",
                "gradingMethod": "Medical Satisfactory/No Credit",
                "numberOfUnits": "1-10",
                "semester": "Fall, Winter, Spring"
            },
            {
                "courseId": "CBIO 260:",
                "courseLevel": "Graduate",
                "courseMeta": "Practical experience in teaching by serving as a teaching assistant in a cancer biology course. Unit values are allotted  individually to reflect the level of teaching responsibility assigned to the student.",
                "courseTitle": "Teaching in Cancer Biology",
                "gradingMethod": "Medical Satisfactory/No Credit",
                "numberOfUnits": "1-10",
                "semester": "Fall, Winter, Spring"
            },
            {
                "courseId": "CBIO 260:",
                "courseLevel": "Graduate",
                "courseMeta": "Practical experience in teaching by serving as a teaching assistant in a cancer biology course. Unit values are allotted  individually to reflect the level of teaching responsibility assigned to the student.",
                "courseTitle": "Teaching in Cancer Biology",
                "gradingMethod": "Medical Satisfactory/No Credit",
                "numberOfUnits": "1-10",
                "semester": "Fall, Winter, Spring"
            },
            {
                "courseId": "CBIO 260:",
                "courseLevel": "Graduate",
                "courseMeta": "Practical experience in teaching by serving as a teaching assistant in a cancer biology course. Unit values are allotted  individually to reflect the level of teaching responsibility assigned to the student.",
                "courseTitle": "Teaching in Cancer Biology",
                "gradingMethod": "Medical Satisfactory/No Credit",
                "numberOfUnits": "1-10",
                "semester": "Fall, Winter, Spring"
            },
            {
                "courseId": "CBIO 260:",
                "courseLevel": "Graduate",
                "courseMeta": "Practical experience in teaching by serving as a teaching assistant in a cancer biology course. Unit values are allotted  individually to reflect the level of teaching responsibility assigned to the student.",
                "courseTitle": "Teaching in Cancer Biology",
                "gradingMethod": "Medical Satisfactory/No Credit",
                "numberOfUnits": "1-10",
                "semester": "Fall, Winter, Spring"
            },
            {
                "courseId": "CBIO 260:",
                "courseLevel": "Graduate",
                "courseMeta": "Practical experience in teaching by serving as a teaching assistant in a cancer biology course. Unit values are allotted  individually to reflect the level of teaching responsibility assigned to the student.",
                "courseTitle": "Teaching in Cancer Biology",
                "gradingMethod": "Medical Satisfactory/No Credit",
                "numberOfUnits": "1-10",
                "semester": "Fall, Winter, Spring"
            },
            {
                "courseId": "CBIO 260:",
                "courseLevel": "Graduate",
                "courseMeta": "Practical experience in teaching by serving as a teaching assistant in a cancer biology course. Unit values are allotted  individually to reflect the level of teaching responsibility assigned to the student.",
                "courseTitle": "Teaching in Cancer Biology",
                "gradingMethod": "Medical Satisfactory/No Credit",
                "numberOfUnits": "1-10",
                "semester": "Fall, Winter, Spring"
            },
            {
                "courseId": "CBIO 260:",
                "courseLevel": "Graduate",
                "courseMeta": "Practical experience in teaching by serving as a teaching assistant in a cancer biology course. Unit values are allotted  individually to reflect the level of teaching responsibility assigned to the student.",
                "courseTitle": "Teaching in Cancer Biology",
                "gradingMethod": "Medical Satisfactory/No Credit",
                "numberOfUnits": "1-10",
                "semester": "Fall, Winter, Spring"
            },
            {
                "courseId": "CBIO 260:",
                "courseLevel": "Graduate",
                "courseMeta": "Practical experience in teaching by serving as a teaching assistant in a cancer biology course. Unit values are allotted  individually to reflect the level of teaching responsibility assigned to the student.",
                "courseTitle": "Teaching in Cancer Biology",
                "gradingMethod": "Medical Satisfactory/No Credit",
                "numberOfUnits": "1-10",
                "semester": "Fall, Winter, Spring"
            },
            {
                "courseId": "CBIO 260:",
                "courseLevel": "Graduate",
                "courseMeta": "Practical experience in teaching by serving as a teaching assistant in a cancer biology course. Unit values are allotted  individually to reflect the level of teaching responsibility assigned to the student.",
                "courseTitle": "Teaching in Cancer Biology",
                "gradingMethod": "Medical Satisfactory/No Credit",
                "numberOfUnits": "1-10",
                "semester": "Fall, Winter, Spring"
            },
            {
                "courseId": "CBIO 260:",
                "courseLevel": "Graduate",
                "courseMeta": "Practical experience in teaching by serving as a teaching assistant in a cancer biology course. Unit values are allotted  individually to reflect the level of teaching responsibility assigned to the student.",
                "courseTitle": "Teaching in Cancer Biology",
                "gradingMethod": "Medical Satisfactory/No Credit",
                "numberOfUnits": "1-10",
                "semester": "Fall, Winter, Spring"
            },
            {
                "courseId": "CBIO 260:",
                "courseLevel": "Graduate",
                "courseMeta": "Practical experience in teaching by serving as a teaching assistant in a cancer biology course. Unit values are allotted  individually to reflect the level of teaching responsibility assigned to the student.",
                "courseTitle": "Teaching in Cancer Biology",
                "gradingMethod": "Medical Satisfactory/No Credit",
                "numberOfUnits": "1-10",
                "semester": "Fall, Winter, Spring"
            },
            {
                "courseId": "CBIO 260:",
                "courseLevel": "Graduate",
                "courseMeta": "Practical experience in teaching by serving as a teaching assistant in a cancer biology course. Unit values are allotted  individually to reflect the level of teaching responsibility assigned to the student.",
                "courseTitle": "Teaching in Cancer Biology",
                "gradingMethod": "Medical Satisfactory/No Credit",
                "numberOfUnits": "1-10",
                "semester": "Fall, Winter, Spring"
            },
            {
                "courseId": "CBIO 260:",
                "courseLevel": "Graduate",
                "courseMeta": "Practical experience in teaching by serving as a teaching assistant in a cancer biology course. Unit values are allotted  individually to reflect the level of teaching responsibility assigned to the student.",
                "courseTitle": "Teaching in Cancer Biology",
                "gradingMethod": "Medical Satisfactory/No Credit",
                "numberOfUnits": "1-10",
                "semester": "Fall, Winter, Spring"
            },
            {
                "courseId": "CBIO 260:",
                "courseLevel": "Graduate",
                "courseMeta": "Practical experience in teaching by serving as a teaching assistant in a cancer biology course. Unit values are allotted  individually to reflect the level of teaching responsibility assigned to the student.",
                "courseTitle": "Teaching in Cancer Biology",
                "gradingMethod": "Medical Satisfactory/No Credit",
                "numberOfUnits": "1-10",
                "semester": "Fall, Winter, Spring"
            },
            {
                "courseId": "CBIO 260:",
                "courseLevel": "Graduate",
                "courseMeta": "Practical experience in teaching by serving as a teaching assistant in a cancer biology course. Unit values are allotted  individually to reflect the level of teaching responsibility assigned to the student.",
                "courseTitle": "Teaching in Cancer Biology",
                "gradingMethod": "Medical Satisfactory/No Credit",
                "numberOfUnits": "1-10",
                "semester": "Fall, Winter, Spring"
            },
            {
                "courseId": "CBIO 260:",
                "courseLevel": "Graduate",
                "courseMeta": "Practical experience in teaching by serving as a teaching assistant in a cancer biology course. Unit values are allotted  individually to reflect the level of teaching responsibility assigned to the student.",
                "courseTitle": "Teaching in Cancer Biology",
                "gradingMethod": "Medical Satisfactory/No Credit",
                "numberOfUnits": "1-10",
                "semester": "Fall, Winter, Spring"
            },
            {
                "courseId": "CBIO 260:",
                "courseLevel": "Graduate",
                "courseMeta": "Practical experience in teaching by serving as a teaching assistant in a cancer biology course. Unit values are allotted  individually to reflect the level of teaching responsibility assigned to the student.",
                "courseTitle": "Teaching in Cancer Biology",
                "gradingMethod": "Medical Satisfactory/No Credit",
                "numberOfUnits": "1-10",
                "semester": "Fall, Winter, Spring"
            },
            {
                "courseId": "CBIO 260:",
                "courseLevel": "Graduate",
                "courseMeta": "Practical experience in teaching by serving as a teaching assistant in a cancer biology course. Unit values are allotted  individually to reflect the level of teaching responsibility assigned to the student.",
                "courseTitle": "Teaching in Cancer Biology",
                "gradingMethod": "Medical Satisfactory/No Credit",
                "numberOfUnits": "1-10",
                "semester": "Fall, Winter, Spring"
            },
            {
                "courseId": "CBIO 260:",
                "courseLevel": "Graduate",
                "courseMeta": "Practical experience in teaching by serving as a teaching assistant in a cancer biology course. Unit values are allotted  individually to reflect the level of teaching responsibility assigned to the student.",
                "courseTitle": "Teaching in Cancer Biology",
                "gradingMethod": "Medical Satisfactory/No Credit",
                "numberOfUnits": "1-10",
                "semester": "Fall, Winter, Spring"
            },
            {
                "courseId": "CBIO 260:",
                "courseLevel": "Graduate",
                "courseMeta": "Practical experience in teaching by serving as a teaching assistant in a cancer biology course. Unit values are allotted  individually to reflect the level of teaching responsibility assigned to the student.",
                "courseTitle": "Teaching in Cancer Biology",
                "gradingMethod": "Medical Satisfactory/No Credit",
                "numberOfUnits": "1-10",
                "semester": "Fall, Winter, Spring"
            },
            {
                "courseId": "CBIO 260:",
                "courseLevel": "Graduate",
                "courseMeta": "Practical experience in teaching by serving as a teaching assistant in a cancer biology course. Unit values are allotted  individually to reflect the level of teaching responsibility assigned to the student.",
                "courseTitle": "Teaching in Cancer Biology",
                "gradingMethod": "Medical Satisfactory/No Credit",
                "numberOfUnits": "1-10",
                "semester": "Fall, Winter, Spring"
            },
            {
                "courseId": "CBIO 260:",
                "courseLevel": "Graduate",
                "courseMeta": "Practical experience in teaching by serving as a teaching assistant in a cancer biology course. Unit values are allotted  individually to reflect the level of teaching responsibility assigned to the student.",
                "courseTitle": "Teaching in Cancer Biology",
                "gradingMethod": "Medical Satisfactory/No Credit",
                "numberOfUnits": "1-10",
                "semester": "Fall, Winter, Spring"
            },
            {
                "courseId": "CBIO 260:",
                "courseLevel": "Graduate",
                "courseMeta": "Practical experience in teaching by serving as a teaching assistant in a cancer biology course. Unit values are allotted  individually to reflect the level of teaching responsibility assigned to the student.",
                "courseTitle": "Teaching in Cancer Biology",
                "gradingMethod": "Medical Satisfactory/No Credit",
                "numberOfUnits": "1-10",
                "semester": "Fall, Winter, Spring"
            },
            {
                "courseId": "CBIO 260:",
                "courseLevel": "Graduate",
                "courseMeta": "Practical experience in teaching by serving as a teaching assistant in a cancer biology course. Unit values are allotted  individually to reflect the level of teaching responsibility assigned to the student.",
                "courseTitle": "Teaching in Cancer Biology",
                "gradingMethod": "Medical Satisfactory/No Credit",
                "numberOfUnits": "1-10",
                "semester": "Fall, Winter, Spring"
            },
            {
                "courseId": "CBIO 260:",
                "courseLevel": "Graduate",
                "courseMeta": "Practical experience in teaching by serving as a teaching assistant in a cancer biology course. Unit values are allotted  individually to reflect the level of teaching responsibility assigned to the student.",
                "courseTitle": "Teaching in Cancer Biology",
                "gradingMethod": "Medical Satisfactory/No Credit",
                "numberOfUnits": "1-10",
                "semester": "Fall, Winter, Spring"
            },
            {
                "courseId": "CBIO 260:",
                "courseLevel": "Graduate",
                "courseMeta": "Practical experience in teaching by serving as a teaching assistant in a cancer biology course. Unit values are allotted  individually to reflect the level of teaching responsibility assigned to the student.",
                "courseTitle": "Teaching in Cancer Biology",
                "gradingMethod": "Medical Satisfactory/No Credit",
                "numberOfUnits": "1-10",
                "semester": "Fall, Winter, Spring"
            },
            {
                "courseId": "CBIO 260:",
                "courseLevel": "Graduate",
                "courseMeta": "Practical experience in teaching by serving as a teaching assistant in a cancer biology course. Unit values are allotted  individually to reflect the level of teaching responsibility assigned to the student.",
                "courseTitle": "Teaching in Cancer Biology",
                "gradingMethod": "Medical Satisfactory/No Credit",
                "numberOfUnits": "1-10",
                "semester": "Fall, Winter, Spring"
            },
            {
                "courseId": "CBIO 260:",
                "courseLevel": "Graduate",
                "courseMeta": "Practical experience in teaching by serving as a teaching assistant in a cancer biology course. Unit values are allotted  individually to reflect the level of teaching responsibility assigned to the student.",
                "courseTitle": "Teaching in Cancer Biology",
                "gradingMethod": "Medical Satisfactory/No Credit",
                "numberOfUnits": "1-10",
                "semester": "Fall, Winter, Spring"
            },
            {
                "courseId": "CBIO 260:",
                "courseLevel": "Graduate",
                "courseMeta": "Practical experience in teaching by serving as a teaching assistant in a cancer biology course. Unit values are allotted  individually to reflect the level of teaching responsibility assigned to the student.",
                "courseTitle": "Teaching in Cancer Biology",
                "gradingMethod": "Medical Satisfactory/No Credit",
                "numberOfUnits": "1-10",
                "semester": "Fall, Winter, Spring"
            },
            {
                "courseId": "CBIO 260:",
                "courseLevel": "Graduate",
                "courseMeta": "Practical experience in teaching by serving as a teaching assistant in a cancer biology course. Unit values are allotted  individually to reflect the level of teaching responsibility assigned to the student.",
                "courseTitle": "Teaching in Cancer Biology",
                "gradingMethod": "Medical Satisfactory/No Credit",
                "numberOfUnits": "1-10",
                "semester": "Fall, Winter, Spring"
            },
            {
                "courseId": "CBIO 260:",
                "courseLevel": "Graduate",
                "courseMeta": "Practical experience in teaching by serving as a teaching assistant in a cancer biology course. Unit values are allotted  individually to reflect the level of teaching responsibility assigned to the student.",
                "courseTitle": "Teaching in Cancer Biology",
                "gradingMethod": "Medical Satisfactory/No Credit",
                "numberOfUnits": "1-10",
                "semester": "Fall, Winter, Spring"
            },
            {
                "courseId": "CBIO 260:",
                "courseLevel": "Graduate",
                "courseMeta": "Practical experience in teaching by serving as a teaching assistant in a cancer biology course. Unit values are allotted  individually to reflect the level of teaching responsibility assigned to the student.",
                "courseTitle": "Teaching in Cancer Biology",
                "gradingMethod": "Medical Satisfactory/No Credit",
                "numberOfUnits": "1-10",
                "semester": "Fall, Winter, Spring"
            },
            {
                "courseId": "CBIO 260:",
                "courseLevel": "Graduate",
                "courseMeta": "Practical experience in teaching by serving as a teaching assistant in a cancer biology course. Unit values are allotted  individually to reflect the level of teaching responsibility assigned to the student.",
                "courseTitle": "Teaching in Cancer Biology",
                "gradingMethod": "Medical Satisfactory/No Credit",
                "numberOfUnits": "1-10",
                "semester": "Fall, Winter, Spring"
            },
            {
                "courseId": "CBIO 260:",
                "courseLevel": "Graduate",
                "courseMeta": "Practical experience in teaching by serving as a teaching assistant in a cancer biology course. Unit values are allotted  individually to reflect the level of teaching responsibility assigned to the student.",
                "courseTitle": "Teaching in Cancer Biology",
                "gradingMethod": "Medical Satisfactory/No Credit",
                "numberOfUnits": "1-10",
                "semester": "Fall, Winter, Spring"
            },
            {
                "courseId": "CBIO 260:",
                "courseLevel": "Graduate",
                "courseMeta": "Practical experience in teaching by serving as a teaching assistant in a cancer biology course. Unit values are allotted  individually to reflect the level of teaching responsibility assigned to the student.",
                "courseTitle": "Teaching in Cancer Biology",
                "gradingMethod": "Medical Satisfactory/No Credit",
                "numberOfUnits": "1-10",
                "semester": "Fall, Winter, Spring"
            },
            {
                "courseId": "CBIO 260:",
                "courseLevel": "Graduate",
                "courseMeta": "Practical experience in teaching by serving as a teaching assistant in a cancer biology course. Unit values are allotted  individually to reflect the level of teaching responsibility assigned to the student.",
                "courseTitle": "Teaching in Cancer Biology",
                "gradingMethod": "Medical Satisfactory/No Credit",
                "numberOfUnits": "1-10",
                "semester": "Fall, Winter, Spring"
            },
            {
                "courseId": "CBIO 260:",
                "courseLevel": "Graduate",
                "courseMeta": "Practical experience in teaching by serving as a teaching assistant in a cancer biology course. Unit values are allotted  individually to reflect the level of teaching responsibility assigned to the student.",
                "courseTitle": "Teaching in Cancer Biology",
                "gradingMethod": "Medical Satisfactory/No Credit",
                "numberOfUnits": "1-10",
                "semester": "Fall, Winter, Spring"
            },
            {
                "courseId": "CBIO 260:",
                "courseLevel": "Graduate",
                "courseMeta": "Practical experience in teaching by serving as a teaching assistant in a cancer biology course. Unit values are allotted  individually to reflect the level of teaching responsibility assigned to the student.",
                "courseTitle": "Teaching in Cancer Biology",
                "gradingMethod": "Medical Satisfactory/No Credit",
                "numberOfUnits": "1-10",
                "semester": "Fall, Winter, Spring"
            },
            {
                "courseId": "CBIO 260:",
                "courseLevel": "Graduate",
                "courseMeta": "Practical experience in teaching by serving as a teaching assistant in a cancer biology course. Unit values are allotted  individually to reflect the level of teaching responsibility assigned to the student.",
                "courseTitle": "Teaching in Cancer Biology",
                "gradingMethod": "Medical Satisfactory/No Credit",
                "numberOfUnits": "1-10",
                "semester": "Fall, Winter, Spring"
            }
        ]
    },
    "Jure Leskovec": {
        "corpus": {
            "DBLP": "https://dblp.uni-trier.de/pers/hd/l/Leskovec:Jure",
            "Google Scholar": "https://scholar.google.com/citations?user=Q_kKkIUAAAAJ&hl=en&oi=ao",
            "domain": "nlp",
            "home": "https://cs.stanford.edu/people/jure"
        },
        "courses": [
            {
                "courseId": "BIOE 391:",
                "courseLevel": "Graduate",
                "courseMeta": "May be used to prepare for research during a later quarter in 392. Faculty sponsor required. May be repeated for credit.",
                "courseTitle": "Directed Study",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1-6",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "BIOE 391:",
                "courseLevel": "Graduate",
                "courseMeta": "May be used to prepare for research during a later quarter in 392. Faculty sponsor required. May be repeated for credit.",
                "courseTitle": "Directed Study",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1-6",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "BIOE 391:",
                "courseLevel": "Graduate",
                "courseMeta": "May be used to prepare for research during a later quarter in 392. Faculty sponsor required. May be repeated for credit.",
                "courseTitle": "Directed Study",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1-6",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "BIOE 391:",
                "courseLevel": "Graduate",
                "courseMeta": "May be used to prepare for research during a later quarter in 392. Faculty sponsor required. May be repeated for credit.",
                "courseTitle": "Directed Study",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1-6",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "BIOE 391:",
                "courseLevel": "Graduate",
                "courseMeta": "May be used to prepare for research during a later quarter in 392. Faculty sponsor required. May be repeated for credit.",
                "courseTitle": "Directed Study",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1-6",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "BIOE 391:",
                "courseLevel": "Graduate",
                "courseMeta": "May be used to prepare for research during a later quarter in 392. Faculty sponsor required. May be repeated for credit.",
                "courseTitle": "Directed Study",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1-6",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "BIOE 391:",
                "courseLevel": "Graduate",
                "courseMeta": "May be used to prepare for research during a later quarter in 392. Faculty sponsor required. May be repeated for credit.",
                "courseTitle": "Directed Study",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1-6",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "BIOE 391:",
                "courseLevel": "Graduate",
                "courseMeta": "May be used to prepare for research during a later quarter in 392. Faculty sponsor required. May be repeated for credit.",
                "courseTitle": "Directed Study",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1-6",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "BIOE 391:",
                "courseLevel": "Graduate",
                "courseMeta": "May be used to prepare for research during a later quarter in 392. Faculty sponsor required. May be repeated for credit.",
                "courseTitle": "Directed Study",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1-6",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "BIOE 391:",
                "courseLevel": "Graduate",
                "courseMeta": "May be used to prepare for research during a later quarter in 392. Faculty sponsor required. May be repeated for credit.",
                "courseTitle": "Directed Study",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1-6",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "BIOE 391:",
                "courseLevel": "Graduate",
                "courseMeta": "May be used to prepare for research during a later quarter in 392. Faculty sponsor required. May be repeated for credit.",
                "courseTitle": "Directed Study",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1-6",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "BIOE 391:",
                "courseLevel": "Graduate",
                "courseMeta": "May be used to prepare for research during a later quarter in 392. Faculty sponsor required. May be repeated for credit.",
                "courseTitle": "Directed Study",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1-6",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "BIOE 391:",
                "courseLevel": "Graduate",
                "courseMeta": "May be used to prepare for research during a later quarter in 392. Faculty sponsor required. May be repeated for credit.",
                "courseTitle": "Directed Study",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1-6",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "BIOE 391:",
                "courseLevel": "Graduate",
                "courseMeta": "May be used to prepare for research during a later quarter in 392. Faculty sponsor required. May be repeated for credit.",
                "courseTitle": "Directed Study",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1-6",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "BIOE 391:",
                "courseLevel": "Graduate",
                "courseMeta": "May be used to prepare for research during a later quarter in 392. Faculty sponsor required. May be repeated for credit.",
                "courseTitle": "Directed Study",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1-6",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "BIOE 391:",
                "courseLevel": "Graduate",
                "courseMeta": "May be used to prepare for research during a later quarter in 392. Faculty sponsor required. May be repeated for credit.",
                "courseTitle": "Directed Study",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1-6",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "BIOE 391:",
                "courseLevel": "Graduate",
                "courseMeta": "May be used to prepare for research during a later quarter in 392. Faculty sponsor required. May be repeated for credit.",
                "courseTitle": "Directed Study",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1-6",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "BIOE 391:",
                "courseLevel": "Graduate",
                "courseMeta": "May be used to prepare for research during a later quarter in 392. Faculty sponsor required. May be repeated for credit.",
                "courseTitle": "Directed Study",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1-6",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "BIOE 391:",
                "courseLevel": "Graduate",
                "courseMeta": "May be used to prepare for research during a later quarter in 392. Faculty sponsor required. May be repeated for credit.",
                "courseTitle": "Directed Study",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1-6",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "BIOE 391:",
                "courseLevel": "Graduate",
                "courseMeta": "May be used to prepare for research during a later quarter in 392. Faculty sponsor required. May be repeated for credit.",
                "courseTitle": "Directed Study",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1-6",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "BIOE 391:",
                "courseLevel": "Graduate",
                "courseMeta": "May be used to prepare for research during a later quarter in 392. Faculty sponsor required. May be repeated for credit.",
                "courseTitle": "Directed Study",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1-6",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "BIOE 391:",
                "courseLevel": "Graduate",
                "courseMeta": "May be used to prepare for research during a later quarter in 392. Faculty sponsor required. May be repeated for credit.",
                "courseTitle": "Directed Study",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1-6",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "BIOE 391:",
                "courseLevel": "Graduate",
                "courseMeta": "May be used to prepare for research during a later quarter in 392. Faculty sponsor required. May be repeated for credit.",
                "courseTitle": "Directed Study",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1-6",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "BIOE 391:",
                "courseLevel": "Graduate",
                "courseMeta": "May be used to prepare for research during a later quarter in 392. Faculty sponsor required. May be repeated for credit.",
                "courseTitle": "Directed Study",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1-6",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "BIOE 391:",
                "courseLevel": "Graduate",
                "courseMeta": "May be used to prepare for research during a later quarter in 392. Faculty sponsor required. May be repeated for credit.",
                "courseTitle": "Directed Study",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1-6",
                "semester": "Fall, Winter, Spring, Summer"
            }
        ]
    },
    "Kayvon Fatahalian": {
        "corpus": {
            "DBLP": "https://dblp.uni-trier.de/pers/hd/f/Fatahalian:Kayvon",
            "Google Scholar": "https://scholar.google.com/citations?user=ZeG4wDgAAAAJ&hl=en&oi=ao",
            "domain": "",
            "home": "http://graphics.stanford.edu/~kayvonf"
        },
        "courses": [
            {
                "courseId": "CS 248:",
                "courseLevel": "Graduate",
                "courseMeta": "This course provides a comprehensive introduction to interactive computer graphics, focusing on fundamental concepts and techniques, as well as their cross-cutting relationship to multiple problem domains in interactive graphics (such as rendering, animation, geometry, image processing). Topics include: 2D and 3D drawing, sampling theory, interpolation, rasterization, image compositing, the real-time GPU graphics pipeline (and parallel rendering), VR rendering, geometric transformations, curves and surfaces, geometric data structures, subdivision, meshing, spatial hierarchies, image processing, time integration, physically-based animation, and inverse kinematics.  The course will involve several in-depth programming assignments and a self-selected final project that explores concepts covered in the class. Prerequisite: CS 107, MATH 51.",
                "courseTitle": "Interactive Computer Graphics",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3-4",
                "semester": "Winter"
            },
            {
                "courseId": "CS 248:",
                "courseLevel": "Graduate",
                "courseMeta": "This course provides a comprehensive introduction to interactive computer graphics, focusing on fundamental concepts and techniques, as well as their cross-cutting relationship to multiple problem domains in interactive graphics (such as rendering, animation, geometry, image processing). Topics include: 2D and 3D drawing, sampling theory, interpolation, rasterization, image compositing, the real-time GPU graphics pipeline (and parallel rendering), VR rendering, geometric transformations, curves and surfaces, geometric data structures, subdivision, meshing, spatial hierarchies, image processing, time integration, physically-based animation, and inverse kinematics.  The course will involve several in-depth programming assignments and a self-selected final project that explores concepts covered in the class. Prerequisite: CS 107, MATH 51.",
                "courseTitle": "Interactive Computer Graphics",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3-4",
                "semester": "Winter"
            },
            {
                "courseId": "CS 248:",
                "courseLevel": "Graduate",
                "courseMeta": "This course provides a comprehensive introduction to interactive computer graphics, focusing on fundamental concepts and techniques, as well as their cross-cutting relationship to multiple problem domains in interactive graphics (such as rendering, animation, geometry, image processing). Topics include: 2D and 3D drawing, sampling theory, interpolation, rasterization, image compositing, the real-time GPU graphics pipeline (and parallel rendering), VR rendering, geometric transformations, curves and surfaces, geometric data structures, subdivision, meshing, spatial hierarchies, image processing, time integration, physically-based animation, and inverse kinematics.  The course will involve several in-depth programming assignments and a self-selected final project that explores concepts covered in the class. Prerequisite: CS 107, MATH 51.",
                "courseTitle": "Interactive Computer Graphics",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3-4",
                "semester": "Winter"
            },
            {
                "courseId": "CS 248:",
                "courseLevel": "Graduate",
                "courseMeta": "This course provides a comprehensive introduction to interactive computer graphics, focusing on fundamental concepts and techniques, as well as their cross-cutting relationship to multiple problem domains in interactive graphics (such as rendering, animation, geometry, image processing). Topics include: 2D and 3D drawing, sampling theory, interpolation, rasterization, image compositing, the real-time GPU graphics pipeline (and parallel rendering), VR rendering, geometric transformations, curves and surfaces, geometric data structures, subdivision, meshing, spatial hierarchies, image processing, time integration, physically-based animation, and inverse kinematics.  The course will involve several in-depth programming assignments and a self-selected final project that explores concepts covered in the class. Prerequisite: CS 107, MATH 51.",
                "courseTitle": "Interactive Computer Graphics",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3-4",
                "semester": "Winter"
            },
            {
                "courseId": "CS 248:",
                "courseLevel": "Graduate",
                "courseMeta": "This course provides a comprehensive introduction to interactive computer graphics, focusing on fundamental concepts and techniques, as well as their cross-cutting relationship to multiple problem domains in interactive graphics (such as rendering, animation, geometry, image processing). Topics include: 2D and 3D drawing, sampling theory, interpolation, rasterization, image compositing, the real-time GPU graphics pipeline (and parallel rendering), VR rendering, geometric transformations, curves and surfaces, geometric data structures, subdivision, meshing, spatial hierarchies, image processing, time integration, physically-based animation, and inverse kinematics.  The course will involve several in-depth programming assignments and a self-selected final project that explores concepts covered in the class. Prerequisite: CS 107, MATH 51.",
                "courseTitle": "Interactive Computer Graphics",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3-4",
                "semester": "Winter"
            },
            {
                "courseId": "CS 248:",
                "courseLevel": "Graduate",
                "courseMeta": "This course provides a comprehensive introduction to interactive computer graphics, focusing on fundamental concepts and techniques, as well as their cross-cutting relationship to multiple problem domains in interactive graphics (such as rendering, animation, geometry, image processing). Topics include: 2D and 3D drawing, sampling theory, interpolation, rasterization, image compositing, the real-time GPU graphics pipeline (and parallel rendering), VR rendering, geometric transformations, curves and surfaces, geometric data structures, subdivision, meshing, spatial hierarchies, image processing, time integration, physically-based animation, and inverse kinematics.  The course will involve several in-depth programming assignments and a self-selected final project that explores concepts covered in the class. Prerequisite: CS 107, MATH 51.",
                "courseTitle": "Interactive Computer Graphics",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3-4",
                "semester": "Winter"
            },
            {
                "courseId": "CS 248:",
                "courseLevel": "Graduate",
                "courseMeta": "This course provides a comprehensive introduction to interactive computer graphics, focusing on fundamental concepts and techniques, as well as their cross-cutting relationship to multiple problem domains in interactive graphics (such as rendering, animation, geometry, image processing). Topics include: 2D and 3D drawing, sampling theory, interpolation, rasterization, image compositing, the real-time GPU graphics pipeline (and parallel rendering), VR rendering, geometric transformations, curves and surfaces, geometric data structures, subdivision, meshing, spatial hierarchies, image processing, time integration, physically-based animation, and inverse kinematics.  The course will involve several in-depth programming assignments and a self-selected final project that explores concepts covered in the class. Prerequisite: CS 107, MATH 51.",
                "courseTitle": "Interactive Computer Graphics",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3-4",
                "semester": "Winter"
            },
            {
                "courseId": "CS 248:",
                "courseLevel": "Graduate",
                "courseMeta": "This course provides a comprehensive introduction to interactive computer graphics, focusing on fundamental concepts and techniques, as well as their cross-cutting relationship to multiple problem domains in interactive graphics (such as rendering, animation, geometry, image processing). Topics include: 2D and 3D drawing, sampling theory, interpolation, rasterization, image compositing, the real-time GPU graphics pipeline (and parallel rendering), VR rendering, geometric transformations, curves and surfaces, geometric data structures, subdivision, meshing, spatial hierarchies, image processing, time integration, physically-based animation, and inverse kinematics.  The course will involve several in-depth programming assignments and a self-selected final project that explores concepts covered in the class. Prerequisite: CS 107, MATH 51.",
                "courseTitle": "Interactive Computer Graphics",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3-4",
                "semester": "Winter"
            }
        ]
    },
    "Kunle Olukotun": {
        "corpus": {
            "DBLP": "https://dblp.uni-trier.de/pers/hd/o/Olukotun:Kunle",
            "Google Scholar": "https://scholar.google.com/citations?user=IzXDyR8AAAAJ&hl=en&oi=ao",
            "domain": "nlp",
            "home": "http://arsenalfc.stanford.edu/kunle"
        },
        "courses": [
            {
                "courseId": "CS 390A:",
                "courseLevel": "Graduate",
                "courseMeta": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.",
                "courseTitle": "Curricular Practical Training",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "CS 390A:",
                "courseLevel": "Graduate",
                "courseMeta": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.",
                "courseTitle": "Curricular Practical Training",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "CS 390A:",
                "courseLevel": "Graduate",
                "courseMeta": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.",
                "courseTitle": "Curricular Practical Training",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "CS 390A:",
                "courseLevel": "Graduate",
                "courseMeta": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.",
                "courseTitle": "Curricular Practical Training",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "CS 390A:",
                "courseLevel": "Graduate",
                "courseMeta": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.",
                "courseTitle": "Curricular Practical Training",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "CS 390A:",
                "courseLevel": "Graduate",
                "courseMeta": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.",
                "courseTitle": "Curricular Practical Training",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "CS 390A:",
                "courseLevel": "Graduate",
                "courseMeta": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.",
                "courseTitle": "Curricular Practical Training",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "CS 390A:",
                "courseLevel": "Graduate",
                "courseMeta": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.",
                "courseTitle": "Curricular Practical Training",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "CS 390A:",
                "courseLevel": "Graduate",
                "courseMeta": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.",
                "courseTitle": "Curricular Practical Training",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "CS 390A:",
                "courseLevel": "Graduate",
                "courseMeta": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.",
                "courseTitle": "Curricular Practical Training",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "CS 390A:",
                "courseLevel": "Graduate",
                "courseMeta": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.",
                "courseTitle": "Curricular Practical Training",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "CS 390A:",
                "courseLevel": "Graduate",
                "courseMeta": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.",
                "courseTitle": "Curricular Practical Training",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "CS 390A:",
                "courseLevel": "Graduate",
                "courseMeta": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.",
                "courseTitle": "Curricular Practical Training",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "CS 390A:",
                "courseLevel": "Graduate",
                "courseMeta": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.",
                "courseTitle": "Curricular Practical Training",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "CS 390A:",
                "courseLevel": "Graduate",
                "courseMeta": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.",
                "courseTitle": "Curricular Practical Training",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "CS 390A:",
                "courseLevel": "Graduate",
                "courseMeta": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.",
                "courseTitle": "Curricular Practical Training",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "CS 390A:",
                "courseLevel": "Graduate",
                "courseMeta": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.",
                "courseTitle": "Curricular Practical Training",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "CS 390A:",
                "courseLevel": "Graduate",
                "courseMeta": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.",
                "courseTitle": "Curricular Practical Training",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "CS 390A:",
                "courseLevel": "Graduate",
                "courseMeta": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.",
                "courseTitle": "Curricular Practical Training",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "CS 390A:",
                "courseLevel": "Graduate",
                "courseMeta": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.",
                "courseTitle": "Curricular Practical Training",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "CS 390A:",
                "courseLevel": "Graduate",
                "courseMeta": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.",
                "courseTitle": "Curricular Practical Training",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "CS 390A:",
                "courseLevel": "Graduate",
                "courseMeta": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.",
                "courseTitle": "Curricular Practical Training",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "CS 390A:",
                "courseLevel": "Graduate",
                "courseMeta": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.",
                "courseTitle": "Curricular Practical Training",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Fall, Winter, Spring, Summer"
            }
        ]
    },
    "Leonidas J. Guibas": {
        "corpus": {
            "DBLP": "https://dblp.uni-trier.de/pers/hd/g/Guibas:Leonidas_J=",
            "Google Scholar": "https://scholar.google.com/citations?user=5JlEyTAAAAAJ&hl=en&oi=ao",
            "domain": "robotics,vision",
            "home": "http://geometry.stanford.edu/member/guibas"
        },
        "courses": [
            {
                "courseId": "BIOMEDIN 290:",
                "courseLevel": "Graduate",
                "courseMeta": "Hands-on training in biomedical informatics pedagogy. Practical experience in pedagogical approaches, variously including didactic, inquiry, project, team, case, field, and/or problem-based approaches. Students create course content, including lectures, exercises, and assessments, and evaluate learning activities and outcomes. Prerequisite: instructor consent.",
                "courseTitle": "Biomedical Informatics Teaching Methods",
                "gradingMethod": "Medical Option (Med-Ltr-CR/NC)",
                "numberOfUnits": "1-6",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "BIOMEDIN 290:",
                "courseLevel": "Graduate",
                "courseMeta": "Hands-on training in biomedical informatics pedagogy. Practical experience in pedagogical approaches, variously including didactic, inquiry, project, team, case, field, and/or problem-based approaches. Students create course content, including lectures, exercises, and assessments, and evaluate learning activities and outcomes. Prerequisite: instructor consent.",
                "courseTitle": "Biomedical Informatics Teaching Methods",
                "gradingMethod": "Medical Option (Med-Ltr-CR/NC)",
                "numberOfUnits": "1-6",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "BIOMEDIN 290:",
                "courseLevel": "Graduate",
                "courseMeta": "Hands-on training in biomedical informatics pedagogy. Practical experience in pedagogical approaches, variously including didactic, inquiry, project, team, case, field, and/or problem-based approaches. Students create course content, including lectures, exercises, and assessments, and evaluate learning activities and outcomes. Prerequisite: instructor consent.",
                "courseTitle": "Biomedical Informatics Teaching Methods",
                "gradingMethod": "Medical Option (Med-Ltr-CR/NC)",
                "numberOfUnits": "1-6",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "BIOMEDIN 290:",
                "courseLevel": "Graduate",
                "courseMeta": "Hands-on training in biomedical informatics pedagogy. Practical experience in pedagogical approaches, variously including didactic, inquiry, project, team, case, field, and/or problem-based approaches. Students create course content, including lectures, exercises, and assessments, and evaluate learning activities and outcomes. Prerequisite: instructor consent.",
                "courseTitle": "Biomedical Informatics Teaching Methods",
                "gradingMethod": "Medical Option (Med-Ltr-CR/NC)",
                "numberOfUnits": "1-6",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "BIOMEDIN 290:",
                "courseLevel": "Graduate",
                "courseMeta": "Hands-on training in biomedical informatics pedagogy. Practical experience in pedagogical approaches, variously including didactic, inquiry, project, team, case, field, and/or problem-based approaches. Students create course content, including lectures, exercises, and assessments, and evaluate learning activities and outcomes. Prerequisite: instructor consent.",
                "courseTitle": "Biomedical Informatics Teaching Methods",
                "gradingMethod": "Medical Option (Med-Ltr-CR/NC)",
                "numberOfUnits": "1-6",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "BIOMEDIN 290:",
                "courseLevel": "Graduate",
                "courseMeta": "Hands-on training in biomedical informatics pedagogy. Practical experience in pedagogical approaches, variously including didactic, inquiry, project, team, case, field, and/or problem-based approaches. Students create course content, including lectures, exercises, and assessments, and evaluate learning activities and outcomes. Prerequisite: instructor consent.",
                "courseTitle": "Biomedical Informatics Teaching Methods",
                "gradingMethod": "Medical Option (Med-Ltr-CR/NC)",
                "numberOfUnits": "1-6",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "BIOMEDIN 290:",
                "courseLevel": "Graduate",
                "courseMeta": "Hands-on training in biomedical informatics pedagogy. Practical experience in pedagogical approaches, variously including didactic, inquiry, project, team, case, field, and/or problem-based approaches. Students create course content, including lectures, exercises, and assessments, and evaluate learning activities and outcomes. Prerequisite: instructor consent.",
                "courseTitle": "Biomedical Informatics Teaching Methods",
                "gradingMethod": "Medical Option (Med-Ltr-CR/NC)",
                "numberOfUnits": "1-6",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "BIOMEDIN 290:",
                "courseLevel": "Graduate",
                "courseMeta": "Hands-on training in biomedical informatics pedagogy. Practical experience in pedagogical approaches, variously including didactic, inquiry, project, team, case, field, and/or problem-based approaches. Students create course content, including lectures, exercises, and assessments, and evaluate learning activities and outcomes. Prerequisite: instructor consent.",
                "courseTitle": "Biomedical Informatics Teaching Methods",
                "gradingMethod": "Medical Option (Med-Ltr-CR/NC)",
                "numberOfUnits": "1-6",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "BIOMEDIN 290:",
                "courseLevel": "Graduate",
                "courseMeta": "Hands-on training in biomedical informatics pedagogy. Practical experience in pedagogical approaches, variously including didactic, inquiry, project, team, case, field, and/or problem-based approaches. Students create course content, including lectures, exercises, and assessments, and evaluate learning activities and outcomes. Prerequisite: instructor consent.",
                "courseTitle": "Biomedical Informatics Teaching Methods",
                "gradingMethod": "Medical Option (Med-Ltr-CR/NC)",
                "numberOfUnits": "1-6",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "BIOMEDIN 290:",
                "courseLevel": "Graduate",
                "courseMeta": "Hands-on training in biomedical informatics pedagogy. Practical experience in pedagogical approaches, variously including didactic, inquiry, project, team, case, field, and/or problem-based approaches. Students create course content, including lectures, exercises, and assessments, and evaluate learning activities and outcomes. Prerequisite: instructor consent.",
                "courseTitle": "Biomedical Informatics Teaching Methods",
                "gradingMethod": "Medical Option (Med-Ltr-CR/NC)",
                "numberOfUnits": "1-6",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "BIOMEDIN 290:",
                "courseLevel": "Graduate",
                "courseMeta": "Hands-on training in biomedical informatics pedagogy. Practical experience in pedagogical approaches, variously including didactic, inquiry, project, team, case, field, and/or problem-based approaches. Students create course content, including lectures, exercises, and assessments, and evaluate learning activities and outcomes. Prerequisite: instructor consent.",
                "courseTitle": "Biomedical Informatics Teaching Methods",
                "gradingMethod": "Medical Option (Med-Ltr-CR/NC)",
                "numberOfUnits": "1-6",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "BIOMEDIN 290:",
                "courseLevel": "Graduate",
                "courseMeta": "Hands-on training in biomedical informatics pedagogy. Practical experience in pedagogical approaches, variously including didactic, inquiry, project, team, case, field, and/or problem-based approaches. Students create course content, including lectures, exercises, and assessments, and evaluate learning activities and outcomes. Prerequisite: instructor consent.",
                "courseTitle": "Biomedical Informatics Teaching Methods",
                "gradingMethod": "Medical Option (Med-Ltr-CR/NC)",
                "numberOfUnits": "1-6",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "BIOMEDIN 290:",
                "courseLevel": "Graduate",
                "courseMeta": "Hands-on training in biomedical informatics pedagogy. Practical experience in pedagogical approaches, variously including didactic, inquiry, project, team, case, field, and/or problem-based approaches. Students create course content, including lectures, exercises, and assessments, and evaluate learning activities and outcomes. Prerequisite: instructor consent.",
                "courseTitle": "Biomedical Informatics Teaching Methods",
                "gradingMethod": "Medical Option (Med-Ltr-CR/NC)",
                "numberOfUnits": "1-6",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "BIOMEDIN 290:",
                "courseLevel": "Graduate",
                "courseMeta": "Hands-on training in biomedical informatics pedagogy. Practical experience in pedagogical approaches, variously including didactic, inquiry, project, team, case, field, and/or problem-based approaches. Students create course content, including lectures, exercises, and assessments, and evaluate learning activities and outcomes. Prerequisite: instructor consent.",
                "courseTitle": "Biomedical Informatics Teaching Methods",
                "gradingMethod": "Medical Option (Med-Ltr-CR/NC)",
                "numberOfUnits": "1-6",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "BIOMEDIN 290:",
                "courseLevel": "Graduate",
                "courseMeta": "Hands-on training in biomedical informatics pedagogy. Practical experience in pedagogical approaches, variously including didactic, inquiry, project, team, case, field, and/or problem-based approaches. Students create course content, including lectures, exercises, and assessments, and evaluate learning activities and outcomes. Prerequisite: instructor consent.",
                "courseTitle": "Biomedical Informatics Teaching Methods",
                "gradingMethod": "Medical Option (Med-Ltr-CR/NC)",
                "numberOfUnits": "1-6",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "BIOMEDIN 290:",
                "courseLevel": "Graduate",
                "courseMeta": "Hands-on training in biomedical informatics pedagogy. Practical experience in pedagogical approaches, variously including didactic, inquiry, project, team, case, field, and/or problem-based approaches. Students create course content, including lectures, exercises, and assessments, and evaluate learning activities and outcomes. Prerequisite: instructor consent.",
                "courseTitle": "Biomedical Informatics Teaching Methods",
                "gradingMethod": "Medical Option (Med-Ltr-CR/NC)",
                "numberOfUnits": "1-6",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "BIOMEDIN 290:",
                "courseLevel": "Graduate",
                "courseMeta": "Hands-on training in biomedical informatics pedagogy. Practical experience in pedagogical approaches, variously including didactic, inquiry, project, team, case, field, and/or problem-based approaches. Students create course content, including lectures, exercises, and assessments, and evaluate learning activities and outcomes. Prerequisite: instructor consent.",
                "courseTitle": "Biomedical Informatics Teaching Methods",
                "gradingMethod": "Medical Option (Med-Ltr-CR/NC)",
                "numberOfUnits": "1-6",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "BIOMEDIN 290:",
                "courseLevel": "Graduate",
                "courseMeta": "Hands-on training in biomedical informatics pedagogy. Practical experience in pedagogical approaches, variously including didactic, inquiry, project, team, case, field, and/or problem-based approaches. Students create course content, including lectures, exercises, and assessments, and evaluate learning activities and outcomes. Prerequisite: instructor consent.",
                "courseTitle": "Biomedical Informatics Teaching Methods",
                "gradingMethod": "Medical Option (Med-Ltr-CR/NC)",
                "numberOfUnits": "1-6",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "BIOMEDIN 290:",
                "courseLevel": "Graduate",
                "courseMeta": "Hands-on training in biomedical informatics pedagogy. Practical experience in pedagogical approaches, variously including didactic, inquiry, project, team, case, field, and/or problem-based approaches. Students create course content, including lectures, exercises, and assessments, and evaluate learning activities and outcomes. Prerequisite: instructor consent.",
                "courseTitle": "Biomedical Informatics Teaching Methods",
                "gradingMethod": "Medical Option (Med-Ltr-CR/NC)",
                "numberOfUnits": "1-6",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "BIOMEDIN 290:",
                "courseLevel": "Graduate",
                "courseMeta": "Hands-on training in biomedical informatics pedagogy. Practical experience in pedagogical approaches, variously including didactic, inquiry, project, team, case, field, and/or problem-based approaches. Students create course content, including lectures, exercises, and assessments, and evaluate learning activities and outcomes. Prerequisite: instructor consent.",
                "courseTitle": "Biomedical Informatics Teaching Methods",
                "gradingMethod": "Medical Option (Med-Ltr-CR/NC)",
                "numberOfUnits": "1-6",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "BIOMEDIN 290:",
                "courseLevel": "Graduate",
                "courseMeta": "Hands-on training in biomedical informatics pedagogy. Practical experience in pedagogical approaches, variously including didactic, inquiry, project, team, case, field, and/or problem-based approaches. Students create course content, including lectures, exercises, and assessments, and evaluate learning activities and outcomes. Prerequisite: instructor consent.",
                "courseTitle": "Biomedical Informatics Teaching Methods",
                "gradingMethod": "Medical Option (Med-Ltr-CR/NC)",
                "numberOfUnits": "1-6",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "BIOMEDIN 290:",
                "courseLevel": "Graduate",
                "courseMeta": "Hands-on training in biomedical informatics pedagogy. Practical experience in pedagogical approaches, variously including didactic, inquiry, project, team, case, field, and/or problem-based approaches. Students create course content, including lectures, exercises, and assessments, and evaluate learning activities and outcomes. Prerequisite: instructor consent.",
                "courseTitle": "Biomedical Informatics Teaching Methods",
                "gradingMethod": "Medical Option (Med-Ltr-CR/NC)",
                "numberOfUnits": "1-6",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "BIOMEDIN 290:",
                "courseLevel": "Graduate",
                "courseMeta": "Hands-on training in biomedical informatics pedagogy. Practical experience in pedagogical approaches, variously including didactic, inquiry, project, team, case, field, and/or problem-based approaches. Students create course content, including lectures, exercises, and assessments, and evaluate learning activities and outcomes. Prerequisite: instructor consent.",
                "courseTitle": "Biomedical Informatics Teaching Methods",
                "gradingMethod": "Medical Option (Med-Ltr-CR/NC)",
                "numberOfUnits": "1-6",
                "semester": "Fall, Winter, Spring, Summer"
            }
        ]
    },
    "Matei Zaharia": {
        "corpus": {
            "DBLP": "https://dblp.uni-trier.de/pers/hd/z/Zaharia:Matei",
            "Google Scholar": "https://scholar.google.com/citations?user=I1EvjZsAAAAJ&hl=en&oi=ao",
            "domain": "",
            "home": "https://people.csail.mit.edu/matei"
        },
        "courses": [
            {
                "courseId": "CS 245:",
                "courseLevel": "Graduate",
                "courseMeta": "Architecture of data storage and processing systems, including relational databases, cluster computing systems, stream processing and machine learning systems. Topics include database system architecture, storage organization, query optimization, transaction management, fault recovery, and parallel processing, with a focus on the key design ideas shared across many types of data-intensive systems. Prerequisites: 145, 161.",
                "courseTitle": "Principles of Data-Intensive Systems",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3",
                "semester": "Spring"
            },
            {
                "courseId": "CS 245:",
                "courseLevel": "Graduate",
                "courseMeta": "Architecture of data storage and processing systems, including relational databases, cluster computing systems, stream processing and machine learning systems. Topics include database system architecture, storage organization, query optimization, transaction management, fault recovery, and parallel processing, with a focus on the key design ideas shared across many types of data-intensive systems. Prerequisites: 145, 161.",
                "courseTitle": "Principles of Data-Intensive Systems",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3",
                "semester": "Spring"
            },
            {
                "courseId": "CS 245:",
                "courseLevel": "Graduate",
                "courseMeta": "Architecture of data storage and processing systems, including relational databases, cluster computing systems, stream processing and machine learning systems. Topics include database system architecture, storage organization, query optimization, transaction management, fault recovery, and parallel processing, with a focus on the key design ideas shared across many types of data-intensive systems. Prerequisites: 145, 161.",
                "courseTitle": "Principles of Data-Intensive Systems",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3",
                "semester": "Spring"
            },
            {
                "courseId": "CS 245:",
                "courseLevel": "Graduate",
                "courseMeta": "Architecture of data storage and processing systems, including relational databases, cluster computing systems, stream processing and machine learning systems. Topics include database system architecture, storage organization, query optimization, transaction management, fault recovery, and parallel processing, with a focus on the key design ideas shared across many types of data-intensive systems. Prerequisites: 145, 161.",
                "courseTitle": "Principles of Data-Intensive Systems",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3",
                "semester": "Spring"
            },
            {
                "courseId": "CS 245:",
                "courseLevel": "Graduate",
                "courseMeta": "Architecture of data storage and processing systems, including relational databases, cluster computing systems, stream processing and machine learning systems. Topics include database system architecture, storage organization, query optimization, transaction management, fault recovery, and parallel processing, with a focus on the key design ideas shared across many types of data-intensive systems. Prerequisites: 145, 161.",
                "courseTitle": "Principles of Data-Intensive Systems",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3",
                "semester": "Spring"
            },
            {
                "courseId": "CS 245:",
                "courseLevel": "Graduate",
                "courseMeta": "Architecture of data storage and processing systems, including relational databases, cluster computing systems, stream processing and machine learning systems. Topics include database system architecture, storage organization, query optimization, transaction management, fault recovery, and parallel processing, with a focus on the key design ideas shared across many types of data-intensive systems. Prerequisites: 145, 161.",
                "courseTitle": "Principles of Data-Intensive Systems",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3",
                "semester": "Spring"
            },
            {
                "courseId": "CS 245:",
                "courseLevel": "Graduate",
                "courseMeta": "Architecture of data storage and processing systems, including relational databases, cluster computing systems, stream processing and machine learning systems. Topics include database system architecture, storage organization, query optimization, transaction management, fault recovery, and parallel processing, with a focus on the key design ideas shared across many types of data-intensive systems. Prerequisites: 145, 161.",
                "courseTitle": "Principles of Data-Intensive Systems",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3",
                "semester": "Spring"
            },
            {
                "courseId": "CS 245:",
                "courseLevel": "Graduate",
                "courseMeta": "Architecture of data storage and processing systems, including relational databases, cluster computing systems, stream processing and machine learning systems. Topics include database system architecture, storage organization, query optimization, transaction management, fault recovery, and parallel processing, with a focus on the key design ideas shared across many types of data-intensive systems. Prerequisites: 145, 161.",
                "courseTitle": "Principles of Data-Intensive Systems",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3",
                "semester": "Spring"
            },
            {
                "courseId": "CS 245:",
                "courseLevel": "Graduate",
                "courseMeta": "Architecture of data storage and processing systems, including relational databases, cluster computing systems, stream processing and machine learning systems. Topics include database system architecture, storage organization, query optimization, transaction management, fault recovery, and parallel processing, with a focus on the key design ideas shared across many types of data-intensive systems. Prerequisites: 145, 161.",
                "courseTitle": "Principles of Data-Intensive Systems",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3",
                "semester": "Spring"
            },
            {
                "courseId": "CS 245:",
                "courseLevel": "Graduate",
                "courseMeta": "Architecture of data storage and processing systems, including relational databases, cluster computing systems, stream processing and machine learning systems. Topics include database system architecture, storage organization, query optimization, transaction management, fault recovery, and parallel processing, with a focus on the key design ideas shared across many types of data-intensive systems. Prerequisites: 145, 161.",
                "courseTitle": "Principles of Data-Intensive Systems",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3",
                "semester": "Spring"
            },
            {
                "courseId": "CS 245:",
                "courseLevel": "Graduate",
                "courseMeta": "Architecture of data storage and processing systems, including relational databases, cluster computing systems, stream processing and machine learning systems. Topics include database system architecture, storage organization, query optimization, transaction management, fault recovery, and parallel processing, with a focus on the key design ideas shared across many types of data-intensive systems. Prerequisites: 145, 161.",
                "courseTitle": "Principles of Data-Intensive Systems",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3",
                "semester": "Spring"
            }
        ]
    },
    "Mehran Sahami": {
        "corpus": {
            "DBLP": "https://dblp.uni-trier.de/pers/hd/s/Sahami:Mehran",
            "Google Scholar": "https://scholar.google.com/citations?user=ZasL8IoAAAAJ&hl=en&oi=ao",
            "domain": "",
            "home": "http://robotics.stanford.edu/users/sahami/bio.html"
        },
        "courses": [
            {
                "courseId": "CS 390A:",
                "courseLevel": "Graduate",
                "courseMeta": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.",
                "courseTitle": "Curricular Practical Training",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "CS 390A:",
                "courseLevel": "Graduate",
                "courseMeta": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.",
                "courseTitle": "Curricular Practical Training",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "CS 390A:",
                "courseLevel": "Graduate",
                "courseMeta": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.",
                "courseTitle": "Curricular Practical Training",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "CS 390A:",
                "courseLevel": "Graduate",
                "courseMeta": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.",
                "courseTitle": "Curricular Practical Training",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "CS 390A:",
                "courseLevel": "Graduate",
                "courseMeta": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.",
                "courseTitle": "Curricular Practical Training",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "CS 390A:",
                "courseLevel": "Graduate",
                "courseMeta": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.",
                "courseTitle": "Curricular Practical Training",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "CS 390A:",
                "courseLevel": "Graduate",
                "courseMeta": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.",
                "courseTitle": "Curricular Practical Training",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "CS 390A:",
                "courseLevel": "Graduate",
                "courseMeta": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.",
                "courseTitle": "Curricular Practical Training",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "CS 390A:",
                "courseLevel": "Graduate",
                "courseMeta": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.",
                "courseTitle": "Curricular Practical Training",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "CS 390A:",
                "courseLevel": "Graduate",
                "courseMeta": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.",
                "courseTitle": "Curricular Practical Training",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "CS 390A:",
                "courseLevel": "Graduate",
                "courseMeta": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.",
                "courseTitle": "Curricular Practical Training",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "CS 390A:",
                "courseLevel": "Graduate",
                "courseMeta": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.",
                "courseTitle": "Curricular Practical Training",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "CS 390A:",
                "courseLevel": "Graduate",
                "courseMeta": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.",
                "courseTitle": "Curricular Practical Training",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "CS 390A:",
                "courseLevel": "Graduate",
                "courseMeta": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.",
                "courseTitle": "Curricular Practical Training",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "CS 390A:",
                "courseLevel": "Graduate",
                "courseMeta": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.",
                "courseTitle": "Curricular Practical Training",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "CS 390A:",
                "courseLevel": "Graduate",
                "courseMeta": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.",
                "courseTitle": "Curricular Practical Training",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "CS 390A:",
                "courseLevel": "Graduate",
                "courseMeta": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.",
                "courseTitle": "Curricular Practical Training",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "CS 390A:",
                "courseLevel": "Graduate",
                "courseMeta": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.",
                "courseTitle": "Curricular Practical Training",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "CS 390A:",
                "courseLevel": "Graduate",
                "courseMeta": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.",
                "courseTitle": "Curricular Practical Training",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Fall, Winter, Spring, Summer"
            }
        ]
    },
    "Michael S. Bernstein": {
        "corpus": {
            "DBLP": "https://dblp.uni-trier.de/pers/hd/b/Bernstein:Michael_S=",
            "Google Scholar": "https://scholar.google.com/citations?user=zkhHirIAAAAJ&hl=en&oi=ao",
            "domain": "graphics",
            "home": "http://hci.stanford.edu/msb"
        },
        "courses": [
            {
                "courseId": "CS 390A:",
                "courseLevel": "Graduate",
                "courseMeta": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.",
                "courseTitle": "Curricular Practical Training",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "CS 390A:",
                "courseLevel": "Graduate",
                "courseMeta": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.",
                "courseTitle": "Curricular Practical Training",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "CS 390A:",
                "courseLevel": "Graduate",
                "courseMeta": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.",
                "courseTitle": "Curricular Practical Training",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "CS 390A:",
                "courseLevel": "Graduate",
                "courseMeta": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.",
                "courseTitle": "Curricular Practical Training",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "CS 390A:",
                "courseLevel": "Graduate",
                "courseMeta": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.",
                "courseTitle": "Curricular Practical Training",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "CS 390A:",
                "courseLevel": "Graduate",
                "courseMeta": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.",
                "courseTitle": "Curricular Practical Training",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "CS 390A:",
                "courseLevel": "Graduate",
                "courseMeta": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.",
                "courseTitle": "Curricular Practical Training",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "CS 390A:",
                "courseLevel": "Graduate",
                "courseMeta": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.",
                "courseTitle": "Curricular Practical Training",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "CS 390A:",
                "courseLevel": "Graduate",
                "courseMeta": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.",
                "courseTitle": "Curricular Practical Training",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "CS 390A:",
                "courseLevel": "Graduate",
                "courseMeta": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.",
                "courseTitle": "Curricular Practical Training",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "CS 390A:",
                "courseLevel": "Graduate",
                "courseMeta": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.",
                "courseTitle": "Curricular Practical Training",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "CS 390A:",
                "courseLevel": "Graduate",
                "courseMeta": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.",
                "courseTitle": "Curricular Practical Training",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "CS 390A:",
                "courseLevel": "Graduate",
                "courseMeta": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.",
                "courseTitle": "Curricular Practical Training",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "CS 390A:",
                "courseLevel": "Graduate",
                "courseMeta": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.",
                "courseTitle": "Curricular Practical Training",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "CS 390A:",
                "courseLevel": "Graduate",
                "courseMeta": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.",
                "courseTitle": "Curricular Practical Training",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "CS 390A:",
                "courseLevel": "Graduate",
                "courseMeta": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.",
                "courseTitle": "Curricular Practical Training",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "CS 390A:",
                "courseLevel": "Graduate",
                "courseMeta": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.",
                "courseTitle": "Curricular Practical Training",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "CS 390A:",
                "courseLevel": "Graduate",
                "courseMeta": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.",
                "courseTitle": "Curricular Practical Training",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "CS 390A:",
                "courseLevel": "Graduate",
                "courseMeta": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.",
                "courseTitle": "Curricular Practical Training",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "CS 390A:",
                "courseLevel": "Graduate",
                "courseMeta": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.",
                "courseTitle": "Curricular Practical Training",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Fall, Winter, Spring, Summer"
            }
        ]
    },
    "Monica S. Lam": {
        "corpus": {
            "DBLP": "https://dblp.uni-trier.de/pers/hd/l/Lam:Monica_S=",
            "Google Scholar": "https://scholar.google.com/citations?user=fVaS7a8AAAAJ&hl=en&oi=ao",
            "domain": "hci",
            "home": "https://suif.stanford.edu/~lam"
        },
        "courses": [
            {
                "courseId": "CS 390A:",
                "courseLevel": "Graduate",
                "courseMeta": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.",
                "courseTitle": "Curricular Practical Training",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "CS 390A:",
                "courseLevel": "Graduate",
                "courseMeta": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.",
                "courseTitle": "Curricular Practical Training",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "CS 390A:",
                "courseLevel": "Graduate",
                "courseMeta": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.",
                "courseTitle": "Curricular Practical Training",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "CS 390A:",
                "courseLevel": "Graduate",
                "courseMeta": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.",
                "courseTitle": "Curricular Practical Training",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "CS 390A:",
                "courseLevel": "Graduate",
                "courseMeta": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.",
                "courseTitle": "Curricular Practical Training",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "CS 390A:",
                "courseLevel": "Graduate",
                "courseMeta": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.",
                "courseTitle": "Curricular Practical Training",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "CS 390A:",
                "courseLevel": "Graduate",
                "courseMeta": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.",
                "courseTitle": "Curricular Practical Training",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "CS 390A:",
                "courseLevel": "Graduate",
                "courseMeta": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.",
                "courseTitle": "Curricular Practical Training",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "CS 390A:",
                "courseLevel": "Graduate",
                "courseMeta": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.",
                "courseTitle": "Curricular Practical Training",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "CS 390A:",
                "courseLevel": "Graduate",
                "courseMeta": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.",
                "courseTitle": "Curricular Practical Training",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "CS 390A:",
                "courseLevel": "Graduate",
                "courseMeta": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.",
                "courseTitle": "Curricular Practical Training",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "CS 390A:",
                "courseLevel": "Graduate",
                "courseMeta": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.",
                "courseTitle": "Curricular Practical Training",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "CS 390A:",
                "courseLevel": "Graduate",
                "courseMeta": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.",
                "courseTitle": "Curricular Practical Training",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "CS 390A:",
                "courseLevel": "Graduate",
                "courseMeta": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.",
                "courseTitle": "Curricular Practical Training",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "CS 390A:",
                "courseLevel": "Graduate",
                "courseMeta": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.",
                "courseTitle": "Curricular Practical Training",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "CS 390A:",
                "courseLevel": "Graduate",
                "courseMeta": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.",
                "courseTitle": "Curricular Practical Training",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "CS 390A:",
                "courseLevel": "Graduate",
                "courseMeta": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.",
                "courseTitle": "Curricular Practical Training",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Fall, Winter, Spring, Summer"
            }
        ]
    },
    "Moses Charikar": {
        "corpus": {
            "DBLP": "https://dblp.uni-trier.de/pers/hd/c/Charikar:Moses",
            "Google Scholar": "https://scholar.google.com/citations?user=zX3ba1kAAAAJ&hl=en&oi=ao",
            "domain": "graphics",
            "home": "https://profiles.stanford.edu/moses-charikar"
        },
        "courses": [
            {
                "courseId": "CS 221:",
                "courseLevel": "Graduate",
                "courseMeta": "Artificial intelligence (AI) has had a huge impact in many areas, including medical diagnosis, speech recognition, robotics, web search, advertising, and scheduling.  This course focuses on the foundational concepts that drive these applications.  In short, AI is the mathematics of making good decisions given incomplete information (hence the need for probability) and limited computation (hence the need for algorithms).  Specific topics include search, constraint satisfaction, game playing, Markov decision processes, graphical models, machine learning, and logic. Prerequisites: CS 103 or CS 103B/X, CS 106B or CS 106X, CS 107, and CS 109 (algorithms, probability, and programming experience).",
                "courseTitle": "Artificial Intelligence: Principles and Techniques",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3-4",
                "semester": "Fall, Spring, Summer"
            },
            {
                "courseId": "CS 221:",
                "courseLevel": "Graduate",
                "courseMeta": "Artificial intelligence (AI) has had a huge impact in many areas, including medical diagnosis, speech recognition, robotics, web search, advertising, and scheduling.  This course focuses on the foundational concepts that drive these applications.  In short, AI is the mathematics of making good decisions given incomplete information (hence the need for probability) and limited computation (hence the need for algorithms).  Specific topics include search, constraint satisfaction, game playing, Markov decision processes, graphical models, machine learning, and logic. Prerequisites: CS 103 or CS 103B/X, CS 106B or CS 106X, CS 107, and CS 109 (algorithms, probability, and programming experience).",
                "courseTitle": "Artificial Intelligence: Principles and Techniques",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3-4",
                "semester": "Fall, Spring, Summer"
            },
            {
                "courseId": "CS 221:",
                "courseLevel": "Graduate",
                "courseMeta": "Artificial intelligence (AI) has had a huge impact in many areas, including medical diagnosis, speech recognition, robotics, web search, advertising, and scheduling.  This course focuses on the foundational concepts that drive these applications.  In short, AI is the mathematics of making good decisions given incomplete information (hence the need for probability) and limited computation (hence the need for algorithms).  Specific topics include search, constraint satisfaction, game playing, Markov decision processes, graphical models, machine learning, and logic. Prerequisites: CS 103 or CS 103B/X, CS 106B or CS 106X, CS 107, and CS 109 (algorithms, probability, and programming experience).",
                "courseTitle": "Artificial Intelligence: Principles and Techniques",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3-4",
                "semester": "Fall, Spring, Summer"
            },
            {
                "courseId": "CS 221:",
                "courseLevel": "Graduate",
                "courseMeta": "Artificial intelligence (AI) has had a huge impact in many areas, including medical diagnosis, speech recognition, robotics, web search, advertising, and scheduling.  This course focuses on the foundational concepts that drive these applications.  In short, AI is the mathematics of making good decisions given incomplete information (hence the need for probability) and limited computation (hence the need for algorithms).  Specific topics include search, constraint satisfaction, game playing, Markov decision processes, graphical models, machine learning, and logic. Prerequisites: CS 103 or CS 103B/X, CS 106B or CS 106X, CS 107, and CS 109 (algorithms, probability, and programming experience).",
                "courseTitle": "Artificial Intelligence: Principles and Techniques",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3-4",
                "semester": "Fall, Spring, Summer"
            },
            {
                "courseId": "CS 221:",
                "courseLevel": "Graduate",
                "courseMeta": "Artificial intelligence (AI) has had a huge impact in many areas, including medical diagnosis, speech recognition, robotics, web search, advertising, and scheduling.  This course focuses on the foundational concepts that drive these applications.  In short, AI is the mathematics of making good decisions given incomplete information (hence the need for probability) and limited computation (hence the need for algorithms).  Specific topics include search, constraint satisfaction, game playing, Markov decision processes, graphical models, machine learning, and logic. Prerequisites: CS 103 or CS 103B/X, CS 106B or CS 106X, CS 107, and CS 109 (algorithms, probability, and programming experience).",
                "courseTitle": "Artificial Intelligence: Principles and Techniques",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3-4",
                "semester": "Fall, Spring, Summer"
            },
            {
                "courseId": "CS 221:",
                "courseLevel": "Graduate",
                "courseMeta": "Artificial intelligence (AI) has had a huge impact in many areas, including medical diagnosis, speech recognition, robotics, web search, advertising, and scheduling.  This course focuses on the foundational concepts that drive these applications.  In short, AI is the mathematics of making good decisions given incomplete information (hence the need for probability) and limited computation (hence the need for algorithms).  Specific topics include search, constraint satisfaction, game playing, Markov decision processes, graphical models, machine learning, and logic. Prerequisites: CS 103 or CS 103B/X, CS 106B or CS 106X, CS 107, and CS 109 (algorithms, probability, and programming experience).",
                "courseTitle": "Artificial Intelligence: Principles and Techniques",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3-4",
                "semester": "Fall, Spring, Summer"
            },
            {
                "courseId": "CS 221:",
                "courseLevel": "Graduate",
                "courseMeta": "Artificial intelligence (AI) has had a huge impact in many areas, including medical diagnosis, speech recognition, robotics, web search, advertising, and scheduling.  This course focuses on the foundational concepts that drive these applications.  In short, AI is the mathematics of making good decisions given incomplete information (hence the need for probability) and limited computation (hence the need for algorithms).  Specific topics include search, constraint satisfaction, game playing, Markov decision processes, graphical models, machine learning, and logic. Prerequisites: CS 103 or CS 103B/X, CS 106B or CS 106X, CS 107, and CS 109 (algorithms, probability, and programming experience).",
                "courseTitle": "Artificial Intelligence: Principles and Techniques",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3-4",
                "semester": "Fall, Spring, Summer"
            },
            {
                "courseId": "CS 221:",
                "courseLevel": "Graduate",
                "courseMeta": "Artificial intelligence (AI) has had a huge impact in many areas, including medical diagnosis, speech recognition, robotics, web search, advertising, and scheduling.  This course focuses on the foundational concepts that drive these applications.  In short, AI is the mathematics of making good decisions given incomplete information (hence the need for probability) and limited computation (hence the need for algorithms).  Specific topics include search, constraint satisfaction, game playing, Markov decision processes, graphical models, machine learning, and logic. Prerequisites: CS 103 or CS 103B/X, CS 106B or CS 106X, CS 107, and CS 109 (algorithms, probability, and programming experience).",
                "courseTitle": "Artificial Intelligence: Principles and Techniques",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3-4",
                "semester": "Fall, Spring, Summer"
            },
            {
                "courseId": "CS 221:",
                "courseLevel": "Graduate",
                "courseMeta": "Artificial intelligence (AI) has had a huge impact in many areas, including medical diagnosis, speech recognition, robotics, web search, advertising, and scheduling.  This course focuses on the foundational concepts that drive these applications.  In short, AI is the mathematics of making good decisions given incomplete information (hence the need for probability) and limited computation (hence the need for algorithms).  Specific topics include search, constraint satisfaction, game playing, Markov decision processes, graphical models, machine learning, and logic. Prerequisites: CS 103 or CS 103B/X, CS 106B or CS 106X, CS 107, and CS 109 (algorithms, probability, and programming experience).",
                "courseTitle": "Artificial Intelligence: Principles and Techniques",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3-4",
                "semester": "Fall, Spring, Summer"
            },
            {
                "courseId": "CS 221:",
                "courseLevel": "Graduate",
                "courseMeta": "Artificial intelligence (AI) has had a huge impact in many areas, including medical diagnosis, speech recognition, robotics, web search, advertising, and scheduling.  This course focuses on the foundational concepts that drive these applications.  In short, AI is the mathematics of making good decisions given incomplete information (hence the need for probability) and limited computation (hence the need for algorithms).  Specific topics include search, constraint satisfaction, game playing, Markov decision processes, graphical models, machine learning, and logic. Prerequisites: CS 103 or CS 103B/X, CS 106B or CS 106X, CS 107, and CS 109 (algorithms, probability, and programming experience).",
                "courseTitle": "Artificial Intelligence: Principles and Techniques",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3-4",
                "semester": "Fall, Spring, Summer"
            },
            {
                "courseId": "CS 221:",
                "courseLevel": "Graduate",
                "courseMeta": "Artificial intelligence (AI) has had a huge impact in many areas, including medical diagnosis, speech recognition, robotics, web search, advertising, and scheduling.  This course focuses on the foundational concepts that drive these applications.  In short, AI is the mathematics of making good decisions given incomplete information (hence the need for probability) and limited computation (hence the need for algorithms).  Specific topics include search, constraint satisfaction, game playing, Markov decision processes, graphical models, machine learning, and logic. Prerequisites: CS 103 or CS 103B/X, CS 106B or CS 106X, CS 107, and CS 109 (algorithms, probability, and programming experience).",
                "courseTitle": "Artificial Intelligence: Principles and Techniques",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3-4",
                "semester": "Fall, Spring, Summer"
            },
            {
                "courseId": "CS 221:",
                "courseLevel": "Graduate",
                "courseMeta": "Artificial intelligence (AI) has had a huge impact in many areas, including medical diagnosis, speech recognition, robotics, web search, advertising, and scheduling.  This course focuses on the foundational concepts that drive these applications.  In short, AI is the mathematics of making good decisions given incomplete information (hence the need for probability) and limited computation (hence the need for algorithms).  Specific topics include search, constraint satisfaction, game playing, Markov decision processes, graphical models, machine learning, and logic. Prerequisites: CS 103 or CS 103B/X, CS 106B or CS 106X, CS 107, and CS 109 (algorithms, probability, and programming experience).",
                "courseTitle": "Artificial Intelligence: Principles and Techniques",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3-4",
                "semester": "Fall, Spring, Summer"
            },
            {
                "courseId": "CS 221:",
                "courseLevel": "Graduate",
                "courseMeta": "Artificial intelligence (AI) has had a huge impact in many areas, including medical diagnosis, speech recognition, robotics, web search, advertising, and scheduling.  This course focuses on the foundational concepts that drive these applications.  In short, AI is the mathematics of making good decisions given incomplete information (hence the need for probability) and limited computation (hence the need for algorithms).  Specific topics include search, constraint satisfaction, game playing, Markov decision processes, graphical models, machine learning, and logic. Prerequisites: CS 103 or CS 103B/X, CS 106B or CS 106X, CS 107, and CS 109 (algorithms, probability, and programming experience).",
                "courseTitle": "Artificial Intelligence: Principles and Techniques",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3-4",
                "semester": "Fall, Spring, Summer"
            },
            {
                "courseId": "CS 221:",
                "courseLevel": "Graduate",
                "courseMeta": "Artificial intelligence (AI) has had a huge impact in many areas, including medical diagnosis, speech recognition, robotics, web search, advertising, and scheduling.  This course focuses on the foundational concepts that drive these applications.  In short, AI is the mathematics of making good decisions given incomplete information (hence the need for probability) and limited computation (hence the need for algorithms).  Specific topics include search, constraint satisfaction, game playing, Markov decision processes, graphical models, machine learning, and logic. Prerequisites: CS 103 or CS 103B/X, CS 106B or CS 106X, CS 107, and CS 109 (algorithms, probability, and programming experience).",
                "courseTitle": "Artificial Intelligence: Principles and Techniques",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3-4",
                "semester": "Fall, Spring, Summer"
            },
            {
                "courseId": "CS 221:",
                "courseLevel": "Graduate",
                "courseMeta": "Artificial intelligence (AI) has had a huge impact in many areas, including medical diagnosis, speech recognition, robotics, web search, advertising, and scheduling.  This course focuses on the foundational concepts that drive these applications.  In short, AI is the mathematics of making good decisions given incomplete information (hence the need for probability) and limited computation (hence the need for algorithms).  Specific topics include search, constraint satisfaction, game playing, Markov decision processes, graphical models, machine learning, and logic. Prerequisites: CS 103 or CS 103B/X, CS 106B or CS 106X, CS 107, and CS 109 (algorithms, probability, and programming experience).",
                "courseTitle": "Artificial Intelligence: Principles and Techniques",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3-4",
                "semester": "Fall, Spring, Summer"
            }
        ]
    },
    "Noah D. Goodman": {
        "corpus": {
            "DBLP": "https://dblp.uni-trier.de/pers/hd/g/Goodman:Noah_D=",
            "Google Scholar": "https://scholar.google.com/citations?user=OUpIbcQAAAAJ&hl=en&oi=ao",
            "domain": "nlp",
            "home": "http://cocolab.stanford.edu/ndg.html"
        },
        "courses": [
            {
                "courseId": "CS 390A:",
                "courseLevel": "Graduate",
                "courseMeta": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.",
                "courseTitle": "Curricular Practical Training",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "CS 390A:",
                "courseLevel": "Graduate",
                "courseMeta": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.",
                "courseTitle": "Curricular Practical Training",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "CS 390A:",
                "courseLevel": "Graduate",
                "courseMeta": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.",
                "courseTitle": "Curricular Practical Training",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "CS 390A:",
                "courseLevel": "Graduate",
                "courseMeta": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.",
                "courseTitle": "Curricular Practical Training",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "CS 390A:",
                "courseLevel": "Graduate",
                "courseMeta": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.",
                "courseTitle": "Curricular Practical Training",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "CS 390A:",
                "courseLevel": "Graduate",
                "courseMeta": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.",
                "courseTitle": "Curricular Practical Training",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "CS 390A:",
                "courseLevel": "Graduate",
                "courseMeta": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.",
                "courseTitle": "Curricular Practical Training",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "CS 390A:",
                "courseLevel": "Graduate",
                "courseMeta": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.",
                "courseTitle": "Curricular Practical Training",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "CS 390A:",
                "courseLevel": "Graduate",
                "courseMeta": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.",
                "courseTitle": "Curricular Practical Training",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "CS 390A:",
                "courseLevel": "Graduate",
                "courseMeta": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.",
                "courseTitle": "Curricular Practical Training",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "CS 390A:",
                "courseLevel": "Graduate",
                "courseMeta": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.",
                "courseTitle": "Curricular Practical Training",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "CS 390A:",
                "courseLevel": "Graduate",
                "courseMeta": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.",
                "courseTitle": "Curricular Practical Training",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "CS 390A:",
                "courseLevel": "Graduate",
                "courseMeta": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.",
                "courseTitle": "Curricular Practical Training",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "CS 390A:",
                "courseLevel": "Graduate",
                "courseMeta": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.",
                "courseTitle": "Curricular Practical Training",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "CS 390A:",
                "courseLevel": "Graduate",
                "courseMeta": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.",
                "courseTitle": "Curricular Practical Training",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "CS 390A:",
                "courseLevel": "Graduate",
                "courseMeta": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.",
                "courseTitle": "Curricular Practical Training",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "CS 390A:",
                "courseLevel": "Graduate",
                "courseMeta": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.",
                "courseTitle": "Curricular Practical Training",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Fall, Winter, Spring, Summer"
            }
        ]
    },
    "Omer Reingold": {
        "corpus": {
            "DBLP": "https://dblp.uni-trier.de/pers/hd/r/Reingold:Omer",
            "Google Scholar": "https://scholar.google.com/citations?user=TD9RhcgAAAAJ&hl=en&oi=ao",
            "domain": "ai",
            "home": "https://omereingold.wordpress.com"
        },
        "courses": [
            {
                "courseId": "CS 390A:",
                "courseLevel": "Graduate",
                "courseMeta": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.",
                "courseTitle": "Curricular Practical Training",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "CS 390A:",
                "courseLevel": "Graduate",
                "courseMeta": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.",
                "courseTitle": "Curricular Practical Training",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "CS 390A:",
                "courseLevel": "Graduate",
                "courseMeta": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.",
                "courseTitle": "Curricular Practical Training",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "CS 390A:",
                "courseLevel": "Graduate",
                "courseMeta": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.",
                "courseTitle": "Curricular Practical Training",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "CS 390A:",
                "courseLevel": "Graduate",
                "courseMeta": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.",
                "courseTitle": "Curricular Practical Training",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "CS 390A:",
                "courseLevel": "Graduate",
                "courseMeta": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.",
                "courseTitle": "Curricular Practical Training",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "CS 390A:",
                "courseLevel": "Graduate",
                "courseMeta": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.",
                "courseTitle": "Curricular Practical Training",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "CS 390A:",
                "courseLevel": "Graduate",
                "courseMeta": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.",
                "courseTitle": "Curricular Practical Training",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Fall, Winter, Spring, Summer"
            }
        ]
    },
    "Pat Hanrahan": {
        "corpus": {
            "DBLP": "https://dblp.uni-trier.de/pers/hd/h/Hanrahan:Pat",
            "Google Scholar": "https://scholar.google.com/citations?user=RzEnQmgAAAAJ&hl=en&oi=ao",
            "domain": "security",
            "home": "https://graphics.stanford.edu/~hanrahan"
        },
        "courses": [
            {
                "courseId": "CS 348B:",
                "courseLevel": "Graduate",
                "courseMeta": "Intermediate level, emphasizing high-quality image synthesis algorithms and systems issues in rendering. Topics include: Reyes and advanced rasterization, including motion blur and depth of field; ray tracing and physically based rendering; Monte Carlo algorithms for rendering, including direct illumination and global illumination; path tracing and photon mapping; surface reflection and light source models; volume rendering and subsurface scattering; SIMD and multi-core parallelism for rendering. Written assignments and programming projects. Prerequisite: 248 or equivalent. Recommended: Fourier analysis or digital signal processing.",
                "courseTitle": "Computer Graphics: Image Synthesis Techniques",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3-4",
                "semester": "Spring"
            },
            {
                "courseId": "CS 348B:",
                "courseLevel": "Graduate",
                "courseMeta": "Intermediate level, emphasizing high-quality image synthesis algorithms and systems issues in rendering. Topics include: Reyes and advanced rasterization, including motion blur and depth of field; ray tracing and physically based rendering; Monte Carlo algorithms for rendering, including direct illumination and global illumination; path tracing and photon mapping; surface reflection and light source models; volume rendering and subsurface scattering; SIMD and multi-core parallelism for rendering. Written assignments and programming projects. Prerequisite: 248 or equivalent. Recommended: Fourier analysis or digital signal processing.",
                "courseTitle": "Computer Graphics: Image Synthesis Techniques",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3-4",
                "semester": "Spring"
            },
            {
                "courseId": "CS 348B:",
                "courseLevel": "Graduate",
                "courseMeta": "Intermediate level, emphasizing high-quality image synthesis algorithms and systems issues in rendering. Topics include: Reyes and advanced rasterization, including motion blur and depth of field; ray tracing and physically based rendering; Monte Carlo algorithms for rendering, including direct illumination and global illumination; path tracing and photon mapping; surface reflection and light source models; volume rendering and subsurface scattering; SIMD and multi-core parallelism for rendering. Written assignments and programming projects. Prerequisite: 248 or equivalent. Recommended: Fourier analysis or digital signal processing.",
                "courseTitle": "Computer Graphics: Image Synthesis Techniques",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3-4",
                "semester": "Spring"
            },
            {
                "courseId": "CS 348B:",
                "courseLevel": "Graduate",
                "courseMeta": "Intermediate level, emphasizing high-quality image synthesis algorithms and systems issues in rendering. Topics include: Reyes and advanced rasterization, including motion blur and depth of field; ray tracing and physically based rendering; Monte Carlo algorithms for rendering, including direct illumination and global illumination; path tracing and photon mapping; surface reflection and light source models; volume rendering and subsurface scattering; SIMD and multi-core parallelism for rendering. Written assignments and programming projects. Prerequisite: 248 or equivalent. Recommended: Fourier analysis or digital signal processing.",
                "courseTitle": "Computer Graphics: Image Synthesis Techniques",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3-4",
                "semester": "Spring"
            },
            {
                "courseId": "CS 348B:",
                "courseLevel": "Graduate",
                "courseMeta": "Intermediate level, emphasizing high-quality image synthesis algorithms and systems issues in rendering. Topics include: Reyes and advanced rasterization, including motion blur and depth of field; ray tracing and physically based rendering; Monte Carlo algorithms for rendering, including direct illumination and global illumination; path tracing and photon mapping; surface reflection and light source models; volume rendering and subsurface scattering; SIMD and multi-core parallelism for rendering. Written assignments and programming projects. Prerequisite: 248 or equivalent. Recommended: Fourier analysis or digital signal processing.",
                "courseTitle": "Computer Graphics: Image Synthesis Techniques",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3-4",
                "semester": "Spring"
            },
            {
                "courseId": "CS 348B:",
                "courseLevel": "Graduate",
                "courseMeta": "Intermediate level, emphasizing high-quality image synthesis algorithms and systems issues in rendering. Topics include: Reyes and advanced rasterization, including motion blur and depth of field; ray tracing and physically based rendering; Monte Carlo algorithms for rendering, including direct illumination and global illumination; path tracing and photon mapping; surface reflection and light source models; volume rendering and subsurface scattering; SIMD and multi-core parallelism for rendering. Written assignments and programming projects. Prerequisite: 248 or equivalent. Recommended: Fourier analysis or digital signal processing.",
                "courseTitle": "Computer Graphics: Image Synthesis Techniques",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3-4",
                "semester": "Spring"
            },
            {
                "courseId": "CS 348B:",
                "courseLevel": "Graduate",
                "courseMeta": "Intermediate level, emphasizing high-quality image synthesis algorithms and systems issues in rendering. Topics include: Reyes and advanced rasterization, including motion blur and depth of field; ray tracing and physically based rendering; Monte Carlo algorithms for rendering, including direct illumination and global illumination; path tracing and photon mapping; surface reflection and light source models; volume rendering and subsurface scattering; SIMD and multi-core parallelism for rendering. Written assignments and programming projects. Prerequisite: 248 or equivalent. Recommended: Fourier analysis or digital signal processing.",
                "courseTitle": "Computer Graphics: Image Synthesis Techniques",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3-4",
                "semester": "Spring"
            },
            {
                "courseId": "CS 348B:",
                "courseLevel": "Graduate",
                "courseMeta": "Intermediate level, emphasizing high-quality image synthesis algorithms and systems issues in rendering. Topics include: Reyes and advanced rasterization, including motion blur and depth of field; ray tracing and physically based rendering; Monte Carlo algorithms for rendering, including direct illumination and global illumination; path tracing and photon mapping; surface reflection and light source models; volume rendering and subsurface scattering; SIMD and multi-core parallelism for rendering. Written assignments and programming projects. Prerequisite: 248 or equivalent. Recommended: Fourier analysis or digital signal processing.",
                "courseTitle": "Computer Graphics: Image Synthesis Techniques",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3-4",
                "semester": "Spring"
            },
            {
                "courseId": "CS 348B:",
                "courseLevel": "Graduate",
                "courseMeta": "Intermediate level, emphasizing high-quality image synthesis algorithms and systems issues in rendering. Topics include: Reyes and advanced rasterization, including motion blur and depth of field; ray tracing and physically based rendering; Monte Carlo algorithms for rendering, including direct illumination and global illumination; path tracing and photon mapping; surface reflection and light source models; volume rendering and subsurface scattering; SIMD and multi-core parallelism for rendering. Written assignments and programming projects. Prerequisite: 248 or equivalent. Recommended: Fourier analysis or digital signal processing.",
                "courseTitle": "Computer Graphics: Image Synthesis Techniques",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3-4",
                "semester": "Spring"
            },
            {
                "courseId": "CS 348B:",
                "courseLevel": "Graduate",
                "courseMeta": "Intermediate level, emphasizing high-quality image synthesis algorithms and systems issues in rendering. Topics include: Reyes and advanced rasterization, including motion blur and depth of field; ray tracing and physically based rendering; Monte Carlo algorithms for rendering, including direct illumination and global illumination; path tracing and photon mapping; surface reflection and light source models; volume rendering and subsurface scattering; SIMD and multi-core parallelism for rendering. Written assignments and programming projects. Prerequisite: 248 or equivalent. Recommended: Fourier analysis or digital signal processing.",
                "courseTitle": "Computer Graphics: Image Synthesis Techniques",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3-4",
                "semester": "Spring"
            },
            {
                "courseId": "CS 348B:",
                "courseLevel": "Graduate",
                "courseMeta": "Intermediate level, emphasizing high-quality image synthesis algorithms and systems issues in rendering. Topics include: Reyes and advanced rasterization, including motion blur and depth of field; ray tracing and physically based rendering; Monte Carlo algorithms for rendering, including direct illumination and global illumination; path tracing and photon mapping; surface reflection and light source models; volume rendering and subsurface scattering; SIMD and multi-core parallelism for rendering. Written assignments and programming projects. Prerequisite: 248 or equivalent. Recommended: Fourier analysis or digital signal processing.",
                "courseTitle": "Computer Graphics: Image Synthesis Techniques",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3-4",
                "semester": "Spring"
            },
            {
                "courseId": "CS 348B:",
                "courseLevel": "Graduate",
                "courseMeta": "Intermediate level, emphasizing high-quality image synthesis algorithms and systems issues in rendering. Topics include: Reyes and advanced rasterization, including motion blur and depth of field; ray tracing and physically based rendering; Monte Carlo algorithms for rendering, including direct illumination and global illumination; path tracing and photon mapping; surface reflection and light source models; volume rendering and subsurface scattering; SIMD and multi-core parallelism for rendering. Written assignments and programming projects. Prerequisite: 248 or equivalent. Recommended: Fourier analysis or digital signal processing.",
                "courseTitle": "Computer Graphics: Image Synthesis Techniques",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3-4",
                "semester": "Spring"
            },
            {
                "courseId": "CS 348B:",
                "courseLevel": "Graduate",
                "courseMeta": "Intermediate level, emphasizing high-quality image synthesis algorithms and systems issues in rendering. Topics include: Reyes and advanced rasterization, including motion blur and depth of field; ray tracing and physically based rendering; Monte Carlo algorithms for rendering, including direct illumination and global illumination; path tracing and photon mapping; surface reflection and light source models; volume rendering and subsurface scattering; SIMD and multi-core parallelism for rendering. Written assignments and programming projects. Prerequisite: 248 or equivalent. Recommended: Fourier analysis or digital signal processing.",
                "courseTitle": "Computer Graphics: Image Synthesis Techniques",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3-4",
                "semester": "Spring"
            },
            {
                "courseId": "CS 348B:",
                "courseLevel": "Graduate",
                "courseMeta": "Intermediate level, emphasizing high-quality image synthesis algorithms and systems issues in rendering. Topics include: Reyes and advanced rasterization, including motion blur and depth of field; ray tracing and physically based rendering; Monte Carlo algorithms for rendering, including direct illumination and global illumination; path tracing and photon mapping; surface reflection and light source models; volume rendering and subsurface scattering; SIMD and multi-core parallelism for rendering. Written assignments and programming projects. Prerequisite: 248 or equivalent. Recommended: Fourier analysis or digital signal processing.",
                "courseTitle": "Computer Graphics: Image Synthesis Techniques",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3-4",
                "semester": "Spring"
            },
            {
                "courseId": "CS 348B:",
                "courseLevel": "Graduate",
                "courseMeta": "Intermediate level, emphasizing high-quality image synthesis algorithms and systems issues in rendering. Topics include: Reyes and advanced rasterization, including motion blur and depth of field; ray tracing and physically based rendering; Monte Carlo algorithms for rendering, including direct illumination and global illumination; path tracing and photon mapping; surface reflection and light source models; volume rendering and subsurface scattering; SIMD and multi-core parallelism for rendering. Written assignments and programming projects. Prerequisite: 248 or equivalent. Recommended: Fourier analysis or digital signal processing.",
                "courseTitle": "Computer Graphics: Image Synthesis Techniques",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3-4",
                "semester": "Spring"
            },
            {
                "courseId": "CS 348B:",
                "courseLevel": "Graduate",
                "courseMeta": "Intermediate level, emphasizing high-quality image synthesis algorithms and systems issues in rendering. Topics include: Reyes and advanced rasterization, including motion blur and depth of field; ray tracing and physically based rendering; Monte Carlo algorithms for rendering, including direct illumination and global illumination; path tracing and photon mapping; surface reflection and light source models; volume rendering and subsurface scattering; SIMD and multi-core parallelism for rendering. Written assignments and programming projects. Prerequisite: 248 or equivalent. Recommended: Fourier analysis or digital signal processing.",
                "courseTitle": "Computer Graphics: Image Synthesis Techniques",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3-4",
                "semester": "Spring"
            },
            {
                "courseId": "CS 348B:",
                "courseLevel": "Graduate",
                "courseMeta": "Intermediate level, emphasizing high-quality image synthesis algorithms and systems issues in rendering. Topics include: Reyes and advanced rasterization, including motion blur and depth of field; ray tracing and physically based rendering; Monte Carlo algorithms for rendering, including direct illumination and global illumination; path tracing and photon mapping; surface reflection and light source models; volume rendering and subsurface scattering; SIMD and multi-core parallelism for rendering. Written assignments and programming projects. Prerequisite: 248 or equivalent. Recommended: Fourier analysis or digital signal processing.",
                "courseTitle": "Computer Graphics: Image Synthesis Techniques",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3-4",
                "semester": "Spring"
            },
            {
                "courseId": "CS 348B:",
                "courseLevel": "Graduate",
                "courseMeta": "Intermediate level, emphasizing high-quality image synthesis algorithms and systems issues in rendering. Topics include: Reyes and advanced rasterization, including motion blur and depth of field; ray tracing and physically based rendering; Monte Carlo algorithms for rendering, including direct illumination and global illumination; path tracing and photon mapping; surface reflection and light source models; volume rendering and subsurface scattering; SIMD and multi-core parallelism for rendering. Written assignments and programming projects. Prerequisite: 248 or equivalent. Recommended: Fourier analysis or digital signal processing.",
                "courseTitle": "Computer Graphics: Image Synthesis Techniques",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3-4",
                "semester": "Spring"
            },
            {
                "courseId": "CS 348B:",
                "courseLevel": "Graduate",
                "courseMeta": "Intermediate level, emphasizing high-quality image synthesis algorithms and systems issues in rendering. Topics include: Reyes and advanced rasterization, including motion blur and depth of field; ray tracing and physically based rendering; Monte Carlo algorithms for rendering, including direct illumination and global illumination; path tracing and photon mapping; surface reflection and light source models; volume rendering and subsurface scattering; SIMD and multi-core parallelism for rendering. Written assignments and programming projects. Prerequisite: 248 or equivalent. Recommended: Fourier analysis or digital signal processing.",
                "courseTitle": "Computer Graphics: Image Synthesis Techniques",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3-4",
                "semester": "Spring"
            },
            {
                "courseId": "CS 348B:",
                "courseLevel": "Graduate",
                "courseMeta": "Intermediate level, emphasizing high-quality image synthesis algorithms and systems issues in rendering. Topics include: Reyes and advanced rasterization, including motion blur and depth of field; ray tracing and physically based rendering; Monte Carlo algorithms for rendering, including direct illumination and global illumination; path tracing and photon mapping; surface reflection and light source models; volume rendering and subsurface scattering; SIMD and multi-core parallelism for rendering. Written assignments and programming projects. Prerequisite: 248 or equivalent. Recommended: Fourier analysis or digital signal processing.",
                "courseTitle": "Computer Graphics: Image Synthesis Techniques",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3-4",
                "semester": "Spring"
            },
            {
                "courseId": "CS 348B:",
                "courseLevel": "Graduate",
                "courseMeta": "Intermediate level, emphasizing high-quality image synthesis algorithms and systems issues in rendering. Topics include: Reyes and advanced rasterization, including motion blur and depth of field; ray tracing and physically based rendering; Monte Carlo algorithms for rendering, including direct illumination and global illumination; path tracing and photon mapping; surface reflection and light source models; volume rendering and subsurface scattering; SIMD and multi-core parallelism for rendering. Written assignments and programming projects. Prerequisite: 248 or equivalent. Recommended: Fourier analysis or digital signal processing.",
                "courseTitle": "Computer Graphics: Image Synthesis Techniques",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3-4",
                "semester": "Spring"
            },
            {
                "courseId": "CS 348B:",
                "courseLevel": "Graduate",
                "courseMeta": "Intermediate level, emphasizing high-quality image synthesis algorithms and systems issues in rendering. Topics include: Reyes and advanced rasterization, including motion blur and depth of field; ray tracing and physically based rendering; Monte Carlo algorithms for rendering, including direct illumination and global illumination; path tracing and photon mapping; surface reflection and light source models; volume rendering and subsurface scattering; SIMD and multi-core parallelism for rendering. Written assignments and programming projects. Prerequisite: 248 or equivalent. Recommended: Fourier analysis or digital signal processing.",
                "courseTitle": "Computer Graphics: Image Synthesis Techniques",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3-4",
                "semester": "Spring"
            },
            {
                "courseId": "CS 348B:",
                "courseLevel": "Graduate",
                "courseMeta": "Intermediate level, emphasizing high-quality image synthesis algorithms and systems issues in rendering. Topics include: Reyes and advanced rasterization, including motion blur and depth of field; ray tracing and physically based rendering; Monte Carlo algorithms for rendering, including direct illumination and global illumination; path tracing and photon mapping; surface reflection and light source models; volume rendering and subsurface scattering; SIMD and multi-core parallelism for rendering. Written assignments and programming projects. Prerequisite: 248 or equivalent. Recommended: Fourier analysis or digital signal processing.",
                "courseTitle": "Computer Graphics: Image Synthesis Techniques",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3-4",
                "semester": "Spring"
            },
            {
                "courseId": "CS 348B:",
                "courseLevel": "Graduate",
                "courseMeta": "Intermediate level, emphasizing high-quality image synthesis algorithms and systems issues in rendering. Topics include: Reyes and advanced rasterization, including motion blur and depth of field; ray tracing and physically based rendering; Monte Carlo algorithms for rendering, including direct illumination and global illumination; path tracing and photon mapping; surface reflection and light source models; volume rendering and subsurface scattering; SIMD and multi-core parallelism for rendering. Written assignments and programming projects. Prerequisite: 248 or equivalent. Recommended: Fourier analysis or digital signal processing.",
                "courseTitle": "Computer Graphics: Image Synthesis Techniques",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3-4",
                "semester": "Spring"
            },
            {
                "courseId": "CS 348B:",
                "courseLevel": "Graduate",
                "courseMeta": "Intermediate level, emphasizing high-quality image synthesis algorithms and systems issues in rendering. Topics include: Reyes and advanced rasterization, including motion blur and depth of field; ray tracing and physically based rendering; Monte Carlo algorithms for rendering, including direct illumination and global illumination; path tracing and photon mapping; surface reflection and light source models; volume rendering and subsurface scattering; SIMD and multi-core parallelism for rendering. Written assignments and programming projects. Prerequisite: 248 or equivalent. Recommended: Fourier analysis or digital signal processing.",
                "courseTitle": "Computer Graphics: Image Synthesis Techniques",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3-4",
                "semester": "Spring"
            },
            {
                "courseId": "CS 348B:",
                "courseLevel": "Graduate",
                "courseMeta": "Intermediate level, emphasizing high-quality image synthesis algorithms and systems issues in rendering. Topics include: Reyes and advanced rasterization, including motion blur and depth of field; ray tracing and physically based rendering; Monte Carlo algorithms for rendering, including direct illumination and global illumination; path tracing and photon mapping; surface reflection and light source models; volume rendering and subsurface scattering; SIMD and multi-core parallelism for rendering. Written assignments and programming projects. Prerequisite: 248 or equivalent. Recommended: Fourier analysis or digital signal processing.",
                "courseTitle": "Computer Graphics: Image Synthesis Techniques",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3-4",
                "semester": "Spring"
            }
        ]
    },
    "Percy Liang": {
        "corpus": {
            "DBLP": "https://dblp.uni-trier.de/pers/hd/l/Liang:Percy",
            "Google Scholar": "https://scholar.google.com/citations?user=pouyVyUAAAAJ&hl=en&oi=ao",
            "domain": "nlp",
            "home": "https://cs.stanford.edu/~pliang"
        },
        "courses": [
            {
                "courseId": "CS 221:",
                "courseLevel": "Graduate",
                "courseMeta": "Artificial intelligence (AI) has had a huge impact in many areas, including medical diagnosis, speech recognition, robotics, web search, advertising, and scheduling.  This course focuses on the foundational concepts that drive these applications.  In short, AI is the mathematics of making good decisions given incomplete information (hence the need for probability) and limited computation (hence the need for algorithms).  Specific topics include search, constraint satisfaction, game playing, Markov decision processes, graphical models, machine learning, and logic. Prerequisites: CS 103 or CS 103B/X, CS 106B or CS 106X, CS 107, and CS 109 (algorithms, probability, and programming experience).",
                "courseTitle": "Artificial Intelligence: Principles and Techniques",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3-4",
                "semester": "Fall, Spring, Summer"
            },
            {
                "courseId": "CS 221:",
                "courseLevel": "Graduate",
                "courseMeta": "Artificial intelligence (AI) has had a huge impact in many areas, including medical diagnosis, speech recognition, robotics, web search, advertising, and scheduling.  This course focuses on the foundational concepts that drive these applications.  In short, AI is the mathematics of making good decisions given incomplete information (hence the need for probability) and limited computation (hence the need for algorithms).  Specific topics include search, constraint satisfaction, game playing, Markov decision processes, graphical models, machine learning, and logic. Prerequisites: CS 103 or CS 103B/X, CS 106B or CS 106X, CS 107, and CS 109 (algorithms, probability, and programming experience).",
                "courseTitle": "Artificial Intelligence: Principles and Techniques",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3-4",
                "semester": "Fall, Spring, Summer"
            },
            {
                "courseId": "CS 221:",
                "courseLevel": "Graduate",
                "courseMeta": "Artificial intelligence (AI) has had a huge impact in many areas, including medical diagnosis, speech recognition, robotics, web search, advertising, and scheduling.  This course focuses on the foundational concepts that drive these applications.  In short, AI is the mathematics of making good decisions given incomplete information (hence the need for probability) and limited computation (hence the need for algorithms).  Specific topics include search, constraint satisfaction, game playing, Markov decision processes, graphical models, machine learning, and logic. Prerequisites: CS 103 or CS 103B/X, CS 106B or CS 106X, CS 107, and CS 109 (algorithms, probability, and programming experience).",
                "courseTitle": "Artificial Intelligence: Principles and Techniques",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3-4",
                "semester": "Fall, Spring, Summer"
            },
            {
                "courseId": "CS 221:",
                "courseLevel": "Graduate",
                "courseMeta": "Artificial intelligence (AI) has had a huge impact in many areas, including medical diagnosis, speech recognition, robotics, web search, advertising, and scheduling.  This course focuses on the foundational concepts that drive these applications.  In short, AI is the mathematics of making good decisions given incomplete information (hence the need for probability) and limited computation (hence the need for algorithms).  Specific topics include search, constraint satisfaction, game playing, Markov decision processes, graphical models, machine learning, and logic. Prerequisites: CS 103 or CS 103B/X, CS 106B or CS 106X, CS 107, and CS 109 (algorithms, probability, and programming experience).",
                "courseTitle": "Artificial Intelligence: Principles and Techniques",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3-4",
                "semester": "Fall, Spring, Summer"
            },
            {
                "courseId": "CS 221:",
                "courseLevel": "Graduate",
                "courseMeta": "Artificial intelligence (AI) has had a huge impact in many areas, including medical diagnosis, speech recognition, robotics, web search, advertising, and scheduling.  This course focuses on the foundational concepts that drive these applications.  In short, AI is the mathematics of making good decisions given incomplete information (hence the need for probability) and limited computation (hence the need for algorithms).  Specific topics include search, constraint satisfaction, game playing, Markov decision processes, graphical models, machine learning, and logic. Prerequisites: CS 103 or CS 103B/X, CS 106B or CS 106X, CS 107, and CS 109 (algorithms, probability, and programming experience).",
                "courseTitle": "Artificial Intelligence: Principles and Techniques",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3-4",
                "semester": "Fall, Spring, Summer"
            },
            {
                "courseId": "CS 221:",
                "courseLevel": "Graduate",
                "courseMeta": "Artificial intelligence (AI) has had a huge impact in many areas, including medical diagnosis, speech recognition, robotics, web search, advertising, and scheduling.  This course focuses on the foundational concepts that drive these applications.  In short, AI is the mathematics of making good decisions given incomplete information (hence the need for probability) and limited computation (hence the need for algorithms).  Specific topics include search, constraint satisfaction, game playing, Markov decision processes, graphical models, machine learning, and logic. Prerequisites: CS 103 or CS 103B/X, CS 106B or CS 106X, CS 107, and CS 109 (algorithms, probability, and programming experience).",
                "courseTitle": "Artificial Intelligence: Principles and Techniques",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3-4",
                "semester": "Fall, Spring, Summer"
            },
            {
                "courseId": "CS 221:",
                "courseLevel": "Graduate",
                "courseMeta": "Artificial intelligence (AI) has had a huge impact in many areas, including medical diagnosis, speech recognition, robotics, web search, advertising, and scheduling.  This course focuses on the foundational concepts that drive these applications.  In short, AI is the mathematics of making good decisions given incomplete information (hence the need for probability) and limited computation (hence the need for algorithms).  Specific topics include search, constraint satisfaction, game playing, Markov decision processes, graphical models, machine learning, and logic. Prerequisites: CS 103 or CS 103B/X, CS 106B or CS 106X, CS 107, and CS 109 (algorithms, probability, and programming experience).",
                "courseTitle": "Artificial Intelligence: Principles and Techniques",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3-4",
                "semester": "Fall, Spring, Summer"
            },
            {
                "courseId": "CS 221:",
                "courseLevel": "Graduate",
                "courseMeta": "Artificial intelligence (AI) has had a huge impact in many areas, including medical diagnosis, speech recognition, robotics, web search, advertising, and scheduling.  This course focuses on the foundational concepts that drive these applications.  In short, AI is the mathematics of making good decisions given incomplete information (hence the need for probability) and limited computation (hence the need for algorithms).  Specific topics include search, constraint satisfaction, game playing, Markov decision processes, graphical models, machine learning, and logic. Prerequisites: CS 103 or CS 103B/X, CS 106B or CS 106X, CS 107, and CS 109 (algorithms, probability, and programming experience).",
                "courseTitle": "Artificial Intelligence: Principles and Techniques",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3-4",
                "semester": "Fall, Spring, Summer"
            },
            {
                "courseId": "CS 221:",
                "courseLevel": "Graduate",
                "courseMeta": "Artificial intelligence (AI) has had a huge impact in many areas, including medical diagnosis, speech recognition, robotics, web search, advertising, and scheduling.  This course focuses on the foundational concepts that drive these applications.  In short, AI is the mathematics of making good decisions given incomplete information (hence the need for probability) and limited computation (hence the need for algorithms).  Specific topics include search, constraint satisfaction, game playing, Markov decision processes, graphical models, machine learning, and logic. Prerequisites: CS 103 or CS 103B/X, CS 106B or CS 106X, CS 107, and CS 109 (algorithms, probability, and programming experience).",
                "courseTitle": "Artificial Intelligence: Principles and Techniques",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3-4",
                "semester": "Fall, Spring, Summer"
            },
            {
                "courseId": "CS 221:",
                "courseLevel": "Graduate",
                "courseMeta": "Artificial intelligence (AI) has had a huge impact in many areas, including medical diagnosis, speech recognition, robotics, web search, advertising, and scheduling.  This course focuses on the foundational concepts that drive these applications.  In short, AI is the mathematics of making good decisions given incomplete information (hence the need for probability) and limited computation (hence the need for algorithms).  Specific topics include search, constraint satisfaction, game playing, Markov decision processes, graphical models, machine learning, and logic. Prerequisites: CS 103 or CS 103B/X, CS 106B or CS 106X, CS 107, and CS 109 (algorithms, probability, and programming experience).",
                "courseTitle": "Artificial Intelligence: Principles and Techniques",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3-4",
                "semester": "Fall, Spring, Summer"
            },
            {
                "courseId": "CS 221:",
                "courseLevel": "Graduate",
                "courseMeta": "Artificial intelligence (AI) has had a huge impact in many areas, including medical diagnosis, speech recognition, robotics, web search, advertising, and scheduling.  This course focuses on the foundational concepts that drive these applications.  In short, AI is the mathematics of making good decisions given incomplete information (hence the need for probability) and limited computation (hence the need for algorithms).  Specific topics include search, constraint satisfaction, game playing, Markov decision processes, graphical models, machine learning, and logic. Prerequisites: CS 103 or CS 103B/X, CS 106B or CS 106X, CS 107, and CS 109 (algorithms, probability, and programming experience).",
                "courseTitle": "Artificial Intelligence: Principles and Techniques",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3-4",
                "semester": "Fall, Spring, Summer"
            },
            {
                "courseId": "CS 221:",
                "courseLevel": "Graduate",
                "courseMeta": "Artificial intelligence (AI) has had a huge impact in many areas, including medical diagnosis, speech recognition, robotics, web search, advertising, and scheduling.  This course focuses on the foundational concepts that drive these applications.  In short, AI is the mathematics of making good decisions given incomplete information (hence the need for probability) and limited computation (hence the need for algorithms).  Specific topics include search, constraint satisfaction, game playing, Markov decision processes, graphical models, machine learning, and logic. Prerequisites: CS 103 or CS 103B/X, CS 106B or CS 106X, CS 107, and CS 109 (algorithms, probability, and programming experience).",
                "courseTitle": "Artificial Intelligence: Principles and Techniques",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3-4",
                "semester": "Fall, Spring, Summer"
            },
            {
                "courseId": "CS 221:",
                "courseLevel": "Graduate",
                "courseMeta": "Artificial intelligence (AI) has had a huge impact in many areas, including medical diagnosis, speech recognition, robotics, web search, advertising, and scheduling.  This course focuses on the foundational concepts that drive these applications.  In short, AI is the mathematics of making good decisions given incomplete information (hence the need for probability) and limited computation (hence the need for algorithms).  Specific topics include search, constraint satisfaction, game playing, Markov decision processes, graphical models, machine learning, and logic. Prerequisites: CS 103 or CS 103B/X, CS 106B or CS 106X, CS 107, and CS 109 (algorithms, probability, and programming experience).",
                "courseTitle": "Artificial Intelligence: Principles and Techniques",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3-4",
                "semester": "Fall, Spring, Summer"
            },
            {
                "courseId": "CS 221:",
                "courseLevel": "Graduate",
                "courseMeta": "Artificial intelligence (AI) has had a huge impact in many areas, including medical diagnosis, speech recognition, robotics, web search, advertising, and scheduling.  This course focuses on the foundational concepts that drive these applications.  In short, AI is the mathematics of making good decisions given incomplete information (hence the need for probability) and limited computation (hence the need for algorithms).  Specific topics include search, constraint satisfaction, game playing, Markov decision processes, graphical models, machine learning, and logic. Prerequisites: CS 103 or CS 103B/X, CS 106B or CS 106X, CS 107, and CS 109 (algorithms, probability, and programming experience).",
                "courseTitle": "Artificial Intelligence: Principles and Techniques",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3-4",
                "semester": "Fall, Spring, Summer"
            },
            {
                "courseId": "CS 221:",
                "courseLevel": "Graduate",
                "courseMeta": "Artificial intelligence (AI) has had a huge impact in many areas, including medical diagnosis, speech recognition, robotics, web search, advertising, and scheduling.  This course focuses on the foundational concepts that drive these applications.  In short, AI is the mathematics of making good decisions given incomplete information (hence the need for probability) and limited computation (hence the need for algorithms).  Specific topics include search, constraint satisfaction, game playing, Markov decision processes, graphical models, machine learning, and logic. Prerequisites: CS 103 or CS 103B/X, CS 106B or CS 106X, CS 107, and CS 109 (algorithms, probability, and programming experience).",
                "courseTitle": "Artificial Intelligence: Principles and Techniques",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3-4",
                "semester": "Fall, Spring, Summer"
            },
            {
                "courseId": "CS 221:",
                "courseLevel": "Graduate",
                "courseMeta": "Artificial intelligence (AI) has had a huge impact in many areas, including medical diagnosis, speech recognition, robotics, web search, advertising, and scheduling.  This course focuses on the foundational concepts that drive these applications.  In short, AI is the mathematics of making good decisions given incomplete information (hence the need for probability) and limited computation (hence the need for algorithms).  Specific topics include search, constraint satisfaction, game playing, Markov decision processes, graphical models, machine learning, and logic. Prerequisites: CS 103 or CS 103B/X, CS 106B or CS 106X, CS 107, and CS 109 (algorithms, probability, and programming experience).",
                "courseTitle": "Artificial Intelligence: Principles and Techniques",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3-4",
                "semester": "Fall, Spring, Summer"
            },
            {
                "courseId": "CS 221:",
                "courseLevel": "Graduate",
                "courseMeta": "Artificial intelligence (AI) has had a huge impact in many areas, including medical diagnosis, speech recognition, robotics, web search, advertising, and scheduling.  This course focuses on the foundational concepts that drive these applications.  In short, AI is the mathematics of making good decisions given incomplete information (hence the need for probability) and limited computation (hence the need for algorithms).  Specific topics include search, constraint satisfaction, game playing, Markov decision processes, graphical models, machine learning, and logic. Prerequisites: CS 103 or CS 103B/X, CS 106B or CS 106X, CS 107, and CS 109 (algorithms, probability, and programming experience).",
                "courseTitle": "Artificial Intelligence: Principles and Techniques",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3-4",
                "semester": "Fall, Spring, Summer"
            },
            {
                "courseId": "CS 221:",
                "courseLevel": "Graduate",
                "courseMeta": "Artificial intelligence (AI) has had a huge impact in many areas, including medical diagnosis, speech recognition, robotics, web search, advertising, and scheduling.  This course focuses on the foundational concepts that drive these applications.  In short, AI is the mathematics of making good decisions given incomplete information (hence the need for probability) and limited computation (hence the need for algorithms).  Specific topics include search, constraint satisfaction, game playing, Markov decision processes, graphical models, machine learning, and logic. Prerequisites: CS 103 or CS 103B/X, CS 106B or CS 106X, CS 107, and CS 109 (algorithms, probability, and programming experience).",
                "courseTitle": "Artificial Intelligence: Principles and Techniques",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3-4",
                "semester": "Fall, Spring, Summer"
            }
        ]
    },
    "Sachin Katti": {
        "corpus": {
            "DBLP": "https://dblp.uni-trier.de/pers/hd/k/Katti:Sachin",
            "Google Scholar": "https://scholar.google.com/citations?user=cc4Qi_IAAAAJ&hl=en&oi=ao",
            "domain": "",
            "home": "http://stanford.edu/~skatti"
        },
        "courses": [
            {
                "courseId": "CS 244:",
                "courseLevel": "Graduate",
                "courseMeta": "Classic papers, new ideas, and research papers in networking. Architectural principles: why the Internet was designed this way? Congestion control. Wireless and mobility; software-defined networks (SDN) and network virtualization; content distribution networks; packet switching; data-center networks. Prerequisite: 144 or equivalent.",
                "courseTitle": "Advanced Topics in Networking",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3-4",
                "semester": "Spring"
            },
            {
                "courseId": "CS 244:",
                "courseLevel": "Graduate",
                "courseMeta": "Classic papers, new ideas, and research papers in networking. Architectural principles: why the Internet was designed this way? Congestion control. Wireless and mobility; software-defined networks (SDN) and network virtualization; content distribution networks; packet switching; data-center networks. Prerequisite: 144 or equivalent.",
                "courseTitle": "Advanced Topics in Networking",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3-4",
                "semester": "Spring"
            },
            {
                "courseId": "CS 244:",
                "courseLevel": "Graduate",
                "courseMeta": "Classic papers, new ideas, and research papers in networking. Architectural principles: why the Internet was designed this way? Congestion control. Wireless and mobility; software-defined networks (SDN) and network virtualization; content distribution networks; packet switching; data-center networks. Prerequisite: 144 or equivalent.",
                "courseTitle": "Advanced Topics in Networking",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3-4",
                "semester": "Spring"
            },
            {
                "courseId": "CS 244:",
                "courseLevel": "Graduate",
                "courseMeta": "Classic papers, new ideas, and research papers in networking. Architectural principles: why the Internet was designed this way? Congestion control. Wireless and mobility; software-defined networks (SDN) and network virtualization; content distribution networks; packet switching; data-center networks. Prerequisite: 144 or equivalent.",
                "courseTitle": "Advanced Topics in Networking",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3-4",
                "semester": "Spring"
            },
            {
                "courseId": "CS 244:",
                "courseLevel": "Graduate",
                "courseMeta": "Classic papers, new ideas, and research papers in networking. Architectural principles: why the Internet was designed this way? Congestion control. Wireless and mobility; software-defined networks (SDN) and network virtualization; content distribution networks; packet switching; data-center networks. Prerequisite: 144 or equivalent.",
                "courseTitle": "Advanced Topics in Networking",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3-4",
                "semester": "Spring"
            },
            {
                "courseId": "CS 244:",
                "courseLevel": "Graduate",
                "courseMeta": "Classic papers, new ideas, and research papers in networking. Architectural principles: why the Internet was designed this way? Congestion control. Wireless and mobility; software-defined networks (SDN) and network virtualization; content distribution networks; packet switching; data-center networks. Prerequisite: 144 or equivalent.",
                "courseTitle": "Advanced Topics in Networking",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3-4",
                "semester": "Spring"
            },
            {
                "courseId": "CS 244:",
                "courseLevel": "Graduate",
                "courseMeta": "Classic papers, new ideas, and research papers in networking. Architectural principles: why the Internet was designed this way? Congestion control. Wireless and mobility; software-defined networks (SDN) and network virtualization; content distribution networks; packet switching; data-center networks. Prerequisite: 144 or equivalent.",
                "courseTitle": "Advanced Topics in Networking",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3-4",
                "semester": "Spring"
            },
            {
                "courseId": "CS 244:",
                "courseLevel": "Graduate",
                "courseMeta": "Classic papers, new ideas, and research papers in networking. Architectural principles: why the Internet was designed this way? Congestion control. Wireless and mobility; software-defined networks (SDN) and network virtualization; content distribution networks; packet switching; data-center networks. Prerequisite: 144 or equivalent.",
                "courseTitle": "Advanced Topics in Networking",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3-4",
                "semester": "Spring"
            },
            {
                "courseId": "CS 244:",
                "courseLevel": "Graduate",
                "courseMeta": "Classic papers, new ideas, and research papers in networking. Architectural principles: why the Internet was designed this way? Congestion control. Wireless and mobility; software-defined networks (SDN) and network virtualization; content distribution networks; packet switching; data-center networks. Prerequisite: 144 or equivalent.",
                "courseTitle": "Advanced Topics in Networking",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3-4",
                "semester": "Spring"
            },
            {
                "courseId": "CS 244:",
                "courseLevel": "Graduate",
                "courseMeta": "Classic papers, new ideas, and research papers in networking. Architectural principles: why the Internet was designed this way? Congestion control. Wireless and mobility; software-defined networks (SDN) and network virtualization; content distribution networks; packet switching; data-center networks. Prerequisite: 144 or equivalent.",
                "courseTitle": "Advanced Topics in Networking",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3-4",
                "semester": "Spring"
            },
            {
                "courseId": "CS 244:",
                "courseLevel": "Graduate",
                "courseMeta": "Classic papers, new ideas, and research papers in networking. Architectural principles: why the Internet was designed this way? Congestion control. Wireless and mobility; software-defined networks (SDN) and network virtualization; content distribution networks; packet switching; data-center networks. Prerequisite: 144 or equivalent.",
                "courseTitle": "Advanced Topics in Networking",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3-4",
                "semester": "Spring"
            },
            {
                "courseId": "CS 244:",
                "courseLevel": "Graduate",
                "courseMeta": "Classic papers, new ideas, and research papers in networking. Architectural principles: why the Internet was designed this way? Congestion control. Wireless and mobility; software-defined networks (SDN) and network virtualization; content distribution networks; packet switching; data-center networks. Prerequisite: 144 or equivalent.",
                "courseTitle": "Advanced Topics in Networking",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3-4",
                "semester": "Spring"
            },
            {
                "courseId": "CS 244:",
                "courseLevel": "Graduate",
                "courseMeta": "Classic papers, new ideas, and research papers in networking. Architectural principles: why the Internet was designed this way? Congestion control. Wireless and mobility; software-defined networks (SDN) and network virtualization; content distribution networks; packet switching; data-center networks. Prerequisite: 144 or equivalent.",
                "courseTitle": "Advanced Topics in Networking",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3-4",
                "semester": "Spring"
            },
            {
                "courseId": "CS 244:",
                "courseLevel": "Graduate",
                "courseMeta": "Classic papers, new ideas, and research papers in networking. Architectural principles: why the Internet was designed this way? Congestion control. Wireless and mobility; software-defined networks (SDN) and network virtualization; content distribution networks; packet switching; data-center networks. Prerequisite: 144 or equivalent.",
                "courseTitle": "Advanced Topics in Networking",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3-4",
                "semester": "Spring"
            },
            {
                "courseId": "CS 244:",
                "courseLevel": "Graduate",
                "courseMeta": "Classic papers, new ideas, and research papers in networking. Architectural principles: why the Internet was designed this way? Congestion control. Wireless and mobility; software-defined networks (SDN) and network virtualization; content distribution networks; packet switching; data-center networks. Prerequisite: 144 or equivalent.",
                "courseTitle": "Advanced Topics in Networking",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3-4",
                "semester": "Spring"
            },
            {
                "courseId": "CS 244:",
                "courseLevel": "Graduate",
                "courseMeta": "Classic papers, new ideas, and research papers in networking. Architectural principles: why the Internet was designed this way? Congestion control. Wireless and mobility; software-defined networks (SDN) and network virtualization; content distribution networks; packet switching; data-center networks. Prerequisite: 144 or equivalent.",
                "courseTitle": "Advanced Topics in Networking",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3-4",
                "semester": "Spring"
            },
            {
                "courseId": "CS 244:",
                "courseLevel": "Graduate",
                "courseMeta": "Classic papers, new ideas, and research papers in networking. Architectural principles: why the Internet was designed this way? Congestion control. Wireless and mobility; software-defined networks (SDN) and network virtualization; content distribution networks; packet switching; data-center networks. Prerequisite: 144 or equivalent.",
                "courseTitle": "Advanced Topics in Networking",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3-4",
                "semester": "Spring"
            },
            {
                "courseId": "CS 244:",
                "courseLevel": "Graduate",
                "courseMeta": "Classic papers, new ideas, and research papers in networking. Architectural principles: why the Internet was designed this way? Congestion control. Wireless and mobility; software-defined networks (SDN) and network virtualization; content distribution networks; packet switching; data-center networks. Prerequisite: 144 or equivalent.",
                "courseTitle": "Advanced Topics in Networking",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3-4",
                "semester": "Spring"
            },
            {
                "courseId": "CS 244:",
                "courseLevel": "Graduate",
                "courseMeta": "Classic papers, new ideas, and research papers in networking. Architectural principles: why the Internet was designed this way? Congestion control. Wireless and mobility; software-defined networks (SDN) and network virtualization; content distribution networks; packet switching; data-center networks. Prerequisite: 144 or equivalent.",
                "courseTitle": "Advanced Topics in Networking",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3-4",
                "semester": "Spring"
            },
            {
                "courseId": "CS 244:",
                "courseLevel": "Graduate",
                "courseMeta": "Classic papers, new ideas, and research papers in networking. Architectural principles: why the Internet was designed this way? Congestion control. Wireless and mobility; software-defined networks (SDN) and network virtualization; content distribution networks; packet switching; data-center networks. Prerequisite: 144 or equivalent.",
                "courseTitle": "Advanced Topics in Networking",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3-4",
                "semester": "Spring"
            },
            {
                "courseId": "CS 244:",
                "courseLevel": "Graduate",
                "courseMeta": "Classic papers, new ideas, and research papers in networking. Architectural principles: why the Internet was designed this way? Congestion control. Wireless and mobility; software-defined networks (SDN) and network virtualization; content distribution networks; packet switching; data-center networks. Prerequisite: 144 or equivalent.",
                "courseTitle": "Advanced Topics in Networking",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3-4",
                "semester": "Spring"
            },
            {
                "courseId": "CS 244:",
                "courseLevel": "Graduate",
                "courseMeta": "Classic papers, new ideas, and research papers in networking. Architectural principles: why the Internet was designed this way? Congestion control. Wireless and mobility; software-defined networks (SDN) and network virtualization; content distribution networks; packet switching; data-center networks. Prerequisite: 144 or equivalent.",
                "courseTitle": "Advanced Topics in Networking",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3-4",
                "semester": "Spring"
            },
            {
                "courseId": "CS 244:",
                "courseLevel": "Graduate",
                "courseMeta": "Classic papers, new ideas, and research papers in networking. Architectural principles: why the Internet was designed this way? Congestion control. Wireless and mobility; software-defined networks (SDN) and network virtualization; content distribution networks; packet switching; data-center networks. Prerequisite: 144 or equivalent.",
                "courseTitle": "Advanced Topics in Networking",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3-4",
                "semester": "Spring"
            }
        ]
    },
    "Serafim Batzoglou": {
        "corpus": {
            "DBLP": "https://dblp.uni-trier.de/pers/hd/b/Batzoglou:Serafim",
            "Google Scholar": "https://scholar.google.com/citations?user=POWKkqEAAAAJ&hl=en&oi=ao",
            "domain": "",
            "home": "http://www.serafimb.org/people.html"
        },
        "courses": [
            {
                "courseId": "BIOE 391:",
                "courseLevel": "Graduate",
                "courseMeta": "May be used to prepare for research during a later quarter in 392. Faculty sponsor required. May be repeated for credit.",
                "courseTitle": "Directed Study",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1-6",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "BIOE 391:",
                "courseLevel": "Graduate",
                "courseMeta": "May be used to prepare for research during a later quarter in 392. Faculty sponsor required. May be repeated for credit.",
                "courseTitle": "Directed Study",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1-6",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "BIOE 391:",
                "courseLevel": "Graduate",
                "courseMeta": "May be used to prepare for research during a later quarter in 392. Faculty sponsor required. May be repeated for credit.",
                "courseTitle": "Directed Study",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1-6",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "BIOE 391:",
                "courseLevel": "Graduate",
                "courseMeta": "May be used to prepare for research during a later quarter in 392. Faculty sponsor required. May be repeated for credit.",
                "courseTitle": "Directed Study",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1-6",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "BIOE 391:",
                "courseLevel": "Graduate",
                "courseMeta": "May be used to prepare for research during a later quarter in 392. Faculty sponsor required. May be repeated for credit.",
                "courseTitle": "Directed Study",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1-6",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "BIOE 391:",
                "courseLevel": "Graduate",
                "courseMeta": "May be used to prepare for research during a later quarter in 392. Faculty sponsor required. May be repeated for credit.",
                "courseTitle": "Directed Study",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1-6",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "BIOE 391:",
                "courseLevel": "Graduate",
                "courseMeta": "May be used to prepare for research during a later quarter in 392. Faculty sponsor required. May be repeated for credit.",
                "courseTitle": "Directed Study",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1-6",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "BIOE 391:",
                "courseLevel": "Graduate",
                "courseMeta": "May be used to prepare for research during a later quarter in 392. Faculty sponsor required. May be repeated for credit.",
                "courseTitle": "Directed Study",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1-6",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "BIOE 391:",
                "courseLevel": "Graduate",
                "courseMeta": "May be used to prepare for research during a later quarter in 392. Faculty sponsor required. May be repeated for credit.",
                "courseTitle": "Directed Study",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1-6",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "BIOE 391:",
                "courseLevel": "Graduate",
                "courseMeta": "May be used to prepare for research during a later quarter in 392. Faculty sponsor required. May be repeated for credit.",
                "courseTitle": "Directed Study",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1-6",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "BIOE 391:",
                "courseLevel": "Graduate",
                "courseMeta": "May be used to prepare for research during a later quarter in 392. Faculty sponsor required. May be repeated for credit.",
                "courseTitle": "Directed Study",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1-6",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "BIOE 391:",
                "courseLevel": "Graduate",
                "courseMeta": "May be used to prepare for research during a later quarter in 392. Faculty sponsor required. May be repeated for credit.",
                "courseTitle": "Directed Study",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1-6",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "BIOE 391:",
                "courseLevel": "Graduate",
                "courseMeta": "May be used to prepare for research during a later quarter in 392. Faculty sponsor required. May be repeated for credit.",
                "courseTitle": "Directed Study",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1-6",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "BIOE 391:",
                "courseLevel": "Graduate",
                "courseMeta": "May be used to prepare for research during a later quarter in 392. Faculty sponsor required. May be repeated for credit.",
                "courseTitle": "Directed Study",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1-6",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "BIOE 391:",
                "courseLevel": "Graduate",
                "courseMeta": "May be used to prepare for research during a later quarter in 392. Faculty sponsor required. May be repeated for credit.",
                "courseTitle": "Directed Study",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1-6",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "BIOE 391:",
                "courseLevel": "Graduate",
                "courseMeta": "May be used to prepare for research during a later quarter in 392. Faculty sponsor required. May be repeated for credit.",
                "courseTitle": "Directed Study",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1-6",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "BIOE 391:",
                "courseLevel": "Graduate",
                "courseMeta": "May be used to prepare for research during a later quarter in 392. Faculty sponsor required. May be repeated for credit.",
                "courseTitle": "Directed Study",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1-6",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "BIOE 391:",
                "courseLevel": "Graduate",
                "courseMeta": "May be used to prepare for research during a later quarter in 392. Faculty sponsor required. May be repeated for credit.",
                "courseTitle": "Directed Study",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1-6",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "BIOE 391:",
                "courseLevel": "Graduate",
                "courseMeta": "May be used to prepare for research during a later quarter in 392. Faculty sponsor required. May be repeated for credit.",
                "courseTitle": "Directed Study",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1-6",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "BIOE 391:",
                "courseLevel": "Graduate",
                "courseMeta": "May be used to prepare for research during a later quarter in 392. Faculty sponsor required. May be repeated for credit.",
                "courseTitle": "Directed Study",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1-6",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "BIOE 391:",
                "courseLevel": "Graduate",
                "courseMeta": "May be used to prepare for research during a later quarter in 392. Faculty sponsor required. May be repeated for credit.",
                "courseTitle": "Directed Study",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1-6",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "BIOE 391:",
                "courseLevel": "Graduate",
                "courseMeta": "May be used to prepare for research during a later quarter in 392. Faculty sponsor required. May be repeated for credit.",
                "courseTitle": "Directed Study",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1-6",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "BIOE 391:",
                "courseLevel": "Graduate",
                "courseMeta": "May be used to prepare for research during a later quarter in 392. Faculty sponsor required. May be repeated for credit.",
                "courseTitle": "Directed Study",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1-6",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "BIOE 391:",
                "courseLevel": "Graduate",
                "courseMeta": "May be used to prepare for research during a later quarter in 392. Faculty sponsor required. May be repeated for credit.",
                "courseTitle": "Directed Study",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1-6",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "BIOE 391:",
                "courseLevel": "Graduate",
                "courseMeta": "May be used to prepare for research during a later quarter in 392. Faculty sponsor required. May be repeated for credit.",
                "courseTitle": "Directed Study",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1-6",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "BIOE 391:",
                "courseLevel": "Graduate",
                "courseMeta": "May be used to prepare for research during a later quarter in 392. Faculty sponsor required. May be repeated for credit.",
                "courseTitle": "Directed Study",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1-6",
                "semester": "Fall, Winter, Spring, Summer"
            }
        ]
    },
    "Silvio Savarese": {
        "corpus": {
            "DBLP": "https://dblp.uni-trier.de/pers/hd/s/Savarese:Silvio",
            "Google Scholar": "https://scholar.google.com/citations?user=ImpbxLsAAAAJ&hl=en&oi=ao",
            "domain": "vision",
            "home": "http://cvgl.stanford.edu/silvio"
        },
        "courses": [
            {
                "courseId": "CS 390A:",
                "courseLevel": "Graduate",
                "courseMeta": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.",
                "courseTitle": "Curricular Practical Training",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "CS 390A:",
                "courseLevel": "Graduate",
                "courseMeta": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.",
                "courseTitle": "Curricular Practical Training",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "CS 390A:",
                "courseLevel": "Graduate",
                "courseMeta": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.",
                "courseTitle": "Curricular Practical Training",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "CS 390A:",
                "courseLevel": "Graduate",
                "courseMeta": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.",
                "courseTitle": "Curricular Practical Training",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "CS 390A:",
                "courseLevel": "Graduate",
                "courseMeta": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.",
                "courseTitle": "Curricular Practical Training",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "CS 390A:",
                "courseLevel": "Graduate",
                "courseMeta": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.",
                "courseTitle": "Curricular Practical Training",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "CS 390A:",
                "courseLevel": "Graduate",
                "courseMeta": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.",
                "courseTitle": "Curricular Practical Training",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "CS 390A:",
                "courseLevel": "Graduate",
                "courseMeta": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.",
                "courseTitle": "Curricular Practical Training",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "CS 390A:",
                "courseLevel": "Graduate",
                "courseMeta": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.",
                "courseTitle": "Curricular Practical Training",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "CS 390A:",
                "courseLevel": "Graduate",
                "courseMeta": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.",
                "courseTitle": "Curricular Practical Training",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "CS 390A:",
                "courseLevel": "Graduate",
                "courseMeta": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.",
                "courseTitle": "Curricular Practical Training",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "CS 390A:",
                "courseLevel": "Graduate",
                "courseMeta": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.",
                "courseTitle": "Curricular Practical Training",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "CS 390A:",
                "courseLevel": "Graduate",
                "courseMeta": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.",
                "courseTitle": "Curricular Practical Training",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "CS 390A:",
                "courseLevel": "Graduate",
                "courseMeta": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.",
                "courseTitle": "Curricular Practical Training",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Fall, Winter, Spring, Summer"
            }
        ]
    },
    "Stefano Ermon": {
        "corpus": {
            "DBLP": "https://dblp.uni-trier.de/pers/hd/e/Ermon:Stefano",
            "domain": "ml,vision",
            "home": "https://cs.stanford.edu/~ermon"
        },
        "courses": [
            {
                "courseId": "CS 228:",
                "courseLevel": "Graduate",
                "courseMeta": "Probabilistic graphical modeling languages for representing complex domains, algorithms for reasoning using these representations, and learning these representations from data. Topics include: Bayesian and Markov networks, extensions to temporal modeling such as hidden Markov models and dynamic Bayesian networks, exact and approximate probabilistic inference algorithms, and methods for learning models from data. Also included are sample applications to various domains including speech recognition, biological modeling and discovery, medical diagnosis, message encoding, vision, and robot motion planning. Prerequisites: basic probability theory and algorithm design and analysis.",
                "courseTitle": "Probabilistic Graphical Models: Principles and Techniques",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3-4",
                "semester": "Winter"
            },
            {
                "courseId": "CS 228:",
                "courseLevel": "Graduate",
                "courseMeta": "Probabilistic graphical modeling languages for representing complex domains, algorithms for reasoning using these representations, and learning these representations from data. Topics include: Bayesian and Markov networks, extensions to temporal modeling such as hidden Markov models and dynamic Bayesian networks, exact and approximate probabilistic inference algorithms, and methods for learning models from data. Also included are sample applications to various domains including speech recognition, biological modeling and discovery, medical diagnosis, message encoding, vision, and robot motion planning. Prerequisites: basic probability theory and algorithm design and analysis.",
                "courseTitle": "Probabilistic Graphical Models: Principles and Techniques",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3-4",
                "semester": "Winter"
            },
            {
                "courseId": "CS 228:",
                "courseLevel": "Graduate",
                "courseMeta": "Probabilistic graphical modeling languages for representing complex domains, algorithms for reasoning using these representations, and learning these representations from data. Topics include: Bayesian and Markov networks, extensions to temporal modeling such as hidden Markov models and dynamic Bayesian networks, exact and approximate probabilistic inference algorithms, and methods for learning models from data. Also included are sample applications to various domains including speech recognition, biological modeling and discovery, medical diagnosis, message encoding, vision, and robot motion planning. Prerequisites: basic probability theory and algorithm design and analysis.",
                "courseTitle": "Probabilistic Graphical Models: Principles and Techniques",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3-4",
                "semester": "Winter"
            },
            {
                "courseId": "CS 228:",
                "courseLevel": "Graduate",
                "courseMeta": "Probabilistic graphical modeling languages for representing complex domains, algorithms for reasoning using these representations, and learning these representations from data. Topics include: Bayesian and Markov networks, extensions to temporal modeling such as hidden Markov models and dynamic Bayesian networks, exact and approximate probabilistic inference algorithms, and methods for learning models from data. Also included are sample applications to various domains including speech recognition, biological modeling and discovery, medical diagnosis, message encoding, vision, and robot motion planning. Prerequisites: basic probability theory and algorithm design and analysis.",
                "courseTitle": "Probabilistic Graphical Models: Principles and Techniques",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3-4",
                "semester": "Winter"
            },
            {
                "courseId": "CS 228:",
                "courseLevel": "Graduate",
                "courseMeta": "Probabilistic graphical modeling languages for representing complex domains, algorithms for reasoning using these representations, and learning these representations from data. Topics include: Bayesian and Markov networks, extensions to temporal modeling such as hidden Markov models and dynamic Bayesian networks, exact and approximate probabilistic inference algorithms, and methods for learning models from data. Also included are sample applications to various domains including speech recognition, biological modeling and discovery, medical diagnosis, message encoding, vision, and robot motion planning. Prerequisites: basic probability theory and algorithm design and analysis.",
                "courseTitle": "Probabilistic Graphical Models: Principles and Techniques",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3-4",
                "semester": "Winter"
            },
            {
                "courseId": "CS 228:",
                "courseLevel": "Graduate",
                "courseMeta": "Probabilistic graphical modeling languages for representing complex domains, algorithms for reasoning using these representations, and learning these representations from data. Topics include: Bayesian and Markov networks, extensions to temporal modeling such as hidden Markov models and dynamic Bayesian networks, exact and approximate probabilistic inference algorithms, and methods for learning models from data. Also included are sample applications to various domains including speech recognition, biological modeling and discovery, medical diagnosis, message encoding, vision, and robot motion planning. Prerequisites: basic probability theory and algorithm design and analysis.",
                "courseTitle": "Probabilistic Graphical Models: Principles and Techniques",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3-4",
                "semester": "Winter"
            },
            {
                "courseId": "CS 228:",
                "courseLevel": "Graduate",
                "courseMeta": "Probabilistic graphical modeling languages for representing complex domains, algorithms for reasoning using these representations, and learning these representations from data. Topics include: Bayesian and Markov networks, extensions to temporal modeling such as hidden Markov models and dynamic Bayesian networks, exact and approximate probabilistic inference algorithms, and methods for learning models from data. Also included are sample applications to various domains including speech recognition, biological modeling and discovery, medical diagnosis, message encoding, vision, and robot motion planning. Prerequisites: basic probability theory and algorithm design and analysis.",
                "courseTitle": "Probabilistic Graphical Models: Principles and Techniques",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3-4",
                "semester": "Winter"
            },
            {
                "courseId": "CS 228:",
                "courseLevel": "Graduate",
                "courseMeta": "Probabilistic graphical modeling languages for representing complex domains, algorithms for reasoning using these representations, and learning these representations from data. Topics include: Bayesian and Markov networks, extensions to temporal modeling such as hidden Markov models and dynamic Bayesian networks, exact and approximate probabilistic inference algorithms, and methods for learning models from data. Also included are sample applications to various domains including speech recognition, biological modeling and discovery, medical diagnosis, message encoding, vision, and robot motion planning. Prerequisites: basic probability theory and algorithm design and analysis.",
                "courseTitle": "Probabilistic Graphical Models: Principles and Techniques",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3-4",
                "semester": "Winter"
            },
            {
                "courseId": "CS 228:",
                "courseLevel": "Graduate",
                "courseMeta": "Probabilistic graphical modeling languages for representing complex domains, algorithms for reasoning using these representations, and learning these representations from data. Topics include: Bayesian and Markov networks, extensions to temporal modeling such as hidden Markov models and dynamic Bayesian networks, exact and approximate probabilistic inference algorithms, and methods for learning models from data. Also included are sample applications to various domains including speech recognition, biological modeling and discovery, medical diagnosis, message encoding, vision, and robot motion planning. Prerequisites: basic probability theory and algorithm design and analysis.",
                "courseTitle": "Probabilistic Graphical Models: Principles and Techniques",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3-4",
                "semester": "Winter"
            },
            {
                "courseId": "CS 228:",
                "courseLevel": "Graduate",
                "courseMeta": "Probabilistic graphical modeling languages for representing complex domains, algorithms for reasoning using these representations, and learning these representations from data. Topics include: Bayesian and Markov networks, extensions to temporal modeling such as hidden Markov models and dynamic Bayesian networks, exact and approximate probabilistic inference algorithms, and methods for learning models from data. Also included are sample applications to various domains including speech recognition, biological modeling and discovery, medical diagnosis, message encoding, vision, and robot motion planning. Prerequisites: basic probability theory and algorithm design and analysis.",
                "courseTitle": "Probabilistic Graphical Models: Principles and Techniques",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3-4",
                "semester": "Winter"
            },
            {
                "courseId": "CS 228:",
                "courseLevel": "Graduate",
                "courseMeta": "Probabilistic graphical modeling languages for representing complex domains, algorithms for reasoning using these representations, and learning these representations from data. Topics include: Bayesian and Markov networks, extensions to temporal modeling such as hidden Markov models and dynamic Bayesian networks, exact and approximate probabilistic inference algorithms, and methods for learning models from data. Also included are sample applications to various domains including speech recognition, biological modeling and discovery, medical diagnosis, message encoding, vision, and robot motion planning. Prerequisites: basic probability theory and algorithm design and analysis.",
                "courseTitle": "Probabilistic Graphical Models: Principles and Techniques",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3-4",
                "semester": "Winter"
            },
            {
                "courseId": "CS 228:",
                "courseLevel": "Graduate",
                "courseMeta": "Probabilistic graphical modeling languages for representing complex domains, algorithms for reasoning using these representations, and learning these representations from data. Topics include: Bayesian and Markov networks, extensions to temporal modeling such as hidden Markov models and dynamic Bayesian networks, exact and approximate probabilistic inference algorithms, and methods for learning models from data. Also included are sample applications to various domains including speech recognition, biological modeling and discovery, medical diagnosis, message encoding, vision, and robot motion planning. Prerequisites: basic probability theory and algorithm design and analysis.",
                "courseTitle": "Probabilistic Graphical Models: Principles and Techniques",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3-4",
                "semester": "Winter"
            },
            {
                "courseId": "CS 228:",
                "courseLevel": "Graduate",
                "courseMeta": "Probabilistic graphical modeling languages for representing complex domains, algorithms for reasoning using these representations, and learning these representations from data. Topics include: Bayesian and Markov networks, extensions to temporal modeling such as hidden Markov models and dynamic Bayesian networks, exact and approximate probabilistic inference algorithms, and methods for learning models from data. Also included are sample applications to various domains including speech recognition, biological modeling and discovery, medical diagnosis, message encoding, vision, and robot motion planning. Prerequisites: basic probability theory and algorithm design and analysis.",
                "courseTitle": "Probabilistic Graphical Models: Principles and Techniques",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3-4",
                "semester": "Winter"
            },
            {
                "courseId": "CS 228:",
                "courseLevel": "Graduate",
                "courseMeta": "Probabilistic graphical modeling languages for representing complex domains, algorithms for reasoning using these representations, and learning these representations from data. Topics include: Bayesian and Markov networks, extensions to temporal modeling such as hidden Markov models and dynamic Bayesian networks, exact and approximate probabilistic inference algorithms, and methods for learning models from data. Also included are sample applications to various domains including speech recognition, biological modeling and discovery, medical diagnosis, message encoding, vision, and robot motion planning. Prerequisites: basic probability theory and algorithm design and analysis.",
                "courseTitle": "Probabilistic Graphical Models: Principles and Techniques",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3-4",
                "semester": "Winter"
            },
            {
                "courseId": "CS 228:",
                "courseLevel": "Graduate",
                "courseMeta": "Probabilistic graphical modeling languages for representing complex domains, algorithms for reasoning using these representations, and learning these representations from data. Topics include: Bayesian and Markov networks, extensions to temporal modeling such as hidden Markov models and dynamic Bayesian networks, exact and approximate probabilistic inference algorithms, and methods for learning models from data. Also included are sample applications to various domains including speech recognition, biological modeling and discovery, medical diagnosis, message encoding, vision, and robot motion planning. Prerequisites: basic probability theory and algorithm design and analysis.",
                "courseTitle": "Probabilistic Graphical Models: Principles and Techniques",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3-4",
                "semester": "Winter"
            },
            {
                "courseId": "CS 228:",
                "courseLevel": "Graduate",
                "courseMeta": "Probabilistic graphical modeling languages for representing complex domains, algorithms for reasoning using these representations, and learning these representations from data. Topics include: Bayesian and Markov networks, extensions to temporal modeling such as hidden Markov models and dynamic Bayesian networks, exact and approximate probabilistic inference algorithms, and methods for learning models from data. Also included are sample applications to various domains including speech recognition, biological modeling and discovery, medical diagnosis, message encoding, vision, and robot motion planning. Prerequisites: basic probability theory and algorithm design and analysis.",
                "courseTitle": "Probabilistic Graphical Models: Principles and Techniques",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3-4",
                "semester": "Winter"
            },
            {
                "courseId": "CS 228:",
                "courseLevel": "Graduate",
                "courseMeta": "Probabilistic graphical modeling languages for representing complex domains, algorithms for reasoning using these representations, and learning these representations from data. Topics include: Bayesian and Markov networks, extensions to temporal modeling such as hidden Markov models and dynamic Bayesian networks, exact and approximate probabilistic inference algorithms, and methods for learning models from data. Also included are sample applications to various domains including speech recognition, biological modeling and discovery, medical diagnosis, message encoding, vision, and robot motion planning. Prerequisites: basic probability theory and algorithm design and analysis.",
                "courseTitle": "Probabilistic Graphical Models: Principles and Techniques",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3-4",
                "semester": "Winter"
            }
        ]
    },
    "Tengyu Ma": {
        "corpus": {
            "DBLP": "https://dblp.uni-trier.de/pers/hd/m/Ma:Tengyu",
            "Google Scholar": "https://scholar.google.com/citations?user=i38QlUwAAAAJ&hl=en&oi=ao",
            "domain": "ml,ai",
            "home": "http://ai.stanford.edu/~tengyuma"
        },
        "courses": [
            {
                "courseId": "CS 229:",
                "courseLevel": "Graduate",
                "courseMeta": "Topics: statistical pattern recognition, linear and non-linear regression, non-parametric methods, exponential family, GLMs, support vector machines, kernel methods, model/feature selection, learning theory, VC dimension, clustering, density estimation, EM, dimensionality reduction, ICA, PCA, reinforcement learning and adaptive control, Markov decision processes, approximate dynamic programming, and policy search. Prerequisites: linear algebra, and basic probability and statistics.",
                "courseTitle": "Machine Learning (STATS 229)",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3-4",
                "semester": "Fall, Spring, Summer"
            },
            {
                "courseId": "CS 229:",
                "courseLevel": "Graduate",
                "courseMeta": "Topics: statistical pattern recognition, linear and non-linear regression, non-parametric methods, exponential family, GLMs, support vector machines, kernel methods, model/feature selection, learning theory, VC dimension, clustering, density estimation, EM, dimensionality reduction, ICA, PCA, reinforcement learning and adaptive control, Markov decision processes, approximate dynamic programming, and policy search. Prerequisites: linear algebra, and basic probability and statistics.",
                "courseTitle": "Machine Learning (STATS 229)",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3-4",
                "semester": "Fall, Spring, Summer"
            },
            {
                "courseId": "CS 229:",
                "courseLevel": "Graduate",
                "courseMeta": "Topics: statistical pattern recognition, linear and non-linear regression, non-parametric methods, exponential family, GLMs, support vector machines, kernel methods, model/feature selection, learning theory, VC dimension, clustering, density estimation, EM, dimensionality reduction, ICA, PCA, reinforcement learning and adaptive control, Markov decision processes, approximate dynamic programming, and policy search. Prerequisites: linear algebra, and basic probability and statistics.",
                "courseTitle": "Machine Learning (STATS 229)",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3-4",
                "semester": "Fall, Spring, Summer"
            },
            {
                "courseId": "CS 229:",
                "courseLevel": "Graduate",
                "courseMeta": "Topics: statistical pattern recognition, linear and non-linear regression, non-parametric methods, exponential family, GLMs, support vector machines, kernel methods, model/feature selection, learning theory, VC dimension, clustering, density estimation, EM, dimensionality reduction, ICA, PCA, reinforcement learning and adaptive control, Markov decision processes, approximate dynamic programming, and policy search. Prerequisites: linear algebra, and basic probability and statistics.",
                "courseTitle": "Machine Learning (STATS 229)",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3-4",
                "semester": "Fall, Spring, Summer"
            },
            {
                "courseId": "CS 229:",
                "courseLevel": "Graduate",
                "courseMeta": "Topics: statistical pattern recognition, linear and non-linear regression, non-parametric methods, exponential family, GLMs, support vector machines, kernel methods, model/feature selection, learning theory, VC dimension, clustering, density estimation, EM, dimensionality reduction, ICA, PCA, reinforcement learning and adaptive control, Markov decision processes, approximate dynamic programming, and policy search. Prerequisites: linear algebra, and basic probability and statistics.",
                "courseTitle": "Machine Learning (STATS 229)",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3-4",
                "semester": "Fall, Spring, Summer"
            },
            {
                "courseId": "CS 229:",
                "courseLevel": "Graduate",
                "courseMeta": "Topics: statistical pattern recognition, linear and non-linear regression, non-parametric methods, exponential family, GLMs, support vector machines, kernel methods, model/feature selection, learning theory, VC dimension, clustering, density estimation, EM, dimensionality reduction, ICA, PCA, reinforcement learning and adaptive control, Markov decision processes, approximate dynamic programming, and policy search. Prerequisites: linear algebra, and basic probability and statistics.",
                "courseTitle": "Machine Learning (STATS 229)",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3-4",
                "semester": "Fall, Spring, Summer"
            },
            {
                "courseId": "CS 229:",
                "courseLevel": "Graduate",
                "courseMeta": "Topics: statistical pattern recognition, linear and non-linear regression, non-parametric methods, exponential family, GLMs, support vector machines, kernel methods, model/feature selection, learning theory, VC dimension, clustering, density estimation, EM, dimensionality reduction, ICA, PCA, reinforcement learning and adaptive control, Markov decision processes, approximate dynamic programming, and policy search. Prerequisites: linear algebra, and basic probability and statistics.",
                "courseTitle": "Machine Learning (STATS 229)",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3-4",
                "semester": "Fall, Spring, Summer"
            },
            {
                "courseId": "CS 229:",
                "courseLevel": "Graduate",
                "courseMeta": "Topics: statistical pattern recognition, linear and non-linear regression, non-parametric methods, exponential family, GLMs, support vector machines, kernel methods, model/feature selection, learning theory, VC dimension, clustering, density estimation, EM, dimensionality reduction, ICA, PCA, reinforcement learning and adaptive control, Markov decision processes, approximate dynamic programming, and policy search. Prerequisites: linear algebra, and basic probability and statistics.",
                "courseTitle": "Machine Learning (STATS 229)",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3-4",
                "semester": "Fall, Spring, Summer"
            },
            {
                "courseId": "CS 229:",
                "courseLevel": "Graduate",
                "courseMeta": "Topics: statistical pattern recognition, linear and non-linear regression, non-parametric methods, exponential family, GLMs, support vector machines, kernel methods, model/feature selection, learning theory, VC dimension, clustering, density estimation, EM, dimensionality reduction, ICA, PCA, reinforcement learning and adaptive control, Markov decision processes, approximate dynamic programming, and policy search. Prerequisites: linear algebra, and basic probability and statistics.",
                "courseTitle": "Machine Learning (STATS 229)",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3-4",
                "semester": "Fall, Spring, Summer"
            },
            {
                "courseId": "CS 229:",
                "courseLevel": "Graduate",
                "courseMeta": "Topics: statistical pattern recognition, linear and non-linear regression, non-parametric methods, exponential family, GLMs, support vector machines, kernel methods, model/feature selection, learning theory, VC dimension, clustering, density estimation, EM, dimensionality reduction, ICA, PCA, reinforcement learning and adaptive control, Markov decision processes, approximate dynamic programming, and policy search. Prerequisites: linear algebra, and basic probability and statistics.",
                "courseTitle": "Machine Learning (STATS 229)",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3-4",
                "semester": "Fall, Spring, Summer"
            },
            {
                "courseId": "CS 229:",
                "courseLevel": "Graduate",
                "courseMeta": "Topics: statistical pattern recognition, linear and non-linear regression, non-parametric methods, exponential family, GLMs, support vector machines, kernel methods, model/feature selection, learning theory, VC dimension, clustering, density estimation, EM, dimensionality reduction, ICA, PCA, reinforcement learning and adaptive control, Markov decision processes, approximate dynamic programming, and policy search. Prerequisites: linear algebra, and basic probability and statistics.",
                "courseTitle": "Machine Learning (STATS 229)",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3-4",
                "semester": "Fall, Spring, Summer"
            },
            {
                "courseId": "CS 229:",
                "courseLevel": "Graduate",
                "courseMeta": "Topics: statistical pattern recognition, linear and non-linear regression, non-parametric methods, exponential family, GLMs, support vector machines, kernel methods, model/feature selection, learning theory, VC dimension, clustering, density estimation, EM, dimensionality reduction, ICA, PCA, reinforcement learning and adaptive control, Markov decision processes, approximate dynamic programming, and policy search. Prerequisites: linear algebra, and basic probability and statistics.",
                "courseTitle": "Machine Learning (STATS 229)",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3-4",
                "semester": "Fall, Spring, Summer"
            }
        ]
    },
    "Yoav Shoham": {
        "corpus": {
            "DBLP": "https://dblp.uni-trier.de/pers/hd/s/Shoham:Yoav",
            "domain": "theory",
            "home": "http://robotics.stanford.edu/users/shoham"
        },
        "courses": [
            {
                "courseId": "CS 390A:",
                "courseLevel": "Graduate",
                "courseMeta": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.",
                "courseTitle": "Curricular Practical Training",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "CS 390A:",
                "courseLevel": "Graduate",
                "courseMeta": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.",
                "courseTitle": "Curricular Practical Training",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "CS 390A:",
                "courseLevel": "Graduate",
                "courseMeta": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.",
                "courseTitle": "Curricular Practical Training",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "CS 390A:",
                "courseLevel": "Graduate",
                "courseMeta": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.",
                "courseTitle": "Curricular Practical Training",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "CS 390A:",
                "courseLevel": "Graduate",
                "courseMeta": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.",
                "courseTitle": "Curricular Practical Training",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "CS 390A:",
                "courseLevel": "Graduate",
                "courseMeta": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.",
                "courseTitle": "Curricular Practical Training",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "CS 390A:",
                "courseLevel": "Graduate",
                "courseMeta": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.",
                "courseTitle": "Curricular Practical Training",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "CS 390A:",
                "courseLevel": "Graduate",
                "courseMeta": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.",
                "courseTitle": "Curricular Practical Training",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "CS 390A:",
                "courseLevel": "Graduate",
                "courseMeta": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.",
                "courseTitle": "Curricular Practical Training",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "CS 390A:",
                "courseLevel": "Graduate",
                "courseMeta": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.",
                "courseTitle": "Curricular Practical Training",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "CS 390A:",
                "courseLevel": "Graduate",
                "courseMeta": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.",
                "courseTitle": "Curricular Practical Training",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "CS 390A:",
                "courseLevel": "Graduate",
                "courseMeta": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.",
                "courseTitle": "Curricular Practical Training",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "CS 390A:",
                "courseLevel": "Graduate",
                "courseMeta": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.",
                "courseTitle": "Curricular Practical Training",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "CS 390A:",
                "courseLevel": "Graduate",
                "courseMeta": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.",
                "courseTitle": "Curricular Practical Training",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "CS 390A:",
                "courseLevel": "Graduate",
                "courseMeta": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.",
                "courseTitle": "Curricular Practical Training",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "CS 390A:",
                "courseLevel": "Graduate",
                "courseMeta": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.",
                "courseTitle": "Curricular Practical Training",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Fall, Winter, Spring, Summer"
            },
            {
                "courseId": "CS 390A:",
                "courseLevel": "Graduate",
                "courseMeta": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.",
                "courseTitle": "Curricular Practical Training",
                "gradingMethod": "Satisfactory/No Credit",
                "numberOfUnits": "1",
                "semester": "Fall, Winter, Spring, Summer"
            }
        ]
    },
    "Zakir Durumeric": {
        "corpus": {
            "DBLP": "https://dblp.uni-trier.de/pers/hd/d/Durumeric:Zakir",
            "Google Scholar": "https://scholar.google.com/citations?user=TxPSRHIAAAAJ&hl=en&oi=ao",
            "domain": "",
            "home": "https://zakird.com"
        },
        "courses": [
            {
                "courseId": "CS 356:",
                "courseLevel": "Graduate",
                "courseMeta": "Research  seminar covering foundational work and current topics in computer and network security. Students will read and discuss published research papers as well as complete an original research project in small groups. Open to Ph.D. and masters students as well as advanced undergraduate students. Prerequisites: While the course has no official prerequisites, students need a mature understanding of software systems and networks to be successful. We strongly encourage students to first take CS155: Computer and Network Security.",
                "courseTitle": "Topics in Computer and Network Security",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3",
                "semester": "Fall"
            },
            {
                "courseId": "CS 356:",
                "courseLevel": "Graduate",
                "courseMeta": "Research  seminar covering foundational work and current topics in computer and network security. Students will read and discuss published research papers as well as complete an original research project in small groups. Open to Ph.D. and masters students as well as advanced undergraduate students. Prerequisites: While the course has no official prerequisites, students need a mature understanding of software systems and networks to be successful. We strongly encourage students to first take CS155: Computer and Network Security.",
                "courseTitle": "Topics in Computer and Network Security",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3",
                "semester": "Fall"
            },
            {
                "courseId": "CS 356:",
                "courseLevel": "Graduate",
                "courseMeta": "Research  seminar covering foundational work and current topics in computer and network security. Students will read and discuss published research papers as well as complete an original research project in small groups. Open to Ph.D. and masters students as well as advanced undergraduate students. Prerequisites: While the course has no official prerequisites, students need a mature understanding of software systems and networks to be successful. We strongly encourage students to first take CS155: Computer and Network Security.",
                "courseTitle": "Topics in Computer and Network Security",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3",
                "semester": "Fall"
            },
            {
                "courseId": "CS 356:",
                "courseLevel": "Graduate",
                "courseMeta": "Research  seminar covering foundational work and current topics in computer and network security. Students will read and discuss published research papers as well as complete an original research project in small groups. Open to Ph.D. and masters students as well as advanced undergraduate students. Prerequisites: While the course has no official prerequisites, students need a mature understanding of software systems and networks to be successful. We strongly encourage students to first take CS155: Computer and Network Security.",
                "courseTitle": "Topics in Computer and Network Security",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3",
                "semester": "Fall"
            },
            {
                "courseId": "CS 356:",
                "courseLevel": "Graduate",
                "courseMeta": "Research  seminar covering foundational work and current topics in computer and network security. Students will read and discuss published research papers as well as complete an original research project in small groups. Open to Ph.D. and masters students as well as advanced undergraduate students. Prerequisites: While the course has no official prerequisites, students need a mature understanding of software systems and networks to be successful. We strongly encourage students to first take CS155: Computer and Network Security.",
                "courseTitle": "Topics in Computer and Network Security",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3",
                "semester": "Fall"
            },
            {
                "courseId": "CS 356:",
                "courseLevel": "Graduate",
                "courseMeta": "Research  seminar covering foundational work and current topics in computer and network security. Students will read and discuss published research papers as well as complete an original research project in small groups. Open to Ph.D. and masters students as well as advanced undergraduate students. Prerequisites: While the course has no official prerequisites, students need a mature understanding of software systems and networks to be successful. We strongly encourage students to first take CS155: Computer and Network Security.",
                "courseTitle": "Topics in Computer and Network Security",
                "gradingMethod": "Letter or Credit/No Credit",
                "numberOfUnits": "3",
                "semester": "Fall"
            }
        ]
    }
}