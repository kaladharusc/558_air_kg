{"Alexander Aiken": {"courses": []}}
{"Aaron Sidford": {"courses": []}}
{"Alexander Aiken": {"courses": []}}
{"Aaron Sidford": {"courses": [{"courseTitle": "Discrete Mathematics and Algorithms (MS&E 316)", "courseNumber": "CME 305:", "courseDescription": "Topics: Basic Algebraic Graph Theory, Matroids and Minimum Spanning Trees, Submodularity and Maximum Flow, NP-Hardness, Approximation Algorithms, Randomized Algorithms, The Probabilistic Method, and Spectral Sparsification using Effective Resistances. Topics will be illustrated with applications from Distributed Computing, Machine Learning, and large-scale Optimization. Prerequisites: CS 261 is highly recommended, although not required.", "courseAttributes": "Terms: Win | Units: 3 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Discrete Mathematics and Algorithms (MS&E 316)", "courseNumber": "CME 305:", "courseDescription": "Topics: Basic Algebraic Graph Theory, Matroids and Minimum Spanning Trees, Submodularity and Maximum Flow, NP-Hardness, Approximation Algorithms, Randomized Algorithms, The Probabilistic Method, and Spectral Sparsification using Effective Resistances. Topics will be illustrated with applications from Distributed Computing, Machine Learning, and large-scale Optimization. Prerequisites: CS 261 is highly recommended, although not required.", "courseAttributes": "Terms: Win | Units: 3 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Discrete Mathematics and Algorithms (MS&E 316)", "courseNumber": "CME 305:", "courseDescription": "Topics: Basic Algebraic Graph Theory, Matroids and Minimum Spanning Trees, Submodularity and Maximum Flow, NP-Hardness, Approximation Algorithms, Randomized Algorithms, The Probabilistic Method, and Spectral Sparsification using Effective Resistances. Topics will be illustrated with applications from Distributed Computing, Machine Learning, and large-scale Optimization. Prerequisites: CS 261 is highly recommended, although not required.", "courseAttributes": "Terms: Win | Units: 3 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Discrete Mathematics and Algorithms (MS&E 316)", "courseNumber": "CME 305:", "courseDescription": "Topics: Basic Algebraic Graph Theory, Matroids and Minimum Spanning Trees, Submodularity and Maximum Flow, NP-Hardness, Approximation Algorithms, Randomized Algorithms, The Probabilistic Method, and Spectral Sparsification using Effective Resistances. Topics will be illustrated with applications from Distributed Computing, Machine Learning, and large-scale Optimization. Prerequisites: CS 261 is highly recommended, although not required.", "courseAttributes": "Terms: Win | Units: 3 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Discrete Mathematics and Algorithms (MS&E 316)", "courseNumber": "CME 305:", "courseDescription": "Topics: Basic Algebraic Graph Theory, Matroids and Minimum Spanning Trees, Submodularity and Maximum Flow, NP-Hardness, Approximation Algorithms, Randomized Algorithms, The Probabilistic Method, and Spectral Sparsification using Effective Resistances. Topics will be illustrated with applications from Distributed Computing, Machine Learning, and large-scale Optimization. Prerequisites: CS 261 is highly recommended, although not required.", "courseAttributes": "Terms: Win | Units: 3 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Discrete Mathematics and Algorithms (MS&E 316)", "courseNumber": "CME 305:", "courseDescription": "Topics: Basic Algebraic Graph Theory, Matroids and Minimum Spanning Trees, Submodularity and Maximum Flow, NP-Hardness, Approximation Algorithms, Randomized Algorithms, The Probabilistic Method, and Spectral Sparsification using Effective Resistances. Topics will be illustrated with applications from Distributed Computing, Machine Learning, and large-scale Optimization. Prerequisites: CS 261 is highly recommended, although not required.", "courseAttributes": "Terms: Win | Units: 3 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Discrete Mathematics and Algorithms (MS&E 316)", "courseNumber": "CME 305:", "courseDescription": "Topics: Basic Algebraic Graph Theory, Matroids and Minimum Spanning Trees, Submodularity and Maximum Flow, NP-Hardness, Approximation Algorithms, Randomized Algorithms, The Probabilistic Method, and Spectral Sparsification using Effective Resistances. Topics will be illustrated with applications from Distributed Computing, Machine Learning, and large-scale Optimization. Prerequisites: CS 261 is highly recommended, although not required.", "courseAttributes": "Terms: Win | Units: 3 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Discrete Mathematics and Algorithms (MS&E 316)", "courseNumber": "CME 305:", "courseDescription": "Topics: Basic Algebraic Graph Theory, Matroids and Minimum Spanning Trees, Submodularity and Maximum Flow, NP-Hardness, Approximation Algorithms, Randomized Algorithms, The Probabilistic Method, and Spectral Sparsification using Effective Resistances. Topics will be illustrated with applications from Distributed Computing, Machine Learning, and large-scale Optimization. Prerequisites: CS 261 is highly recommended, although not required.", "courseAttributes": "Terms: Win | Units: 3 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Discrete Mathematics and Algorithms (MS&E 316)", "courseNumber": "CME 305:", "courseDescription": "Topics: Basic Algebraic Graph Theory, Matroids and Minimum Spanning Trees, Submodularity and Maximum Flow, NP-Hardness, Approximation Algorithms, Randomized Algorithms, The Probabilistic Method, and Spectral Sparsification using Effective Resistances. Topics will be illustrated with applications from Distributed Computing, Machine Learning, and large-scale Optimization. Prerequisites: CS 261 is highly recommended, although not required.", "courseAttributes": "Terms: Win | Units: 3 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Discrete Mathematics and Algorithms (MS&E 316)", "courseNumber": "CME 305:", "courseDescription": "Topics: Basic Algebraic Graph Theory, Matroids and Minimum Spanning Trees, Submodularity and Maximum Flow, NP-Hardness, Approximation Algorithms, Randomized Algorithms, The Probabilistic Method, and Spectral Sparsification using Effective Resistances. Topics will be illustrated with applications from Distributed Computing, Machine Learning, and large-scale Optimization. Prerequisites: CS 261 is highly recommended, although not required.", "courseAttributes": "Terms: Win | Units: 3 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Discrete Mathematics and Algorithms (MS&E 316)", "courseNumber": "CME 305:", "courseDescription": "Topics: Basic Algebraic Graph Theory, Matroids and Minimum Spanning Trees, Submodularity and Maximum Flow, NP-Hardness, Approximation Algorithms, Randomized Algorithms, The Probabilistic Method, and Spectral Sparsification using Effective Resistances. Topics will be illustrated with applications from Distributed Computing, Machine Learning, and large-scale Optimization. Prerequisites: CS 261 is highly recommended, although not required.", "courseAttributes": "Terms: Win | Units: 3 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Discrete Mathematics and Algorithms (MS&E 316)", "courseNumber": "CME 305:", "courseDescription": "Topics: Basic Algebraic Graph Theory, Matroids and Minimum Spanning Trees, Submodularity and Maximum Flow, NP-Hardness, Approximation Algorithms, Randomized Algorithms, The Probabilistic Method, and Spectral Sparsification using Effective Resistances. Topics will be illustrated with applications from Distributed Computing, Machine Learning, and large-scale Optimization. Prerequisites: CS 261 is highly recommended, although not required.", "courseAttributes": "Terms: Win | Units: 3 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Discrete Mathematics and Algorithms (MS&E 316)", "courseNumber": "CME 305:", "courseDescription": "Topics: Basic Algebraic Graph Theory, Matroids and Minimum Spanning Trees, Submodularity and Maximum Flow, NP-Hardness, Approximation Algorithms, Randomized Algorithms, The Probabilistic Method, and Spectral Sparsification using Effective Resistances. Topics will be illustrated with applications from Distributed Computing, Machine Learning, and large-scale Optimization. Prerequisites: CS 261 is highly recommended, although not required.", "courseAttributes": "Terms: Win | Units: 3 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Discrete Mathematics and Algorithms (MS&E 316)", "courseNumber": "CME 305:", "courseDescription": "Topics: Basic Algebraic Graph Theory, Matroids and Minimum Spanning Trees, Submodularity and Maximum Flow, NP-Hardness, Approximation Algorithms, Randomized Algorithms, The Probabilistic Method, and Spectral Sparsification using Effective Resistances. Topics will be illustrated with applications from Distributed Computing, Machine Learning, and large-scale Optimization. Prerequisites: CS 261 is highly recommended, although not required.", "courseAttributes": "Terms: Win | Units: 3 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Discrete Mathematics and Algorithms (MS&E 316)", "courseNumber": "CME 305:", "courseDescription": "Topics: Basic Algebraic Graph Theory, Matroids and Minimum Spanning Trees, Submodularity and Maximum Flow, NP-Hardness, Approximation Algorithms, Randomized Algorithms, The Probabilistic Method, and Spectral Sparsification using Effective Resistances. Topics will be illustrated with applications from Distributed Computing, Machine Learning, and large-scale Optimization. Prerequisites: CS 261 is highly recommended, although not required.", "courseAttributes": "Terms: Win | Units: 3 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}]}}
{"Ashish Goel": {"courses": [{"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)", "courseLevel": "Undergraduate"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)", "courseLevel": "Undergraduate"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)", "courseLevel": "Undergraduate"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)", "courseLevel": "Undergraduate"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)", "courseLevel": "Undergraduate"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)", "courseLevel": "Undergraduate"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)", "courseLevel": "Undergraduate"}]}}
{"Aviad Rubinstein": {"courses": [{"courseTitle": "Design and Analysis of Algorithms", "courseNumber": "CS 161:", "courseDescription": "Worst and average case analysis. Recurrences and asymptotics. Efficient algorithms for sorting, searching, and selection. Data structures: binary search trees, heaps, hash tables. Algorithm design techniques: divide-and-conquer, dynamic programming, greedy algorithms, amortized analysis, randomization. Algorithms for fundamental graph problems: minimum-cost spanning tree, connected components, topological sort, and shortest paths. Possible additional topics: network flow, string searching. Prerequisite: 103 or 103B; 109 or STATS 116.", "courseAttributes": "Terms: Aut, Win, Sum | Units: 3-5 | UG Reqs: GER:DB-EngrAppSci, WAY-FR | Grading: Letter or Credit/No Credit", "courseLevel": "Undergraduate"}, {"courseTitle": "Design and Analysis of Algorithms", "courseNumber": "CS 161:", "courseDescription": "Worst and average case analysis. Recurrences and asymptotics. Efficient algorithms for sorting, searching, and selection. Data structures: binary search trees, heaps, hash tables. Algorithm design techniques: divide-and-conquer, dynamic programming, greedy algorithms, amortized analysis, randomization. Algorithms for fundamental graph problems: minimum-cost spanning tree, connected components, topological sort, and shortest paths. Possible additional topics: network flow, string searching. Prerequisite: 103 or 103B; 109 or STATS 116.", "courseAttributes": "Terms: Aut, Win, Sum | Units: 3-5 | UG Reqs: GER:DB-EngrAppSci, WAY-FR | Grading: Letter or Credit/No Credit", "courseLevel": "Undergraduate"}]}}
{"Anshul Kundaje": {"courses": [{"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)", "courseLevel": "Undergraduate"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)", "courseLevel": "Undergraduate"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)", "courseLevel": "Undergraduate"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)", "courseLevel": "Undergraduate"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)", "courseLevel": "Undergraduate"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)", "courseLevel": "Undergraduate"}]}}
{"Christoforos E. Kozyrakis": {"courses": []}}
{"Christoforos E. Kozyrakis": {"courses": []}}
{"Aviad Rubinstein": {"courses": [{"courseTitle": "Topics in Intractability: Unfulfilled Algorithmic Fantasies", "courseNumber": "CS 354:", "courseDescription": "Over the past 45 years, understanding NP-hardness has been an amazingly useful tool for algorithm designers. This course will expose students to additional ways to reason about obstacles for designing efficient algorithms. Topics will include unconditional lower bounds (query- and communication-complexity), total problems, Unique Games, average-case complexity, and fine-grained complexity. Prerequisites: CS 161 or equivalent. CS 254 recommended but not required.", "courseAttributes": "Terms: Spr | Units: 3 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Topics in Intractability: Unfulfilled Algorithmic Fantasies", "courseNumber": "CS 354:", "courseDescription": "Over the past 45 years, understanding NP-hardness has been an amazingly useful tool for algorithm designers. This course will expose students to additional ways to reason about obstacles for designing efficient algorithms. Topics will include unconditional lower bounds (query- and communication-complexity), total problems, Unique Games, average-case complexity, and fine-grained complexity. Prerequisites: CS 161 or equivalent. CS 254 recommended but not required.", "courseAttributes": "Terms: Spr | Units: 3 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Topics in Intractability: Unfulfilled Algorithmic Fantasies", "courseNumber": "CS 354:", "courseDescription": "Over the past 45 years, understanding NP-hardness has been an amazingly useful tool for algorithm designers. This course will expose students to additional ways to reason about obstacles for designing efficient algorithms. Topics will include unconditional lower bounds (query- and communication-complexity), total problems, Unique Games, average-case complexity, and fine-grained complexity. Prerequisites: CS 161 or equivalent. CS 254 recommended but not required.", "courseAttributes": "Terms: Spr | Units: 3 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Topics in Intractability: Unfulfilled Algorithmic Fantasies", "courseNumber": "CS 354:", "courseDescription": "Over the past 45 years, understanding NP-hardness has been an amazingly useful tool for algorithm designers. This course will expose students to additional ways to reason about obstacles for designing efficient algorithms. Topics will include unconditional lower bounds (query- and communication-complexity), total problems, Unique Games, average-case complexity, and fine-grained complexity. Prerequisites: CS 161 or equivalent. CS 254 recommended but not required.", "courseAttributes": "Terms: Spr | Units: 3 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Topics in Intractability: Unfulfilled Algorithmic Fantasies", "courseNumber": "CS 354:", "courseDescription": "Over the past 45 years, understanding NP-hardness has been an amazingly useful tool for algorithm designers. This course will expose students to additional ways to reason about obstacles for designing efficient algorithms. Topics will include unconditional lower bounds (query- and communication-complexity), total problems, Unique Games, average-case complexity, and fine-grained complexity. Prerequisites: CS 161 or equivalent. CS 254 recommended but not required.", "courseAttributes": "Terms: Spr | Units: 3 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Topics in Intractability: Unfulfilled Algorithmic Fantasies", "courseNumber": "CS 354:", "courseDescription": "Over the past 45 years, understanding NP-hardness has been an amazingly useful tool for algorithm designers. This course will expose students to additional ways to reason about obstacles for designing efficient algorithms. Topics will include unconditional lower bounds (query- and communication-complexity), total problems, Unique Games, average-case complexity, and fine-grained complexity. Prerequisites: CS 161 or equivalent. CS 254 recommended but not required.", "courseAttributes": "Terms: Spr | Units: 3 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Topics in Intractability: Unfulfilled Algorithmic Fantasies", "courseNumber": "CS 354:", "courseDescription": "Over the past 45 years, understanding NP-hardness has been an amazingly useful tool for algorithm designers. This course will expose students to additional ways to reason about obstacles for designing efficient algorithms. Topics will include unconditional lower bounds (query- and communication-complexity), total problems, Unique Games, average-case complexity, and fine-grained complexity. Prerequisites: CS 161 or equivalent. CS 254 recommended but not required.", "courseAttributes": "Terms: Spr | Units: 3 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}]}}
{"Chris Piech": {"courses": [{"courseTitle": "Curricular Practical Training", "courseNumber": "CS 390A:", "courseDescription": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1 | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Curricular Practical Training", "courseNumber": "CS 390A:", "courseDescription": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1 | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Curricular Practical Training", "courseNumber": "CS 390A:", "courseDescription": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1 | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Curricular Practical Training", "courseNumber": "CS 390A:", "courseDescription": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1 | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}]}}
{"Chris Piech": {"courses": [{"courseTitle": "AI for Social Good", "courseNumber": "CS 21SI:", "courseDescription": "Students will learn about and apply cutting-edge artificial intelligence techniques to real-world social good spaces (such as healthcare, government, education, and environment). Taught jointly by CS+Social Good and the Stanford AI Group, the aim of the class is to empower students to apply these techniques outside of the classroom. The class will focus on techniques from machine learning and deep learning, including regression, support vector machines (SVMs), neural networks, convolutional neural networks (CNNs), and recurrent neural networks (RNNs). The course alternates between lectures on machine learning theory and discussions with invited speakers, who will challenge students to apply techniques in their social good domains. Students complete weekly coding assignments reinforcing machine learning concepts and applications. Prerequisites: programming experience at the level of CS107, mathematical fluency at the level of CS103, comfort with probability at the level of CS109 (or equivalent). Application required for enrollment.", "courseAttributes": "Terms: Spr | Units: 2 | Grading: Satisfactory/No Credit", "courseLevel": "Undergraduate"}, {"courseTitle": "AI for Social Good", "courseNumber": "CS 21SI:", "courseDescription": "Students will learn about and apply cutting-edge artificial intelligence techniques to real-world social good spaces (such as healthcare, government, education, and environment). Taught jointly by CS+Social Good and the Stanford AI Group, the aim of the class is to empower students to apply these techniques outside of the classroom. The class will focus on techniques from machine learning and deep learning, including regression, support vector machines (SVMs), neural networks, convolutional neural networks (CNNs), and recurrent neural networks (RNNs). The course alternates between lectures on machine learning theory and discussions with invited speakers, who will challenge students to apply techniques in their social good domains. Students complete weekly coding assignments reinforcing machine learning concepts and applications. Prerequisites: programming experience at the level of CS107, mathematical fluency at the level of CS103, comfort with probability at the level of CS109 (or equivalent). Application required for enrollment.", "courseAttributes": "Terms: Spr | Units: 2 | Grading: Satisfactory/No Credit", "courseLevel": "Undergraduate"}, {"courseTitle": "AI for Social Good", "courseNumber": "CS 21SI:", "courseDescription": "Students will learn about and apply cutting-edge artificial intelligence techniques to real-world social good spaces (such as healthcare, government, education, and environment). Taught jointly by CS+Social Good and the Stanford AI Group, the aim of the class is to empower students to apply these techniques outside of the classroom. The class will focus on techniques from machine learning and deep learning, including regression, support vector machines (SVMs), neural networks, convolutional neural networks (CNNs), and recurrent neural networks (RNNs). The course alternates between lectures on machine learning theory and discussions with invited speakers, who will challenge students to apply techniques in their social good domains. Students complete weekly coding assignments reinforcing machine learning concepts and applications. Prerequisites: programming experience at the level of CS107, mathematical fluency at the level of CS103, comfort with probability at the level of CS109 (or equivalent). Application required for enrollment.", "courseAttributes": "Terms: Spr | Units: 2 | Grading: Satisfactory/No Credit", "courseLevel": "Undergraduate"}, {"courseTitle": "AI for Social Good", "courseNumber": "CS 21SI:", "courseDescription": "Students will learn about and apply cutting-edge artificial intelligence techniques to real-world social good spaces (such as healthcare, government, education, and environment). Taught jointly by CS+Social Good and the Stanford AI Group, the aim of the class is to empower students to apply these techniques outside of the classroom. The class will focus on techniques from machine learning and deep learning, including regression, support vector machines (SVMs), neural networks, convolutional neural networks (CNNs), and recurrent neural networks (RNNs). The course alternates between lectures on machine learning theory and discussions with invited speakers, who will challenge students to apply techniques in their social good domains. Students complete weekly coding assignments reinforcing machine learning concepts and applications. Prerequisites: programming experience at the level of CS107, mathematical fluency at the level of CS103, comfort with probability at the level of CS109 (or equivalent). Application required for enrollment.", "courseAttributes": "Terms: Spr | Units: 2 | Grading: Satisfactory/No Credit", "courseLevel": "Undergraduate"}, {"courseTitle": "AI for Social Good", "courseNumber": "CS 21SI:", "courseDescription": "Students will learn about and apply cutting-edge artificial intelligence techniques to real-world social good spaces (such as healthcare, government, education, and environment). Taught jointly by CS+Social Good and the Stanford AI Group, the aim of the class is to empower students to apply these techniques outside of the classroom. The class will focus on techniques from machine learning and deep learning, including regression, support vector machines (SVMs), neural networks, convolutional neural networks (CNNs), and recurrent neural networks (RNNs). The course alternates between lectures on machine learning theory and discussions with invited speakers, who will challenge students to apply techniques in their social good domains. Students complete weekly coding assignments reinforcing machine learning concepts and applications. Prerequisites: programming experience at the level of CS107, mathematical fluency at the level of CS103, comfort with probability at the level of CS109 (or equivalent). Application required for enrollment.", "courseAttributes": "Terms: Spr | Units: 2 | Grading: Satisfactory/No Credit", "courseLevel": "Undergraduate"}, {"courseTitle": "AI for Social Good", "courseNumber": "CS 21SI:", "courseDescription": "Students will learn about and apply cutting-edge artificial intelligence techniques to real-world social good spaces (such as healthcare, government, education, and environment). Taught jointly by CS+Social Good and the Stanford AI Group, the aim of the class is to empower students to apply these techniques outside of the classroom. The class will focus on techniques from machine learning and deep learning, including regression, support vector machines (SVMs), neural networks, convolutional neural networks (CNNs), and recurrent neural networks (RNNs). The course alternates between lectures on machine learning theory and discussions with invited speakers, who will challenge students to apply techniques in their social good domains. Students complete weekly coding assignments reinforcing machine learning concepts and applications. Prerequisites: programming experience at the level of CS107, mathematical fluency at the level of CS103, comfort with probability at the level of CS109 (or equivalent). Application required for enrollment.", "courseAttributes": "Terms: Spr | Units: 2 | Grading: Satisfactory/No Credit", "courseLevel": "Undergraduate"}, {"courseTitle": "AI for Social Good", "courseNumber": "CS 21SI:", "courseDescription": "Students will learn about and apply cutting-edge artificial intelligence techniques to real-world social good spaces (such as healthcare, government, education, and environment). Taught jointly by CS+Social Good and the Stanford AI Group, the aim of the class is to empower students to apply these techniques outside of the classroom. The class will focus on techniques from machine learning and deep learning, including regression, support vector machines (SVMs), neural networks, convolutional neural networks (CNNs), and recurrent neural networks (RNNs). The course alternates between lectures on machine learning theory and discussions with invited speakers, who will challenge students to apply techniques in their social good domains. Students complete weekly coding assignments reinforcing machine learning concepts and applications. Prerequisites: programming experience at the level of CS107, mathematical fluency at the level of CS103, comfort with probability at the level of CS109 (or equivalent). Application required for enrollment.", "courseAttributes": "Terms: Spr | Units: 2 | Grading: Satisfactory/No Credit", "courseLevel": "Undergraduate"}, {"courseTitle": "AI for Social Good", "courseNumber": "CS 21SI:", "courseDescription": "Students will learn about and apply cutting-edge artificial intelligence techniques to real-world social good spaces (such as healthcare, government, education, and environment). Taught jointly by CS+Social Good and the Stanford AI Group, the aim of the class is to empower students to apply these techniques outside of the classroom. The class will focus on techniques from machine learning and deep learning, including regression, support vector machines (SVMs), neural networks, convolutional neural networks (CNNs), and recurrent neural networks (RNNs). The course alternates between lectures on machine learning theory and discussions with invited speakers, who will challenge students to apply techniques in their social good domains. Students complete weekly coding assignments reinforcing machine learning concepts and applications. Prerequisites: programming experience at the level of CS107, mathematical fluency at the level of CS103, comfort with probability at the level of CS109 (or equivalent). Application required for enrollment.", "courseAttributes": "Terms: Spr | Units: 2 | Grading: Satisfactory/No Credit", "courseLevel": "Undergraduate"}, {"courseTitle": "AI for Social Good", "courseNumber": "CS 21SI:", "courseDescription": "Students will learn about and apply cutting-edge artificial intelligence techniques to real-world social good spaces (such as healthcare, government, education, and environment). Taught jointly by CS+Social Good and the Stanford AI Group, the aim of the class is to empower students to apply these techniques outside of the classroom. The class will focus on techniques from machine learning and deep learning, including regression, support vector machines (SVMs), neural networks, convolutional neural networks (CNNs), and recurrent neural networks (RNNs). The course alternates between lectures on machine learning theory and discussions with invited speakers, who will challenge students to apply techniques in their social good domains. Students complete weekly coding assignments reinforcing machine learning concepts and applications. Prerequisites: programming experience at the level of CS107, mathematical fluency at the level of CS103, comfort with probability at the level of CS109 (or equivalent). Application required for enrollment.", "courseAttributes": "Terms: Spr | Units: 2 | Grading: Satisfactory/No Credit", "courseLevel": "Undergraduate"}, {"courseTitle": "AI for Social Good", "courseNumber": "CS 21SI:", "courseDescription": "Students will learn about and apply cutting-edge artificial intelligence techniques to real-world social good spaces (such as healthcare, government, education, and environment). Taught jointly by CS+Social Good and the Stanford AI Group, the aim of the class is to empower students to apply these techniques outside of the classroom. The class will focus on techniques from machine learning and deep learning, including regression, support vector machines (SVMs), neural networks, convolutional neural networks (CNNs), and recurrent neural networks (RNNs). The course alternates between lectures on machine learning theory and discussions with invited speakers, who will challenge students to apply techniques in their social good domains. Students complete weekly coding assignments reinforcing machine learning concepts and applications. Prerequisites: programming experience at the level of CS107, mathematical fluency at the level of CS103, comfort with probability at the level of CS109 (or equivalent). Application required for enrollment.", "courseAttributes": "Terms: Spr | Units: 2 | Grading: Satisfactory/No Credit", "courseLevel": "Undergraduate"}]}}
{"Balaji Prabhakar": {"courses": [{"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)", "courseLevel": "Undergraduate"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)", "courseLevel": "Undergraduate"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)", "courseLevel": "Undergraduate"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)", "courseLevel": "Undergraduate"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)", "courseLevel": "Undergraduate"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)", "courseLevel": "Undergraduate"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)", "courseLevel": "Undergraduate"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)", "courseLevel": "Undergraduate"}]}}
{"Christopher R%C3%A9": {"courses": []}}
{"Christopher R%C3%A9": {"courses": []}}
{"Daniel Jurafsky": {"courses": [{"courseTitle": "TGR Project", "courseNumber": "EASTASN 801:", "courseDescription": "Mentored research project for first-year graduate students in linguistics.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 0 | Repeatable for credit | Grading: TGR", "courseLevel": "Graduate"}, {"courseTitle": "TGR Project", "courseNumber": "EASTASN 801:", "courseDescription": "Mentored research project for first-year graduate students in linguistics.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 0 | Repeatable for credit | Grading: TGR", "courseLevel": "Graduate"}, {"courseTitle": "TGR Project", "courseNumber": "EASTASN 801:", "courseDescription": "Mentored research project for first-year graduate students in linguistics.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 0 | Repeatable for credit | Grading: TGR", "courseLevel": "Graduate"}, {"courseTitle": "TGR Project", "courseNumber": "EASTASN 801:", "courseDescription": "Mentored research project for first-year graduate students in linguistics.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 0 | Repeatable for credit | Grading: TGR", "courseLevel": "Graduate"}, {"courseTitle": "TGR Project", "courseNumber": "EASTASN 801:", "courseDescription": "Mentored research project for first-year graduate students in linguistics.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 0 | Repeatable for credit | Grading: TGR", "courseLevel": "Graduate"}, {"courseTitle": "TGR Project", "courseNumber": "EASTASN 801:", "courseDescription": "Mentored research project for first-year graduate students in linguistics.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 0 | Repeatable for credit | Grading: TGR", "courseLevel": "Graduate"}]}}
{"Daniel Jurafsky": {"courses": [{"courseTitle": "Honors Research", "courseNumber": "LINGUIST 198:", "courseDescription": "Under the supervision of their faculty honors adviser, students work on their senior honors project. May be repeated for credit.", "courseAttributes": "Terms: Aut, Win, Spr | Units: 1-15 | Repeatable for credit | Grading: Letter or Credit/No Credit", "courseLevel": "Undergraduate"}, {"courseTitle": "Honors Research", "courseNumber": "LINGUIST 198:", "courseDescription": "Under the supervision of their faculty honors adviser, students work on their senior honors project. May be repeated for credit.", "courseAttributes": "Terms: Aut, Win, Spr | Units: 1-15 | Repeatable for credit | Grading: Letter or Credit/No Credit", "courseLevel": "Undergraduate"}, {"courseTitle": "Honors Research", "courseNumber": "LINGUIST 198:", "courseDescription": "Under the supervision of their faculty honors adviser, students work on their senior honors project. May be repeated for credit.", "courseAttributes": "Terms: Aut, Win, Spr | Units: 1-15 | Repeatable for credit | Grading: Letter or Credit/No Credit", "courseLevel": "Undergraduate"}]}}
{"Ashish Goel": {"courses": [{"courseTitle": "Master's Research", "courseNumber": "CME 291:", "courseDescription": "Students require faculty sponsor. (Staff)", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Master's Research", "courseNumber": "CME 291:", "courseDescription": "Students require faculty sponsor. (Staff)", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Master's Research", "courseNumber": "CME 291:", "courseDescription": "Students require faculty sponsor. (Staff)", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Master's Research", "courseNumber": "CME 291:", "courseDescription": "Students require faculty sponsor. (Staff)", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Master's Research", "courseNumber": "CME 291:", "courseDescription": "Students require faculty sponsor. (Staff)", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Master's Research", "courseNumber": "CME 291:", "courseDescription": "Students require faculty sponsor. (Staff)", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Master's Research", "courseNumber": "CME 291:", "courseDescription": "Students require faculty sponsor. (Staff)", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Master's Research", "courseNumber": "CME 291:", "courseDescription": "Students require faculty sponsor. (Staff)", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Master's Research", "courseNumber": "CME 291:", "courseDescription": "Students require faculty sponsor. (Staff)", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Master's Research", "courseNumber": "CME 291:", "courseDescription": "Students require faculty sponsor. (Staff)", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Master's Research", "courseNumber": "CME 291:", "courseDescription": "Students require faculty sponsor. (Staff)", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Master's Research", "courseNumber": "CME 291:", "courseDescription": "Students require faculty sponsor. (Staff)", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Master's Research", "courseNumber": "CME 291:", "courseDescription": "Students require faculty sponsor. (Staff)", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Master's Research", "courseNumber": "CME 291:", "courseDescription": "Students require faculty sponsor. (Staff)", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Master's Research", "courseNumber": "CME 291:", "courseDescription": "Students require faculty sponsor. (Staff)", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Master's Research", "courseNumber": "CME 291:", "courseDescription": "Students require faculty sponsor. (Staff)", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Master's Research", "courseNumber": "CME 291:", "courseDescription": "Students require faculty sponsor. (Staff)", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Master's Research", "courseNumber": "CME 291:", "courseDescription": "Students require faculty sponsor. (Staff)", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Master's Research", "courseNumber": "CME 291:", "courseDescription": "Students require faculty sponsor. (Staff)", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Master's Research", "courseNumber": "CME 291:", "courseDescription": "Students require faculty sponsor. (Staff)", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Master's Research", "courseNumber": "CME 291:", "courseDescription": "Students require faculty sponsor. (Staff)", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Master's Research", "courseNumber": "CME 291:", "courseDescription": "Students require faculty sponsor. (Staff)", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Master's Research", "courseNumber": "CME 291:", "courseDescription": "Students require faculty sponsor. (Staff)", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Master's Research", "courseNumber": "CME 291:", "courseDescription": "Students require faculty sponsor. (Staff)", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Master's Research", "courseNumber": "CME 291:", "courseDescription": "Students require faculty sponsor. (Staff)", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Master's Research", "courseNumber": "CME 291:", "courseDescription": "Students require faculty sponsor. (Staff)", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}]}}
{"Christopher D. Manning": {"courses": [{"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)", "courseLevel": "Undergraduate"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)", "courseLevel": "Undergraduate"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)", "courseLevel": "Undergraduate"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)", "courseLevel": "Undergraduate"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)", "courseLevel": "Undergraduate"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)", "courseLevel": "Undergraduate"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)", "courseLevel": "Undergraduate"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)", "courseLevel": "Undergraduate"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)", "courseLevel": "Undergraduate"}]}}
{"Balaji Prabhakar": {"courses": [{"courseTitle": "Technology for Financial Systems", "courseNumber": "CS 349F:", "courseDescription": "Financial systems have spurred technological innovation and, in turn, are driven by cutting-edge technological developments.  This seminar course explores the synergy.  Students will learn from faculty and industry experts (from the finance and tech industries) how to build faster, fairer and better fintech.  Topics include network infrastructure: packet switch architectures, data center fabrics, ultra-low latency trading systems and financial exchange fabrics; cloud computing infrastructure: building large-scale risk computation platforms using virtual machines, containers and serverless computing; challenges and opportunities in building cloud-native financial exchanges: the role of fairness and synchronized clocks;  AI/ML in fintech; and trading systems based on distributed ledger technologies.  Recommended:  Knowledge of basic Networking , OS or Distributed Systems (CS 140, CS 144) and basic probability courses (CS 109, EE 178).", "courseAttributes": "Terms: Spr | Units: 1 | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Technology for Financial Systems", "courseNumber": "CS 349F:", "courseDescription": "Financial systems have spurred technological innovation and, in turn, are driven by cutting-edge technological developments.  This seminar course explores the synergy.  Students will learn from faculty and industry experts (from the finance and tech industries) how to build faster, fairer and better fintech.  Topics include network infrastructure: packet switch architectures, data center fabrics, ultra-low latency trading systems and financial exchange fabrics; cloud computing infrastructure: building large-scale risk computation platforms using virtual machines, containers and serverless computing; challenges and opportunities in building cloud-native financial exchanges: the role of fairness and synchronized clocks;  AI/ML in fintech; and trading systems based on distributed ledger technologies.  Recommended:  Knowledge of basic Networking , OS or Distributed Systems (CS 140, CS 144) and basic probability courses (CS 109, EE 178).", "courseAttributes": "Terms: Spr | Units: 1 | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Technology for Financial Systems", "courseNumber": "CS 349F:", "courseDescription": "Financial systems have spurred technological innovation and, in turn, are driven by cutting-edge technological developments.  This seminar course explores the synergy.  Students will learn from faculty and industry experts (from the finance and tech industries) how to build faster, fairer and better fintech.  Topics include network infrastructure: packet switch architectures, data center fabrics, ultra-low latency trading systems and financial exchange fabrics; cloud computing infrastructure: building large-scale risk computation platforms using virtual machines, containers and serverless computing; challenges and opportunities in building cloud-native financial exchanges: the role of fairness and synchronized clocks;  AI/ML in fintech; and trading systems based on distributed ledger technologies.  Recommended:  Knowledge of basic Networking , OS or Distributed Systems (CS 140, CS 144) and basic probability courses (CS 109, EE 178).", "courseAttributes": "Terms: Spr | Units: 1 | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Technology for Financial Systems", "courseNumber": "CS 349F:", "courseDescription": "Financial systems have spurred technological innovation and, in turn, are driven by cutting-edge technological developments.  This seminar course explores the synergy.  Students will learn from faculty and industry experts (from the finance and tech industries) how to build faster, fairer and better fintech.  Topics include network infrastructure: packet switch architectures, data center fabrics, ultra-low latency trading systems and financial exchange fabrics; cloud computing infrastructure: building large-scale risk computation platforms using virtual machines, containers and serverless computing; challenges and opportunities in building cloud-native financial exchanges: the role of fairness and synchronized clocks;  AI/ML in fintech; and trading systems based on distributed ledger technologies.  Recommended:  Knowledge of basic Networking , OS or Distributed Systems (CS 140, CS 144) and basic probability courses (CS 109, EE 178).", "courseAttributes": "Terms: Spr | Units: 1 | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Technology for Financial Systems", "courseNumber": "CS 349F:", "courseDescription": "Financial systems have spurred technological innovation and, in turn, are driven by cutting-edge technological developments.  This seminar course explores the synergy.  Students will learn from faculty and industry experts (from the finance and tech industries) how to build faster, fairer and better fintech.  Topics include network infrastructure: packet switch architectures, data center fabrics, ultra-low latency trading systems and financial exchange fabrics; cloud computing infrastructure: building large-scale risk computation platforms using virtual machines, containers and serverless computing; challenges and opportunities in building cloud-native financial exchanges: the role of fairness and synchronized clocks;  AI/ML in fintech; and trading systems based on distributed ledger technologies.  Recommended:  Knowledge of basic Networking , OS or Distributed Systems (CS 140, CS 144) and basic probability courses (CS 109, EE 178).", "courseAttributes": "Terms: Spr | Units: 1 | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Technology for Financial Systems", "courseNumber": "CS 349F:", "courseDescription": "Financial systems have spurred technological innovation and, in turn, are driven by cutting-edge technological developments.  This seminar course explores the synergy.  Students will learn from faculty and industry experts (from the finance and tech industries) how to build faster, fairer and better fintech.  Topics include network infrastructure: packet switch architectures, data center fabrics, ultra-low latency trading systems and financial exchange fabrics; cloud computing infrastructure: building large-scale risk computation platforms using virtual machines, containers and serverless computing; challenges and opportunities in building cloud-native financial exchanges: the role of fairness and synchronized clocks;  AI/ML in fintech; and trading systems based on distributed ledger technologies.  Recommended:  Knowledge of basic Networking , OS or Distributed Systems (CS 140, CS 144) and basic probability courses (CS 109, EE 178).", "courseAttributes": "Terms: Spr | Units: 1 | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Technology for Financial Systems", "courseNumber": "CS 349F:", "courseDescription": "Financial systems have spurred technological innovation and, in turn, are driven by cutting-edge technological developments.  This seminar course explores the synergy.  Students will learn from faculty and industry experts (from the finance and tech industries) how to build faster, fairer and better fintech.  Topics include network infrastructure: packet switch architectures, data center fabrics, ultra-low latency trading systems and financial exchange fabrics; cloud computing infrastructure: building large-scale risk computation platforms using virtual machines, containers and serverless computing; challenges and opportunities in building cloud-native financial exchanges: the role of fairness and synchronized clocks;  AI/ML in fintech; and trading systems based on distributed ledger technologies.  Recommended:  Knowledge of basic Networking , OS or Distributed Systems (CS 140, CS 144) and basic probability courses (CS 109, EE 178).", "courseAttributes": "Terms: Spr | Units: 1 | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Technology for Financial Systems", "courseNumber": "CS 349F:", "courseDescription": "Financial systems have spurred technological innovation and, in turn, are driven by cutting-edge technological developments.  This seminar course explores the synergy.  Students will learn from faculty and industry experts (from the finance and tech industries) how to build faster, fairer and better fintech.  Topics include network infrastructure: packet switch architectures, data center fabrics, ultra-low latency trading systems and financial exchange fabrics; cloud computing infrastructure: building large-scale risk computation platforms using virtual machines, containers and serverless computing; challenges and opportunities in building cloud-native financial exchanges: the role of fairness and synchronized clocks;  AI/ML in fintech; and trading systems based on distributed ledger technologies.  Recommended:  Knowledge of basic Networking , OS or Distributed Systems (CS 140, CS 144) and basic probability courses (CS 109, EE 178).", "courseAttributes": "Terms: Spr | Units: 1 | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Technology for Financial Systems", "courseNumber": "CS 349F:", "courseDescription": "Financial systems have spurred technological innovation and, in turn, are driven by cutting-edge technological developments.  This seminar course explores the synergy.  Students will learn from faculty and industry experts (from the finance and tech industries) how to build faster, fairer and better fintech.  Topics include network infrastructure: packet switch architectures, data center fabrics, ultra-low latency trading systems and financial exchange fabrics; cloud computing infrastructure: building large-scale risk computation platforms using virtual machines, containers and serverless computing; challenges and opportunities in building cloud-native financial exchanges: the role of fairness and synchronized clocks;  AI/ML in fintech; and trading systems based on distributed ledger technologies.  Recommended:  Knowledge of basic Networking , OS or Distributed Systems (CS 140, CS 144) and basic probability courses (CS 109, EE 178).", "courseAttributes": "Terms: Spr | Units: 1 | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Technology for Financial Systems", "courseNumber": "CS 349F:", "courseDescription": "Financial systems have spurred technological innovation and, in turn, are driven by cutting-edge technological developments.  This seminar course explores the synergy.  Students will learn from faculty and industry experts (from the finance and tech industries) how to build faster, fairer and better fintech.  Topics include network infrastructure: packet switch architectures, data center fabrics, ultra-low latency trading systems and financial exchange fabrics; cloud computing infrastructure: building large-scale risk computation platforms using virtual machines, containers and serverless computing; challenges and opportunities in building cloud-native financial exchanges: the role of fairness and synchronized clocks;  AI/ML in fintech; and trading systems based on distributed ledger technologies.  Recommended:  Knowledge of basic Networking , OS or Distributed Systems (CS 140, CS 144) and basic probability courses (CS 109, EE 178).", "courseAttributes": "Terms: Spr | Units: 1 | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Technology for Financial Systems", "courseNumber": "CS 349F:", "courseDescription": "Financial systems have spurred technological innovation and, in turn, are driven by cutting-edge technological developments.  This seminar course explores the synergy.  Students will learn from faculty and industry experts (from the finance and tech industries) how to build faster, fairer and better fintech.  Topics include network infrastructure: packet switch architectures, data center fabrics, ultra-low latency trading systems and financial exchange fabrics; cloud computing infrastructure: building large-scale risk computation platforms using virtual machines, containers and serverless computing; challenges and opportunities in building cloud-native financial exchanges: the role of fairness and synchronized clocks;  AI/ML in fintech; and trading systems based on distributed ledger technologies.  Recommended:  Knowledge of basic Networking , OS or Distributed Systems (CS 140, CS 144) and basic probability courses (CS 109, EE 178).", "courseAttributes": "Terms: Spr | Units: 1 | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Technology for Financial Systems", "courseNumber": "CS 349F:", "courseDescription": "Financial systems have spurred technological innovation and, in turn, are driven by cutting-edge technological developments.  This seminar course explores the synergy.  Students will learn from faculty and industry experts (from the finance and tech industries) how to build faster, fairer and better fintech.  Topics include network infrastructure: packet switch architectures, data center fabrics, ultra-low latency trading systems and financial exchange fabrics; cloud computing infrastructure: building large-scale risk computation platforms using virtual machines, containers and serverless computing; challenges and opportunities in building cloud-native financial exchanges: the role of fairness and synchronized clocks;  AI/ML in fintech; and trading systems based on distributed ledger technologies.  Recommended:  Knowledge of basic Networking , OS or Distributed Systems (CS 140, CS 144) and basic probability courses (CS 109, EE 178).", "courseAttributes": "Terms: Spr | Units: 1 | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Technology for Financial Systems", "courseNumber": "CS 349F:", "courseDescription": "Financial systems have spurred technological innovation and, in turn, are driven by cutting-edge technological developments.  This seminar course explores the synergy.  Students will learn from faculty and industry experts (from the finance and tech industries) how to build faster, fairer and better fintech.  Topics include network infrastructure: packet switch architectures, data center fabrics, ultra-low latency trading systems and financial exchange fabrics; cloud computing infrastructure: building large-scale risk computation platforms using virtual machines, containers and serverless computing; challenges and opportunities in building cloud-native financial exchanges: the role of fairness and synchronized clocks;  AI/ML in fintech; and trading systems based on distributed ledger technologies.  Recommended:  Knowledge of basic Networking , OS or Distributed Systems (CS 140, CS 144) and basic probability courses (CS 109, EE 178).", "courseAttributes": "Terms: Spr | Units: 1 | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Technology for Financial Systems", "courseNumber": "CS 349F:", "courseDescription": "Financial systems have spurred technological innovation and, in turn, are driven by cutting-edge technological developments.  This seminar course explores the synergy.  Students will learn from faculty and industry experts (from the finance and tech industries) how to build faster, fairer and better fintech.  Topics include network infrastructure: packet switch architectures, data center fabrics, ultra-low latency trading systems and financial exchange fabrics; cloud computing infrastructure: building large-scale risk computation platforms using virtual machines, containers and serverless computing; challenges and opportunities in building cloud-native financial exchanges: the role of fairness and synchronized clocks;  AI/ML in fintech; and trading systems based on distributed ledger technologies.  Recommended:  Knowledge of basic Networking , OS or Distributed Systems (CS 140, CS 144) and basic probability courses (CS 109, EE 178).", "courseAttributes": "Terms: Spr | Units: 1 | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Technology for Financial Systems", "courseNumber": "CS 349F:", "courseDescription": "Financial systems have spurred technological innovation and, in turn, are driven by cutting-edge technological developments.  This seminar course explores the synergy.  Students will learn from faculty and industry experts (from the finance and tech industries) how to build faster, fairer and better fintech.  Topics include network infrastructure: packet switch architectures, data center fabrics, ultra-low latency trading systems and financial exchange fabrics; cloud computing infrastructure: building large-scale risk computation platforms using virtual machines, containers and serverless computing; challenges and opportunities in building cloud-native financial exchanges: the role of fairness and synchronized clocks;  AI/ML in fintech; and trading systems based on distributed ledger technologies.  Recommended:  Knowledge of basic Networking , OS or Distributed Systems (CS 140, CS 144) and basic probability courses (CS 109, EE 178).", "courseAttributes": "Terms: Spr | Units: 1 | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Technology for Financial Systems", "courseNumber": "CS 349F:", "courseDescription": "Financial systems have spurred technological innovation and, in turn, are driven by cutting-edge technological developments.  This seminar course explores the synergy.  Students will learn from faculty and industry experts (from the finance and tech industries) how to build faster, fairer and better fintech.  Topics include network infrastructure: packet switch architectures, data center fabrics, ultra-low latency trading systems and financial exchange fabrics; cloud computing infrastructure: building large-scale risk computation platforms using virtual machines, containers and serverless computing; challenges and opportunities in building cloud-native financial exchanges: the role of fairness and synchronized clocks;  AI/ML in fintech; and trading systems based on distributed ledger technologies.  Recommended:  Knowledge of basic Networking , OS or Distributed Systems (CS 140, CS 144) and basic probability courses (CS 109, EE 178).", "courseAttributes": "Terms: Spr | Units: 1 | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Technology for Financial Systems", "courseNumber": "CS 349F:", "courseDescription": "Financial systems have spurred technological innovation and, in turn, are driven by cutting-edge technological developments.  This seminar course explores the synergy.  Students will learn from faculty and industry experts (from the finance and tech industries) how to build faster, fairer and better fintech.  Topics include network infrastructure: packet switch architectures, data center fabrics, ultra-low latency trading systems and financial exchange fabrics; cloud computing infrastructure: building large-scale risk computation platforms using virtual machines, containers and serverless computing; challenges and opportunities in building cloud-native financial exchanges: the role of fairness and synchronized clocks;  AI/ML in fintech; and trading systems based on distributed ledger technologies.  Recommended:  Knowledge of basic Networking , OS or Distributed Systems (CS 140, CS 144) and basic probability courses (CS 109, EE 178).", "courseAttributes": "Terms: Spr | Units: 1 | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Technology for Financial Systems", "courseNumber": "CS 349F:", "courseDescription": "Financial systems have spurred technological innovation and, in turn, are driven by cutting-edge technological developments.  This seminar course explores the synergy.  Students will learn from faculty and industry experts (from the finance and tech industries) how to build faster, fairer and better fintech.  Topics include network infrastructure: packet switch architectures, data center fabrics, ultra-low latency trading systems and financial exchange fabrics; cloud computing infrastructure: building large-scale risk computation platforms using virtual machines, containers and serverless computing; challenges and opportunities in building cloud-native financial exchanges: the role of fairness and synchronized clocks;  AI/ML in fintech; and trading systems based on distributed ledger technologies.  Recommended:  Knowledge of basic Networking , OS or Distributed Systems (CS 140, CS 144) and basic probability courses (CS 109, EE 178).", "courseAttributes": "Terms: Spr | Units: 1 | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Technology for Financial Systems", "courseNumber": "CS 349F:", "courseDescription": "Financial systems have spurred technological innovation and, in turn, are driven by cutting-edge technological developments.  This seminar course explores the synergy.  Students will learn from faculty and industry experts (from the finance and tech industries) how to build faster, fairer and better fintech.  Topics include network infrastructure: packet switch architectures, data center fabrics, ultra-low latency trading systems and financial exchange fabrics; cloud computing infrastructure: building large-scale risk computation platforms using virtual machines, containers and serverless computing; challenges and opportunities in building cloud-native financial exchanges: the role of fairness and synchronized clocks;  AI/ML in fintech; and trading systems based on distributed ledger technologies.  Recommended:  Knowledge of basic Networking , OS or Distributed Systems (CS 140, CS 144) and basic probability courses (CS 109, EE 178).", "courseAttributes": "Terms: Spr | Units: 1 | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Technology for Financial Systems", "courseNumber": "CS 349F:", "courseDescription": "Financial systems have spurred technological innovation and, in turn, are driven by cutting-edge technological developments.  This seminar course explores the synergy.  Students will learn from faculty and industry experts (from the finance and tech industries) how to build faster, fairer and better fintech.  Topics include network infrastructure: packet switch architectures, data center fabrics, ultra-low latency trading systems and financial exchange fabrics; cloud computing infrastructure: building large-scale risk computation platforms using virtual machines, containers and serverless computing; challenges and opportunities in building cloud-native financial exchanges: the role of fairness and synchronized clocks;  AI/ML in fintech; and trading systems based on distributed ledger technologies.  Recommended:  Knowledge of basic Networking , OS or Distributed Systems (CS 140, CS 144) and basic probability courses (CS 109, EE 178).", "courseAttributes": "Terms: Spr | Units: 1 | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Technology for Financial Systems", "courseNumber": "CS 349F:", "courseDescription": "Financial systems have spurred technological innovation and, in turn, are driven by cutting-edge technological developments.  This seminar course explores the synergy.  Students will learn from faculty and industry experts (from the finance and tech industries) how to build faster, fairer and better fintech.  Topics include network infrastructure: packet switch architectures, data center fabrics, ultra-low latency trading systems and financial exchange fabrics; cloud computing infrastructure: building large-scale risk computation platforms using virtual machines, containers and serverless computing; challenges and opportunities in building cloud-native financial exchanges: the role of fairness and synchronized clocks;  AI/ML in fintech; and trading systems based on distributed ledger technologies.  Recommended:  Knowledge of basic Networking , OS or Distributed Systems (CS 140, CS 144) and basic probability courses (CS 109, EE 178).", "courseAttributes": "Terms: Spr | Units: 1 | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Technology for Financial Systems", "courseNumber": "CS 349F:", "courseDescription": "Financial systems have spurred technological innovation and, in turn, are driven by cutting-edge technological developments.  This seminar course explores the synergy.  Students will learn from faculty and industry experts (from the finance and tech industries) how to build faster, fairer and better fintech.  Topics include network infrastructure: packet switch architectures, data center fabrics, ultra-low latency trading systems and financial exchange fabrics; cloud computing infrastructure: building large-scale risk computation platforms using virtual machines, containers and serverless computing; challenges and opportunities in building cloud-native financial exchanges: the role of fairness and synchronized clocks;  AI/ML in fintech; and trading systems based on distributed ledger technologies.  Recommended:  Knowledge of basic Networking , OS or Distributed Systems (CS 140, CS 144) and basic probability courses (CS 109, EE 178).", "courseAttributes": "Terms: Spr | Units: 1 | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Technology for Financial Systems", "courseNumber": "CS 349F:", "courseDescription": "Financial systems have spurred technological innovation and, in turn, are driven by cutting-edge technological developments.  This seminar course explores the synergy.  Students will learn from faculty and industry experts (from the finance and tech industries) how to build faster, fairer and better fintech.  Topics include network infrastructure: packet switch architectures, data center fabrics, ultra-low latency trading systems and financial exchange fabrics; cloud computing infrastructure: building large-scale risk computation platforms using virtual machines, containers and serverless computing; challenges and opportunities in building cloud-native financial exchanges: the role of fairness and synchronized clocks;  AI/ML in fintech; and trading systems based on distributed ledger technologies.  Recommended:  Knowledge of basic Networking , OS or Distributed Systems (CS 140, CS 144) and basic probability courses (CS 109, EE 178).", "courseAttributes": "Terms: Spr | Units: 1 | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Technology for Financial Systems", "courseNumber": "CS 349F:", "courseDescription": "Financial systems have spurred technological innovation and, in turn, are driven by cutting-edge technological developments.  This seminar course explores the synergy.  Students will learn from faculty and industry experts (from the finance and tech industries) how to build faster, fairer and better fintech.  Topics include network infrastructure: packet switch architectures, data center fabrics, ultra-low latency trading systems and financial exchange fabrics; cloud computing infrastructure: building large-scale risk computation platforms using virtual machines, containers and serverless computing; challenges and opportunities in building cloud-native financial exchanges: the role of fairness and synchronized clocks;  AI/ML in fintech; and trading systems based on distributed ledger technologies.  Recommended:  Knowledge of basic Networking , OS or Distributed Systems (CS 140, CS 144) and basic probability courses (CS 109, EE 178).", "courseAttributes": "Terms: Spr | Units: 1 | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Technology for Financial Systems", "courseNumber": "CS 349F:", "courseDescription": "Financial systems have spurred technological innovation and, in turn, are driven by cutting-edge technological developments.  This seminar course explores the synergy.  Students will learn from faculty and industry experts (from the finance and tech industries) how to build faster, fairer and better fintech.  Topics include network infrastructure: packet switch architectures, data center fabrics, ultra-low latency trading systems and financial exchange fabrics; cloud computing infrastructure: building large-scale risk computation platforms using virtual machines, containers and serverless computing; challenges and opportunities in building cloud-native financial exchanges: the role of fairness and synchronized clocks;  AI/ML in fintech; and trading systems based on distributed ledger technologies.  Recommended:  Knowledge of basic Networking , OS or Distributed Systems (CS 140, CS 144) and basic probability courses (CS 109, EE 178).", "courseAttributes": "Terms: Spr | Units: 1 | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}]}}
{"Dan Boneh": {"courses": [{"courseTitle": "Computer and Network Security", "courseNumber": "CS 155:", "courseDescription": "For seniors and first-year graduate students. Principles of computer systems security. Attack techniques and how to defend against them. Topics include: network attacks and defenses, operating system security, application security (web, apps, databases), malware, privacy, and security for mobile devices. Course projects focus on building reliable code. Prerequisite: 110. Recommended: basic Unix.", "courseAttributes": "Terms: Spr | Units: 3 | UG Reqs: GER:DB-EngrAppSci | Grading: Letter or Credit/No Credit", "courseLevel": "Undergraduate"}, {"courseTitle": "Computer and Network Security", "courseNumber": "CS 155:", "courseDescription": "For seniors and first-year graduate students. Principles of computer systems security. Attack techniques and how to defend against them. Topics include: network attacks and defenses, operating system security, application security (web, apps, databases), malware, privacy, and security for mobile devices. Course projects focus on building reliable code. Prerequisite: 110. Recommended: basic Unix.", "courseAttributes": "Terms: Spr | Units: 3 | UG Reqs: GER:DB-EngrAppSci | Grading: Letter or Credit/No Credit", "courseLevel": "Undergraduate"}, {"courseTitle": "Computer and Network Security", "courseNumber": "CS 155:", "courseDescription": "For seniors and first-year graduate students. Principles of computer systems security. Attack techniques and how to defend against them. Topics include: network attacks and defenses, operating system security, application security (web, apps, databases), malware, privacy, and security for mobile devices. Course projects focus on building reliable code. Prerequisite: 110. Recommended: basic Unix.", "courseAttributes": "Terms: Spr | Units: 3 | UG Reqs: GER:DB-EngrAppSci | Grading: Letter or Credit/No Credit", "courseLevel": "Undergraduate"}, {"courseTitle": "Computer and Network Security", "courseNumber": "CS 155:", "courseDescription": "For seniors and first-year graduate students. Principles of computer systems security. Attack techniques and how to defend against them. Topics include: network attacks and defenses, operating system security, application security (web, apps, databases), malware, privacy, and security for mobile devices. Course projects focus on building reliable code. Prerequisite: 110. Recommended: basic Unix.", "courseAttributes": "Terms: Spr | Units: 3 | UG Reqs: GER:DB-EngrAppSci | Grading: Letter or Credit/No Credit", "courseLevel": "Undergraduate"}, {"courseTitle": "Computer and Network Security", "courseNumber": "CS 155:", "courseDescription": "For seniors and first-year graduate students. Principles of computer systems security. Attack techniques and how to defend against them. Topics include: network attacks and defenses, operating system security, application security (web, apps, databases), malware, privacy, and security for mobile devices. Course projects focus on building reliable code. Prerequisite: 110. Recommended: basic Unix.", "courseAttributes": "Terms: Spr | Units: 3 | UG Reqs: GER:DB-EngrAppSci | Grading: Letter or Credit/No Credit", "courseLevel": "Undergraduate"}, {"courseTitle": "Computer and Network Security", "courseNumber": "CS 155:", "courseDescription": "For seniors and first-year graduate students. Principles of computer systems security. Attack techniques and how to defend against them. Topics include: network attacks and defenses, operating system security, application security (web, apps, databases), malware, privacy, and security for mobile devices. Course projects focus on building reliable code. Prerequisite: 110. Recommended: basic Unix.", "courseAttributes": "Terms: Spr | Units: 3 | UG Reqs: GER:DB-EngrAppSci | Grading: Letter or Credit/No Credit", "courseLevel": "Undergraduate"}, {"courseTitle": "Computer and Network Security", "courseNumber": "CS 155:", "courseDescription": "For seniors and first-year graduate students. Principles of computer systems security. Attack techniques and how to defend against them. Topics include: network attacks and defenses, operating system security, application security (web, apps, databases), malware, privacy, and security for mobile devices. Course projects focus on building reliable code. Prerequisite: 110. Recommended: basic Unix.", "courseAttributes": "Terms: Spr | Units: 3 | UG Reqs: GER:DB-EngrAppSci | Grading: Letter or Credit/No Credit", "courseLevel": "Undergraduate"}, {"courseTitle": "Computer and Network Security", "courseNumber": "CS 155:", "courseDescription": "For seniors and first-year graduate students. Principles of computer systems security. Attack techniques and how to defend against them. Topics include: network attacks and defenses, operating system security, application security (web, apps, databases), malware, privacy, and security for mobile devices. Course projects focus on building reliable code. Prerequisite: 110. Recommended: basic Unix.", "courseAttributes": "Terms: Spr | Units: 3 | UG Reqs: GER:DB-EngrAppSci | Grading: Letter or Credit/No Credit", "courseLevel": "Undergraduate"}]}}
{"Dorsa Sadigh": {"courses": [{"courseTitle": "Independent Work", "courseNumber": "CS 199:", "courseDescription": "Special study under faculty direction, usually leading to a written report. Letter grade; if not appropriate, enroll in 199P.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)", "courseLevel": "Undergraduate"}]}}
{"Anshul Kundaje": {"courses": [{"courseTitle": "Deep Learning in Genomics and Biomedicine (BIOMEDIN 273B, CS 273B, GENE 236)", "courseNumber": "BIODS 237:", "courseDescription": "Recent breakthroughs in high-throughput genomic and biomedical data are transforming biological sciences into \"big data\" disciplines. In parallel, progress in deep neural networks are revolutionizing fields such as image recognition, natural language processing and, more broadly, AI. This course explores the exciting intersection between these two advances. The course will start with an introduction to deep learning and overview the relevant background in genomics and high-throughput biotechnology, focusing on the available data and their relevance. It will then cover the ongoing developments in deep learning (supervised, unsupervised and generative models) with the focus on the applications of these methods to biomedical data, which are beginning to produced dramatic results. In addition to predictive modeling, the course emphasizes how to visualize and extract interpretable, biological insights from such models. Recent papers from the literature will be presented and discussed. Students will be introduced to and work with popular deep learning software frameworks. Students will work in groups on a final class project using real world datasets. Prerequisites: College calculus, linear algebra, basic probability and statistics such as CS109, and basic machine learning such as CS229. No prior knowledge of genomics is necessary.", "courseAttributes": "Terms: Aut | Units: 3 | Grading: Medical Option (Med-Ltr-CR/NC)", "courseLevel": "Graduate"}, {"courseTitle": "Deep Learning in Genomics and Biomedicine (BIOMEDIN 273B, CS 273B, GENE 236)", "courseNumber": "BIODS 237:", "courseDescription": "Recent breakthroughs in high-throughput genomic and biomedical data are transforming biological sciences into \"big data\" disciplines. In parallel, progress in deep neural networks are revolutionizing fields such as image recognition, natural language processing and, more broadly, AI. This course explores the exciting intersection between these two advances. The course will start with an introduction to deep learning and overview the relevant background in genomics and high-throughput biotechnology, focusing on the available data and their relevance. It will then cover the ongoing developments in deep learning (supervised, unsupervised and generative models) with the focus on the applications of these methods to biomedical data, which are beginning to produced dramatic results. In addition to predictive modeling, the course emphasizes how to visualize and extract interpretable, biological insights from such models. Recent papers from the literature will be presented and discussed. Students will be introduced to and work with popular deep learning software frameworks. Students will work in groups on a final class project using real world datasets. Prerequisites: College calculus, linear algebra, basic probability and statistics such as CS109, and basic machine learning such as CS229. No prior knowledge of genomics is necessary.", "courseAttributes": "Terms: Aut | Units: 3 | Grading: Medical Option (Med-Ltr-CR/NC)", "courseLevel": "Graduate"}, {"courseTitle": "Deep Learning in Genomics and Biomedicine (BIOMEDIN 273B, CS 273B, GENE 236)", "courseNumber": "BIODS 237:", "courseDescription": "Recent breakthroughs in high-throughput genomic and biomedical data are transforming biological sciences into \"big data\" disciplines. In parallel, progress in deep neural networks are revolutionizing fields such as image recognition, natural language processing and, more broadly, AI. This course explores the exciting intersection between these two advances. The course will start with an introduction to deep learning and overview the relevant background in genomics and high-throughput biotechnology, focusing on the available data and their relevance. It will then cover the ongoing developments in deep learning (supervised, unsupervised and generative models) with the focus on the applications of these methods to biomedical data, which are beginning to produced dramatic results. In addition to predictive modeling, the course emphasizes how to visualize and extract interpretable, biological insights from such models. Recent papers from the literature will be presented and discussed. Students will be introduced to and work with popular deep learning software frameworks. Students will work in groups on a final class project using real world datasets. Prerequisites: College calculus, linear algebra, basic probability and statistics such as CS109, and basic machine learning such as CS229. No prior knowledge of genomics is necessary.", "courseAttributes": "Terms: Aut | Units: 3 | Grading: Medical Option (Med-Ltr-CR/NC)", "courseLevel": "Graduate"}, {"courseTitle": "Deep Learning in Genomics and Biomedicine (BIOMEDIN 273B, CS 273B, GENE 236)", "courseNumber": "BIODS 237:", "courseDescription": "Recent breakthroughs in high-throughput genomic and biomedical data are transforming biological sciences into \"big data\" disciplines. In parallel, progress in deep neural networks are revolutionizing fields such as image recognition, natural language processing and, more broadly, AI. This course explores the exciting intersection between these two advances. The course will start with an introduction to deep learning and overview the relevant background in genomics and high-throughput biotechnology, focusing on the available data and their relevance. It will then cover the ongoing developments in deep learning (supervised, unsupervised and generative models) with the focus on the applications of these methods to biomedical data, which are beginning to produced dramatic results. In addition to predictive modeling, the course emphasizes how to visualize and extract interpretable, biological insights from such models. Recent papers from the literature will be presented and discussed. Students will be introduced to and work with popular deep learning software frameworks. Students will work in groups on a final class project using real world datasets. Prerequisites: College calculus, linear algebra, basic probability and statistics such as CS109, and basic machine learning such as CS229. No prior knowledge of genomics is necessary.", "courseAttributes": "Terms: Aut | Units: 3 | Grading: Medical Option (Med-Ltr-CR/NC)", "courseLevel": "Graduate"}, {"courseTitle": "Deep Learning in Genomics and Biomedicine (BIOMEDIN 273B, CS 273B, GENE 236)", "courseNumber": "BIODS 237:", "courseDescription": "Recent breakthroughs in high-throughput genomic and biomedical data are transforming biological sciences into \"big data\" disciplines. In parallel, progress in deep neural networks are revolutionizing fields such as image recognition, natural language processing and, more broadly, AI. This course explores the exciting intersection between these two advances. The course will start with an introduction to deep learning and overview the relevant background in genomics and high-throughput biotechnology, focusing on the available data and their relevance. It will then cover the ongoing developments in deep learning (supervised, unsupervised and generative models) with the focus on the applications of these methods to biomedical data, which are beginning to produced dramatic results. In addition to predictive modeling, the course emphasizes how to visualize and extract interpretable, biological insights from such models. Recent papers from the literature will be presented and discussed. Students will be introduced to and work with popular deep learning software frameworks. Students will work in groups on a final class project using real world datasets. Prerequisites: College calculus, linear algebra, basic probability and statistics such as CS109, and basic machine learning such as CS229. No prior knowledge of genomics is necessary.", "courseAttributes": "Terms: Aut | Units: 3 | Grading: Medical Option (Med-Ltr-CR/NC)", "courseLevel": "Graduate"}, {"courseTitle": "Deep Learning in Genomics and Biomedicine (BIOMEDIN 273B, CS 273B, GENE 236)", "courseNumber": "BIODS 237:", "courseDescription": "Recent breakthroughs in high-throughput genomic and biomedical data are transforming biological sciences into \"big data\" disciplines. In parallel, progress in deep neural networks are revolutionizing fields such as image recognition, natural language processing and, more broadly, AI. This course explores the exciting intersection between these two advances. The course will start with an introduction to deep learning and overview the relevant background in genomics and high-throughput biotechnology, focusing on the available data and their relevance. It will then cover the ongoing developments in deep learning (supervised, unsupervised and generative models) with the focus on the applications of these methods to biomedical data, which are beginning to produced dramatic results. In addition to predictive modeling, the course emphasizes how to visualize and extract interpretable, biological insights from such models. Recent papers from the literature will be presented and discussed. Students will be introduced to and work with popular deep learning software frameworks. Students will work in groups on a final class project using real world datasets. Prerequisites: College calculus, linear algebra, basic probability and statistics such as CS109, and basic machine learning such as CS229. No prior knowledge of genomics is necessary.", "courseAttributes": "Terms: Aut | Units: 3 | Grading: Medical Option (Med-Ltr-CR/NC)", "courseLevel": "Graduate"}, {"courseTitle": "Deep Learning in Genomics and Biomedicine (BIOMEDIN 273B, CS 273B, GENE 236)", "courseNumber": "BIODS 237:", "courseDescription": "Recent breakthroughs in high-throughput genomic and biomedical data are transforming biological sciences into \"big data\" disciplines. In parallel, progress in deep neural networks are revolutionizing fields such as image recognition, natural language processing and, more broadly, AI. This course explores the exciting intersection between these two advances. The course will start with an introduction to deep learning and overview the relevant background in genomics and high-throughput biotechnology, focusing on the available data and their relevance. It will then cover the ongoing developments in deep learning (supervised, unsupervised and generative models) with the focus on the applications of these methods to biomedical data, which are beginning to produced dramatic results. In addition to predictive modeling, the course emphasizes how to visualize and extract interpretable, biological insights from such models. Recent papers from the literature will be presented and discussed. Students will be introduced to and work with popular deep learning software frameworks. Students will work in groups on a final class project using real world datasets. Prerequisites: College calculus, linear algebra, basic probability and statistics such as CS109, and basic machine learning such as CS229. No prior knowledge of genomics is necessary.", "courseAttributes": "Terms: Aut | Units: 3 | Grading: Medical Option (Med-Ltr-CR/NC)", "courseLevel": "Graduate"}, {"courseTitle": "Deep Learning in Genomics and Biomedicine (BIOMEDIN 273B, CS 273B, GENE 236)", "courseNumber": "BIODS 237:", "courseDescription": "Recent breakthroughs in high-throughput genomic and biomedical data are transforming biological sciences into \"big data\" disciplines. In parallel, progress in deep neural networks are revolutionizing fields such as image recognition, natural language processing and, more broadly, AI. This course explores the exciting intersection between these two advances. The course will start with an introduction to deep learning and overview the relevant background in genomics and high-throughput biotechnology, focusing on the available data and their relevance. It will then cover the ongoing developments in deep learning (supervised, unsupervised and generative models) with the focus on the applications of these methods to biomedical data, which are beginning to produced dramatic results. In addition to predictive modeling, the course emphasizes how to visualize and extract interpretable, biological insights from such models. Recent papers from the literature will be presented and discussed. Students will be introduced to and work with popular deep learning software frameworks. Students will work in groups on a final class project using real world datasets. Prerequisites: College calculus, linear algebra, basic probability and statistics such as CS109, and basic machine learning such as CS229. No prior knowledge of genomics is necessary.", "courseAttributes": "Terms: Aut | Units: 3 | Grading: Medical Option (Med-Ltr-CR/NC)", "courseLevel": "Graduate"}, {"courseTitle": "Deep Learning in Genomics and Biomedicine (BIOMEDIN 273B, CS 273B, GENE 236)", "courseNumber": "BIODS 237:", "courseDescription": "Recent breakthroughs in high-throughput genomic and biomedical data are transforming biological sciences into \"big data\" disciplines. In parallel, progress in deep neural networks are revolutionizing fields such as image recognition, natural language processing and, more broadly, AI. This course explores the exciting intersection between these two advances. The course will start with an introduction to deep learning and overview the relevant background in genomics and high-throughput biotechnology, focusing on the available data and their relevance. It will then cover the ongoing developments in deep learning (supervised, unsupervised and generative models) with the focus on the applications of these methods to biomedical data, which are beginning to produced dramatic results. In addition to predictive modeling, the course emphasizes how to visualize and extract interpretable, biological insights from such models. Recent papers from the literature will be presented and discussed. Students will be introduced to and work with popular deep learning software frameworks. Students will work in groups on a final class project using real world datasets. Prerequisites: College calculus, linear algebra, basic probability and statistics such as CS109, and basic machine learning such as CS229. No prior knowledge of genomics is necessary.", "courseAttributes": "Terms: Aut | Units: 3 | Grading: Medical Option (Med-Ltr-CR/NC)", "courseLevel": "Graduate"}, {"courseTitle": "Deep Learning in Genomics and Biomedicine (BIOMEDIN 273B, CS 273B, GENE 236)", "courseNumber": "BIODS 237:", "courseDescription": "Recent breakthroughs in high-throughput genomic and biomedical data are transforming biological sciences into \"big data\" disciplines. In parallel, progress in deep neural networks are revolutionizing fields such as image recognition, natural language processing and, more broadly, AI. This course explores the exciting intersection between these two advances. The course will start with an introduction to deep learning and overview the relevant background in genomics and high-throughput biotechnology, focusing on the available data and their relevance. It will then cover the ongoing developments in deep learning (supervised, unsupervised and generative models) with the focus on the applications of these methods to biomedical data, which are beginning to produced dramatic results. In addition to predictive modeling, the course emphasizes how to visualize and extract interpretable, biological insights from such models. Recent papers from the literature will be presented and discussed. Students will be introduced to and work with popular deep learning software frameworks. Students will work in groups on a final class project using real world datasets. Prerequisites: College calculus, linear algebra, basic probability and statistics such as CS109, and basic machine learning such as CS229. No prior knowledge of genomics is necessary.", "courseAttributes": "Terms: Aut | Units: 3 | Grading: Medical Option (Med-Ltr-CR/NC)", "courseLevel": "Graduate"}, {"courseTitle": "Deep Learning in Genomics and Biomedicine (BIOMEDIN 273B, CS 273B, GENE 236)", "courseNumber": "BIODS 237:", "courseDescription": "Recent breakthroughs in high-throughput genomic and biomedical data are transforming biological sciences into \"big data\" disciplines. In parallel, progress in deep neural networks are revolutionizing fields such as image recognition, natural language processing and, more broadly, AI. This course explores the exciting intersection between these two advances. The course will start with an introduction to deep learning and overview the relevant background in genomics and high-throughput biotechnology, focusing on the available data and their relevance. It will then cover the ongoing developments in deep learning (supervised, unsupervised and generative models) with the focus on the applications of these methods to biomedical data, which are beginning to produced dramatic results. In addition to predictive modeling, the course emphasizes how to visualize and extract interpretable, biological insights from such models. Recent papers from the literature will be presented and discussed. Students will be introduced to and work with popular deep learning software frameworks. Students will work in groups on a final class project using real world datasets. Prerequisites: College calculus, linear algebra, basic probability and statistics such as CS109, and basic machine learning such as CS229. No prior knowledge of genomics is necessary.", "courseAttributes": "Terms: Aut | Units: 3 | Grading: Medical Option (Med-Ltr-CR/NC)", "courseLevel": "Graduate"}, {"courseTitle": "Deep Learning in Genomics and Biomedicine (BIOMEDIN 273B, CS 273B, GENE 236)", "courseNumber": "BIODS 237:", "courseDescription": "Recent breakthroughs in high-throughput genomic and biomedical data are transforming biological sciences into \"big data\" disciplines. In parallel, progress in deep neural networks are revolutionizing fields such as image recognition, natural language processing and, more broadly, AI. This course explores the exciting intersection between these two advances. The course will start with an introduction to deep learning and overview the relevant background in genomics and high-throughput biotechnology, focusing on the available data and their relevance. It will then cover the ongoing developments in deep learning (supervised, unsupervised and generative models) with the focus on the applications of these methods to biomedical data, which are beginning to produced dramatic results. In addition to predictive modeling, the course emphasizes how to visualize and extract interpretable, biological insights from such models. Recent papers from the literature will be presented and discussed. Students will be introduced to and work with popular deep learning software frameworks. Students will work in groups on a final class project using real world datasets. Prerequisites: College calculus, linear algebra, basic probability and statistics such as CS109, and basic machine learning such as CS229. No prior knowledge of genomics is necessary.", "courseAttributes": "Terms: Aut | Units: 3 | Grading: Medical Option (Med-Ltr-CR/NC)", "courseLevel": "Graduate"}, {"courseTitle": "Deep Learning in Genomics and Biomedicine (BIOMEDIN 273B, CS 273B, GENE 236)", "courseNumber": "BIODS 237:", "courseDescription": "Recent breakthroughs in high-throughput genomic and biomedical data are transforming biological sciences into \"big data\" disciplines. In parallel, progress in deep neural networks are revolutionizing fields such as image recognition, natural language processing and, more broadly, AI. This course explores the exciting intersection between these two advances. The course will start with an introduction to deep learning and overview the relevant background in genomics and high-throughput biotechnology, focusing on the available data and their relevance. It will then cover the ongoing developments in deep learning (supervised, unsupervised and generative models) with the focus on the applications of these methods to biomedical data, which are beginning to produced dramatic results. In addition to predictive modeling, the course emphasizes how to visualize and extract interpretable, biological insights from such models. Recent papers from the literature will be presented and discussed. Students will be introduced to and work with popular deep learning software frameworks. Students will work in groups on a final class project using real world datasets. Prerequisites: College calculus, linear algebra, basic probability and statistics such as CS109, and basic machine learning such as CS229. No prior knowledge of genomics is necessary.", "courseAttributes": "Terms: Aut | Units: 3 | Grading: Medical Option (Med-Ltr-CR/NC)", "courseLevel": "Graduate"}, {"courseTitle": "Deep Learning in Genomics and Biomedicine (BIOMEDIN 273B, CS 273B, GENE 236)", "courseNumber": "BIODS 237:", "courseDescription": "Recent breakthroughs in high-throughput genomic and biomedical data are transforming biological sciences into \"big data\" disciplines. In parallel, progress in deep neural networks are revolutionizing fields such as image recognition, natural language processing and, more broadly, AI. This course explores the exciting intersection between these two advances. The course will start with an introduction to deep learning and overview the relevant background in genomics and high-throughput biotechnology, focusing on the available data and their relevance. It will then cover the ongoing developments in deep learning (supervised, unsupervised and generative models) with the focus on the applications of these methods to biomedical data, which are beginning to produced dramatic results. In addition to predictive modeling, the course emphasizes how to visualize and extract interpretable, biological insights from such models. Recent papers from the literature will be presented and discussed. Students will be introduced to and work with popular deep learning software frameworks. Students will work in groups on a final class project using real world datasets. Prerequisites: College calculus, linear algebra, basic probability and statistics such as CS109, and basic machine learning such as CS229. No prior knowledge of genomics is necessary.", "courseAttributes": "Terms: Aut | Units: 3 | Grading: Medical Option (Med-Ltr-CR/NC)", "courseLevel": "Graduate"}, {"courseTitle": "Deep Learning in Genomics and Biomedicine (BIOMEDIN 273B, CS 273B, GENE 236)", "courseNumber": "BIODS 237:", "courseDescription": "Recent breakthroughs in high-throughput genomic and biomedical data are transforming biological sciences into \"big data\" disciplines. In parallel, progress in deep neural networks are revolutionizing fields such as image recognition, natural language processing and, more broadly, AI. This course explores the exciting intersection between these two advances. The course will start with an introduction to deep learning and overview the relevant background in genomics and high-throughput biotechnology, focusing on the available data and their relevance. It will then cover the ongoing developments in deep learning (supervised, unsupervised and generative models) with the focus on the applications of these methods to biomedical data, which are beginning to produced dramatic results. In addition to predictive modeling, the course emphasizes how to visualize and extract interpretable, biological insights from such models. Recent papers from the literature will be presented and discussed. Students will be introduced to and work with popular deep learning software frameworks. Students will work in groups on a final class project using real world datasets. Prerequisites: College calculus, linear algebra, basic probability and statistics such as CS109, and basic machine learning such as CS229. No prior knowledge of genomics is necessary.", "courseAttributes": "Terms: Aut | Units: 3 | Grading: Medical Option (Med-Ltr-CR/NC)", "courseLevel": "Graduate"}, {"courseTitle": "Deep Learning in Genomics and Biomedicine (BIOMEDIN 273B, CS 273B, GENE 236)", "courseNumber": "BIODS 237:", "courseDescription": "Recent breakthroughs in high-throughput genomic and biomedical data are transforming biological sciences into \"big data\" disciplines. In parallel, progress in deep neural networks are revolutionizing fields such as image recognition, natural language processing and, more broadly, AI. This course explores the exciting intersection between these two advances. The course will start with an introduction to deep learning and overview the relevant background in genomics and high-throughput biotechnology, focusing on the available data and their relevance. It will then cover the ongoing developments in deep learning (supervised, unsupervised and generative models) with the focus on the applications of these methods to biomedical data, which are beginning to produced dramatic results. In addition to predictive modeling, the course emphasizes how to visualize and extract interpretable, biological insights from such models. Recent papers from the literature will be presented and discussed. Students will be introduced to and work with popular deep learning software frameworks. Students will work in groups on a final class project using real world datasets. Prerequisites: College calculus, linear algebra, basic probability and statistics such as CS109, and basic machine learning such as CS229. No prior knowledge of genomics is necessary.", "courseAttributes": "Terms: Aut | Units: 3 | Grading: Medical Option (Med-Ltr-CR/NC)", "courseLevel": "Graduate"}, {"courseTitle": "Deep Learning in Genomics and Biomedicine (BIOMEDIN 273B, CS 273B, GENE 236)", "courseNumber": "BIODS 237:", "courseDescription": "Recent breakthroughs in high-throughput genomic and biomedical data are transforming biological sciences into \"big data\" disciplines. In parallel, progress in deep neural networks are revolutionizing fields such as image recognition, natural language processing and, more broadly, AI. This course explores the exciting intersection between these two advances. The course will start with an introduction to deep learning and overview the relevant background in genomics and high-throughput biotechnology, focusing on the available data and their relevance. It will then cover the ongoing developments in deep learning (supervised, unsupervised and generative models) with the focus on the applications of these methods to biomedical data, which are beginning to produced dramatic results. In addition to predictive modeling, the course emphasizes how to visualize and extract interpretable, biological insights from such models. Recent papers from the literature will be presented and discussed. Students will be introduced to and work with popular deep learning software frameworks. Students will work in groups on a final class project using real world datasets. Prerequisites: College calculus, linear algebra, basic probability and statistics such as CS109, and basic machine learning such as CS229. No prior knowledge of genomics is necessary.", "courseAttributes": "Terms: Aut | Units: 3 | Grading: Medical Option (Med-Ltr-CR/NC)", "courseLevel": "Graduate"}, {"courseTitle": "Deep Learning in Genomics and Biomedicine (BIOMEDIN 273B, CS 273B, GENE 236)", "courseNumber": "BIODS 237:", "courseDescription": "Recent breakthroughs in high-throughput genomic and biomedical data are transforming biological sciences into \"big data\" disciplines. In parallel, progress in deep neural networks are revolutionizing fields such as image recognition, natural language processing and, more broadly, AI. This course explores the exciting intersection between these two advances. The course will start with an introduction to deep learning and overview the relevant background in genomics and high-throughput biotechnology, focusing on the available data and their relevance. It will then cover the ongoing developments in deep learning (supervised, unsupervised and generative models) with the focus on the applications of these methods to biomedical data, which are beginning to produced dramatic results. In addition to predictive modeling, the course emphasizes how to visualize and extract interpretable, biological insights from such models. Recent papers from the literature will be presented and discussed. Students will be introduced to and work with popular deep learning software frameworks. Students will work in groups on a final class project using real world datasets. Prerequisites: College calculus, linear algebra, basic probability and statistics such as CS109, and basic machine learning such as CS229. No prior knowledge of genomics is necessary.", "courseAttributes": "Terms: Aut | Units: 3 | Grading: Medical Option (Med-Ltr-CR/NC)", "courseLevel": "Graduate"}, {"courseTitle": "Deep Learning in Genomics and Biomedicine (BIOMEDIN 273B, CS 273B, GENE 236)", "courseNumber": "BIODS 237:", "courseDescription": "Recent breakthroughs in high-throughput genomic and biomedical data are transforming biological sciences into \"big data\" disciplines. In parallel, progress in deep neural networks are revolutionizing fields such as image recognition, natural language processing and, more broadly, AI. This course explores the exciting intersection between these two advances. The course will start with an introduction to deep learning and overview the relevant background in genomics and high-throughput biotechnology, focusing on the available data and their relevance. It will then cover the ongoing developments in deep learning (supervised, unsupervised and generative models) with the focus on the applications of these methods to biomedical data, which are beginning to produced dramatic results. In addition to predictive modeling, the course emphasizes how to visualize and extract interpretable, biological insights from such models. Recent papers from the literature will be presented and discussed. Students will be introduced to and work with popular deep learning software frameworks. Students will work in groups on a final class project using real world datasets. Prerequisites: College calculus, linear algebra, basic probability and statistics such as CS109, and basic machine learning such as CS229. No prior knowledge of genomics is necessary.", "courseAttributes": "Terms: Aut | Units: 3 | Grading: Medical Option (Med-Ltr-CR/NC)", "courseLevel": "Graduate"}, {"courseTitle": "Deep Learning in Genomics and Biomedicine (BIOMEDIN 273B, CS 273B, GENE 236)", "courseNumber": "BIODS 237:", "courseDescription": "Recent breakthroughs in high-throughput genomic and biomedical data are transforming biological sciences into \"big data\" disciplines. In parallel, progress in deep neural networks are revolutionizing fields such as image recognition, natural language processing and, more broadly, AI. This course explores the exciting intersection between these two advances. The course will start with an introduction to deep learning and overview the relevant background in genomics and high-throughput biotechnology, focusing on the available data and their relevance. It will then cover the ongoing developments in deep learning (supervised, unsupervised and generative models) with the focus on the applications of these methods to biomedical data, which are beginning to produced dramatic results. In addition to predictive modeling, the course emphasizes how to visualize and extract interpretable, biological insights from such models. Recent papers from the literature will be presented and discussed. Students will be introduced to and work with popular deep learning software frameworks. Students will work in groups on a final class project using real world datasets. Prerequisites: College calculus, linear algebra, basic probability and statistics such as CS109, and basic machine learning such as CS229. No prior knowledge of genomics is necessary.", "courseAttributes": "Terms: Aut | Units: 3 | Grading: Medical Option (Med-Ltr-CR/NC)", "courseLevel": "Graduate"}, {"courseTitle": "Deep Learning in Genomics and Biomedicine (BIOMEDIN 273B, CS 273B, GENE 236)", "courseNumber": "BIODS 237:", "courseDescription": "Recent breakthroughs in high-throughput genomic and biomedical data are transforming biological sciences into \"big data\" disciplines. In parallel, progress in deep neural networks are revolutionizing fields such as image recognition, natural language processing and, more broadly, AI. This course explores the exciting intersection between these two advances. The course will start with an introduction to deep learning and overview the relevant background in genomics and high-throughput biotechnology, focusing on the available data and their relevance. It will then cover the ongoing developments in deep learning (supervised, unsupervised and generative models) with the focus on the applications of these methods to biomedical data, which are beginning to produced dramatic results. In addition to predictive modeling, the course emphasizes how to visualize and extract interpretable, biological insights from such models. Recent papers from the literature will be presented and discussed. Students will be introduced to and work with popular deep learning software frameworks. Students will work in groups on a final class project using real world datasets. Prerequisites: College calculus, linear algebra, basic probability and statistics such as CS109, and basic machine learning such as CS229. No prior knowledge of genomics is necessary.", "courseAttributes": "Terms: Aut | Units: 3 | Grading: Medical Option (Med-Ltr-CR/NC)", "courseLevel": "Graduate"}, {"courseTitle": "Deep Learning in Genomics and Biomedicine (BIOMEDIN 273B, CS 273B, GENE 236)", "courseNumber": "BIODS 237:", "courseDescription": "Recent breakthroughs in high-throughput genomic and biomedical data are transforming biological sciences into \"big data\" disciplines. In parallel, progress in deep neural networks are revolutionizing fields such as image recognition, natural language processing and, more broadly, AI. This course explores the exciting intersection between these two advances. The course will start with an introduction to deep learning and overview the relevant background in genomics and high-throughput biotechnology, focusing on the available data and their relevance. It will then cover the ongoing developments in deep learning (supervised, unsupervised and generative models) with the focus on the applications of these methods to biomedical data, which are beginning to produced dramatic results. In addition to predictive modeling, the course emphasizes how to visualize and extract interpretable, biological insights from such models. Recent papers from the literature will be presented and discussed. Students will be introduced to and work with popular deep learning software frameworks. Students will work in groups on a final class project using real world datasets. Prerequisites: College calculus, linear algebra, basic probability and statistics such as CS109, and basic machine learning such as CS229. No prior knowledge of genomics is necessary.", "courseAttributes": "Terms: Aut | Units: 3 | Grading: Medical Option (Med-Ltr-CR/NC)", "courseLevel": "Graduate"}, {"courseTitle": "Deep Learning in Genomics and Biomedicine (BIOMEDIN 273B, CS 273B, GENE 236)", "courseNumber": "BIODS 237:", "courseDescription": "Recent breakthroughs in high-throughput genomic and biomedical data are transforming biological sciences into \"big data\" disciplines. In parallel, progress in deep neural networks are revolutionizing fields such as image recognition, natural language processing and, more broadly, AI. This course explores the exciting intersection between these two advances. The course will start with an introduction to deep learning and overview the relevant background in genomics and high-throughput biotechnology, focusing on the available data and their relevance. It will then cover the ongoing developments in deep learning (supervised, unsupervised and generative models) with the focus on the applications of these methods to biomedical data, which are beginning to produced dramatic results. In addition to predictive modeling, the course emphasizes how to visualize and extract interpretable, biological insights from such models. Recent papers from the literature will be presented and discussed. Students will be introduced to and work with popular deep learning software frameworks. Students will work in groups on a final class project using real world datasets. Prerequisites: College calculus, linear algebra, basic probability and statistics such as CS109, and basic machine learning such as CS229. No prior knowledge of genomics is necessary.", "courseAttributes": "Terms: Aut | Units: 3 | Grading: Medical Option (Med-Ltr-CR/NC)", "courseLevel": "Graduate"}, {"courseTitle": "Deep Learning in Genomics and Biomedicine (BIOMEDIN 273B, CS 273B, GENE 236)", "courseNumber": "BIODS 237:", "courseDescription": "Recent breakthroughs in high-throughput genomic and biomedical data are transforming biological sciences into \"big data\" disciplines. In parallel, progress in deep neural networks are revolutionizing fields such as image recognition, natural language processing and, more broadly, AI. This course explores the exciting intersection between these two advances. The course will start with an introduction to deep learning and overview the relevant background in genomics and high-throughput biotechnology, focusing on the available data and their relevance. It will then cover the ongoing developments in deep learning (supervised, unsupervised and generative models) with the focus on the applications of these methods to biomedical data, which are beginning to produced dramatic results. In addition to predictive modeling, the course emphasizes how to visualize and extract interpretable, biological insights from such models. Recent papers from the literature will be presented and discussed. Students will be introduced to and work with popular deep learning software frameworks. Students will work in groups on a final class project using real world datasets. Prerequisites: College calculus, linear algebra, basic probability and statistics such as CS109, and basic machine learning such as CS229. No prior knowledge of genomics is necessary.", "courseAttributes": "Terms: Aut | Units: 3 | Grading: Medical Option (Med-Ltr-CR/NC)", "courseLevel": "Graduate"}, {"courseTitle": "Deep Learning in Genomics and Biomedicine (BIOMEDIN 273B, CS 273B, GENE 236)", "courseNumber": "BIODS 237:", "courseDescription": "Recent breakthroughs in high-throughput genomic and biomedical data are transforming biological sciences into \"big data\" disciplines. In parallel, progress in deep neural networks are revolutionizing fields such as image recognition, natural language processing and, more broadly, AI. This course explores the exciting intersection between these two advances. The course will start with an introduction to deep learning and overview the relevant background in genomics and high-throughput biotechnology, focusing on the available data and their relevance. It will then cover the ongoing developments in deep learning (supervised, unsupervised and generative models) with the focus on the applications of these methods to biomedical data, which are beginning to produced dramatic results. In addition to predictive modeling, the course emphasizes how to visualize and extract interpretable, biological insights from such models. Recent papers from the literature will be presented and discussed. Students will be introduced to and work with popular deep learning software frameworks. Students will work in groups on a final class project using real world datasets. Prerequisites: College calculus, linear algebra, basic probability and statistics such as CS109, and basic machine learning such as CS229. No prior knowledge of genomics is necessary.", "courseAttributes": "Terms: Aut | Units: 3 | Grading: Medical Option (Med-Ltr-CR/NC)", "courseLevel": "Graduate"}, {"courseTitle": "Deep Learning in Genomics and Biomedicine (BIOMEDIN 273B, CS 273B, GENE 236)", "courseNumber": "BIODS 237:", "courseDescription": "Recent breakthroughs in high-throughput genomic and biomedical data are transforming biological sciences into \"big data\" disciplines. In parallel, progress in deep neural networks are revolutionizing fields such as image recognition, natural language processing and, more broadly, AI. This course explores the exciting intersection between these two advances. The course will start with an introduction to deep learning and overview the relevant background in genomics and high-throughput biotechnology, focusing on the available data and their relevance. It will then cover the ongoing developments in deep learning (supervised, unsupervised and generative models) with the focus on the applications of these methods to biomedical data, which are beginning to produced dramatic results. In addition to predictive modeling, the course emphasizes how to visualize and extract interpretable, biological insights from such models. Recent papers from the literature will be presented and discussed. Students will be introduced to and work with popular deep learning software frameworks. Students will work in groups on a final class project using real world datasets. Prerequisites: College calculus, linear algebra, basic probability and statistics such as CS109, and basic machine learning such as CS229. No prior knowledge of genomics is necessary.", "courseAttributes": "Terms: Aut | Units: 3 | Grading: Medical Option (Med-Ltr-CR/NC)", "courseLevel": "Graduate"}, {"courseTitle": "Deep Learning in Genomics and Biomedicine (BIOMEDIN 273B, CS 273B, GENE 236)", "courseNumber": "BIODS 237:", "courseDescription": "Recent breakthroughs in high-throughput genomic and biomedical data are transforming biological sciences into \"big data\" disciplines. In parallel, progress in deep neural networks are revolutionizing fields such as image recognition, natural language processing and, more broadly, AI. This course explores the exciting intersection between these two advances. The course will start with an introduction to deep learning and overview the relevant background in genomics and high-throughput biotechnology, focusing on the available data and their relevance. It will then cover the ongoing developments in deep learning (supervised, unsupervised and generative models) with the focus on the applications of these methods to biomedical data, which are beginning to produced dramatic results. In addition to predictive modeling, the course emphasizes how to visualize and extract interpretable, biological insights from such models. Recent papers from the literature will be presented and discussed. Students will be introduced to and work with popular deep learning software frameworks. Students will work in groups on a final class project using real world datasets. Prerequisites: College calculus, linear algebra, basic probability and statistics such as CS109, and basic machine learning such as CS229. No prior knowledge of genomics is necessary.", "courseAttributes": "Terms: Aut | Units: 3 | Grading: Medical Option (Med-Ltr-CR/NC)", "courseLevel": "Graduate"}, {"courseTitle": "Deep Learning in Genomics and Biomedicine (BIOMEDIN 273B, CS 273B, GENE 236)", "courseNumber": "BIODS 237:", "courseDescription": "Recent breakthroughs in high-throughput genomic and biomedical data are transforming biological sciences into \"big data\" disciplines. In parallel, progress in deep neural networks are revolutionizing fields such as image recognition, natural language processing and, more broadly, AI. This course explores the exciting intersection between these two advances. The course will start with an introduction to deep learning and overview the relevant background in genomics and high-throughput biotechnology, focusing on the available data and their relevance. It will then cover the ongoing developments in deep learning (supervised, unsupervised and generative models) with the focus on the applications of these methods to biomedical data, which are beginning to produced dramatic results. In addition to predictive modeling, the course emphasizes how to visualize and extract interpretable, biological insights from such models. Recent papers from the literature will be presented and discussed. Students will be introduced to and work with popular deep learning software frameworks. Students will work in groups on a final class project using real world datasets. Prerequisites: College calculus, linear algebra, basic probability and statistics such as CS109, and basic machine learning such as CS229. No prior knowledge of genomics is necessary.", "courseAttributes": "Terms: Aut | Units: 3 | Grading: Medical Option (Med-Ltr-CR/NC)", "courseLevel": "Graduate"}, {"courseTitle": "Deep Learning in Genomics and Biomedicine (BIOMEDIN 273B, CS 273B, GENE 236)", "courseNumber": "BIODS 237:", "courseDescription": "Recent breakthroughs in high-throughput genomic and biomedical data are transforming biological sciences into \"big data\" disciplines. In parallel, progress in deep neural networks are revolutionizing fields such as image recognition, natural language processing and, more broadly, AI. This course explores the exciting intersection between these two advances. The course will start with an introduction to deep learning and overview the relevant background in genomics and high-throughput biotechnology, focusing on the available data and their relevance. It will then cover the ongoing developments in deep learning (supervised, unsupervised and generative models) with the focus on the applications of these methods to biomedical data, which are beginning to produced dramatic results. In addition to predictive modeling, the course emphasizes how to visualize and extract interpretable, biological insights from such models. Recent papers from the literature will be presented and discussed. Students will be introduced to and work with popular deep learning software frameworks. Students will work in groups on a final class project using real world datasets. Prerequisites: College calculus, linear algebra, basic probability and statistics such as CS109, and basic machine learning such as CS229. No prior knowledge of genomics is necessary.", "courseAttributes": "Terms: Aut | Units: 3 | Grading: Medical Option (Med-Ltr-CR/NC)", "courseLevel": "Graduate"}, {"courseTitle": "Deep Learning in Genomics and Biomedicine (BIOMEDIN 273B, CS 273B, GENE 236)", "courseNumber": "BIODS 237:", "courseDescription": "Recent breakthroughs in high-throughput genomic and biomedical data are transforming biological sciences into \"big data\" disciplines. In parallel, progress in deep neural networks are revolutionizing fields such as image recognition, natural language processing and, more broadly, AI. This course explores the exciting intersection between these two advances. The course will start with an introduction to deep learning and overview the relevant background in genomics and high-throughput biotechnology, focusing on the available data and their relevance. It will then cover the ongoing developments in deep learning (supervised, unsupervised and generative models) with the focus on the applications of these methods to biomedical data, which are beginning to produced dramatic results. In addition to predictive modeling, the course emphasizes how to visualize and extract interpretable, biological insights from such models. Recent papers from the literature will be presented and discussed. Students will be introduced to and work with popular deep learning software frameworks. Students will work in groups on a final class project using real world datasets. Prerequisites: College calculus, linear algebra, basic probability and statistics such as CS109, and basic machine learning such as CS229. No prior knowledge of genomics is necessary.", "courseAttributes": "Terms: Aut | Units: 3 | Grading: Medical Option (Med-Ltr-CR/NC)", "courseLevel": "Graduate"}, {"courseTitle": "Deep Learning in Genomics and Biomedicine (BIOMEDIN 273B, CS 273B, GENE 236)", "courseNumber": "BIODS 237:", "courseDescription": "Recent breakthroughs in high-throughput genomic and biomedical data are transforming biological sciences into \"big data\" disciplines. In parallel, progress in deep neural networks are revolutionizing fields such as image recognition, natural language processing and, more broadly, AI. This course explores the exciting intersection between these two advances. The course will start with an introduction to deep learning and overview the relevant background in genomics and high-throughput biotechnology, focusing on the available data and their relevance. It will then cover the ongoing developments in deep learning (supervised, unsupervised and generative models) with the focus on the applications of these methods to biomedical data, which are beginning to produced dramatic results. In addition to predictive modeling, the course emphasizes how to visualize and extract interpretable, biological insights from such models. Recent papers from the literature will be presented and discussed. Students will be introduced to and work with popular deep learning software frameworks. Students will work in groups on a final class project using real world datasets. Prerequisites: College calculus, linear algebra, basic probability and statistics such as CS109, and basic machine learning such as CS229. No prior knowledge of genomics is necessary.", "courseAttributes": "Terms: Aut | Units: 3 | Grading: Medical Option (Med-Ltr-CR/NC)", "courseLevel": "Graduate"}, {"courseTitle": "Deep Learning in Genomics and Biomedicine (BIOMEDIN 273B, CS 273B, GENE 236)", "courseNumber": "BIODS 237:", "courseDescription": "Recent breakthroughs in high-throughput genomic and biomedical data are transforming biological sciences into \"big data\" disciplines. In parallel, progress in deep neural networks are revolutionizing fields such as image recognition, natural language processing and, more broadly, AI. This course explores the exciting intersection between these two advances. The course will start with an introduction to deep learning and overview the relevant background in genomics and high-throughput biotechnology, focusing on the available data and their relevance. It will then cover the ongoing developments in deep learning (supervised, unsupervised and generative models) with the focus on the applications of these methods to biomedical data, which are beginning to produced dramatic results. In addition to predictive modeling, the course emphasizes how to visualize and extract interpretable, biological insights from such models. Recent papers from the literature will be presented and discussed. Students will be introduced to and work with popular deep learning software frameworks. Students will work in groups on a final class project using real world datasets. Prerequisites: College calculus, linear algebra, basic probability and statistics such as CS109, and basic machine learning such as CS229. No prior knowledge of genomics is necessary.", "courseAttributes": "Terms: Aut | Units: 3 | Grading: Medical Option (Med-Ltr-CR/NC)", "courseLevel": "Graduate"}, {"courseTitle": "Deep Learning in Genomics and Biomedicine (BIOMEDIN 273B, CS 273B, GENE 236)", "courseNumber": "BIODS 237:", "courseDescription": "Recent breakthroughs in high-throughput genomic and biomedical data are transforming biological sciences into \"big data\" disciplines. In parallel, progress in deep neural networks are revolutionizing fields such as image recognition, natural language processing and, more broadly, AI. This course explores the exciting intersection between these two advances. The course will start with an introduction to deep learning and overview the relevant background in genomics and high-throughput biotechnology, focusing on the available data and their relevance. It will then cover the ongoing developments in deep learning (supervised, unsupervised and generative models) with the focus on the applications of these methods to biomedical data, which are beginning to produced dramatic results. In addition to predictive modeling, the course emphasizes how to visualize and extract interpretable, biological insights from such models. Recent papers from the literature will be presented and discussed. Students will be introduced to and work with popular deep learning software frameworks. Students will work in groups on a final class project using real world datasets. Prerequisites: College calculus, linear algebra, basic probability and statistics such as CS109, and basic machine learning such as CS229. No prior knowledge of genomics is necessary.", "courseAttributes": "Terms: Aut | Units: 3 | Grading: Medical Option (Med-Ltr-CR/NC)", "courseLevel": "Graduate"}]}}
{"Dorsa Sadigh": {"courses": [{"courseTitle": "Artificial Intelligence: Principles and Techniques", "courseNumber": "CS 221:", "courseDescription": "Artificial intelligence (AI) has had a huge impact in many areas, including medical diagnosis, speech recognition, robotics, web search, advertising, and scheduling.  This course focuses on the foundational concepts that drive these applications.  In short, AI is the mathematics of making good decisions given incomplete information (hence the need for probability) and limited computation (hence the need for algorithms).  Specific topics include search, constraint satisfaction, game playing, Markov decision processes, graphical models, machine learning, and logic. Prerequisites: CS 103 or CS 103B/X, CS 106B or CS 106X, CS 107, and CS 109 (algorithms, probability, and programming experience).", "courseAttributes": "Terms: Aut, Spr, Sum | Units: 3-4 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Artificial Intelligence: Principles and Techniques", "courseNumber": "CS 221:", "courseDescription": "Artificial intelligence (AI) has had a huge impact in many areas, including medical diagnosis, speech recognition, robotics, web search, advertising, and scheduling.  This course focuses on the foundational concepts that drive these applications.  In short, AI is the mathematics of making good decisions given incomplete information (hence the need for probability) and limited computation (hence the need for algorithms).  Specific topics include search, constraint satisfaction, game playing, Markov decision processes, graphical models, machine learning, and logic. Prerequisites: CS 103 or CS 103B/X, CS 106B or CS 106X, CS 107, and CS 109 (algorithms, probability, and programming experience).", "courseAttributes": "Terms: Aut, Spr, Sum | Units: 3-4 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Artificial Intelligence: Principles and Techniques", "courseNumber": "CS 221:", "courseDescription": "Artificial intelligence (AI) has had a huge impact in many areas, including medical diagnosis, speech recognition, robotics, web search, advertising, and scheduling.  This course focuses on the foundational concepts that drive these applications.  In short, AI is the mathematics of making good decisions given incomplete information (hence the need for probability) and limited computation (hence the need for algorithms).  Specific topics include search, constraint satisfaction, game playing, Markov decision processes, graphical models, machine learning, and logic. Prerequisites: CS 103 or CS 103B/X, CS 106B or CS 106X, CS 107, and CS 109 (algorithms, probability, and programming experience).", "courseAttributes": "Terms: Aut, Spr, Sum | Units: 3-4 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Artificial Intelligence: Principles and Techniques", "courseNumber": "CS 221:", "courseDescription": "Artificial intelligence (AI) has had a huge impact in many areas, including medical diagnosis, speech recognition, robotics, web search, advertising, and scheduling.  This course focuses on the foundational concepts that drive these applications.  In short, AI is the mathematics of making good decisions given incomplete information (hence the need for probability) and limited computation (hence the need for algorithms).  Specific topics include search, constraint satisfaction, game playing, Markov decision processes, graphical models, machine learning, and logic. Prerequisites: CS 103 or CS 103B/X, CS 106B or CS 106X, CS 107, and CS 109 (algorithms, probability, and programming experience).", "courseAttributes": "Terms: Aut, Spr, Sum | Units: 3-4 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Artificial Intelligence: Principles and Techniques", "courseNumber": "CS 221:", "courseDescription": "Artificial intelligence (AI) has had a huge impact in many areas, including medical diagnosis, speech recognition, robotics, web search, advertising, and scheduling.  This course focuses on the foundational concepts that drive these applications.  In short, AI is the mathematics of making good decisions given incomplete information (hence the need for probability) and limited computation (hence the need for algorithms).  Specific topics include search, constraint satisfaction, game playing, Markov decision processes, graphical models, machine learning, and logic. Prerequisites: CS 103 or CS 103B/X, CS 106B or CS 106X, CS 107, and CS 109 (algorithms, probability, and programming experience).", "courseAttributes": "Terms: Aut, Spr, Sum | Units: 3-4 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Artificial Intelligence: Principles and Techniques", "courseNumber": "CS 221:", "courseDescription": "Artificial intelligence (AI) has had a huge impact in many areas, including medical diagnosis, speech recognition, robotics, web search, advertising, and scheduling.  This course focuses on the foundational concepts that drive these applications.  In short, AI is the mathematics of making good decisions given incomplete information (hence the need for probability) and limited computation (hence the need for algorithms).  Specific topics include search, constraint satisfaction, game playing, Markov decision processes, graphical models, machine learning, and logic. Prerequisites: CS 103 or CS 103B/X, CS 106B or CS 106X, CS 107, and CS 109 (algorithms, probability, and programming experience).", "courseAttributes": "Terms: Aut, Spr, Sum | Units: 3-4 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Artificial Intelligence: Principles and Techniques", "courseNumber": "CS 221:", "courseDescription": "Artificial intelligence (AI) has had a huge impact in many areas, including medical diagnosis, speech recognition, robotics, web search, advertising, and scheduling.  This course focuses on the foundational concepts that drive these applications.  In short, AI is the mathematics of making good decisions given incomplete information (hence the need for probability) and limited computation (hence the need for algorithms).  Specific topics include search, constraint satisfaction, game playing, Markov decision processes, graphical models, machine learning, and logic. Prerequisites: CS 103 or CS 103B/X, CS 106B or CS 106X, CS 107, and CS 109 (algorithms, probability, and programming experience).", "courseAttributes": "Terms: Aut, Spr, Sum | Units: 3-4 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Artificial Intelligence: Principles and Techniques", "courseNumber": "CS 221:", "courseDescription": "Artificial intelligence (AI) has had a huge impact in many areas, including medical diagnosis, speech recognition, robotics, web search, advertising, and scheduling.  This course focuses on the foundational concepts that drive these applications.  In short, AI is the mathematics of making good decisions given incomplete information (hence the need for probability) and limited computation (hence the need for algorithms).  Specific topics include search, constraint satisfaction, game playing, Markov decision processes, graphical models, machine learning, and logic. Prerequisites: CS 103 or CS 103B/X, CS 106B or CS 106X, CS 107, and CS 109 (algorithms, probability, and programming experience).", "courseAttributes": "Terms: Aut, Spr, Sum | Units: 3-4 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Artificial Intelligence: Principles and Techniques", "courseNumber": "CS 221:", "courseDescription": "Artificial intelligence (AI) has had a huge impact in many areas, including medical diagnosis, speech recognition, robotics, web search, advertising, and scheduling.  This course focuses on the foundational concepts that drive these applications.  In short, AI is the mathematics of making good decisions given incomplete information (hence the need for probability) and limited computation (hence the need for algorithms).  Specific topics include search, constraint satisfaction, game playing, Markov decision processes, graphical models, machine learning, and logic. Prerequisites: CS 103 or CS 103B/X, CS 106B or CS 106X, CS 107, and CS 109 (algorithms, probability, and programming experience).", "courseAttributes": "Terms: Aut, Spr, Sum | Units: 3-4 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}]}}
{"Emma Brunskill": {"courses": [{"courseTitle": "Writing Intensive Senior Project (WIM)", "courseNumber": "CS 191W:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Writing-intensive version of CS191. Register using the section number of an Academic Council member. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr | Units: 3-6 | Repeatable for credit | Grading: Letter (ABCD/NP)", "courseLevel": "Undergraduate"}, {"courseTitle": "Writing Intensive Senior Project (WIM)", "courseNumber": "CS 191W:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Writing-intensive version of CS191. Register using the section number of an Academic Council member. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr | Units: 3-6 | Repeatable for credit | Grading: Letter (ABCD/NP)", "courseLevel": "Undergraduate"}, {"courseTitle": "Writing Intensive Senior Project (WIM)", "courseNumber": "CS 191W:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Writing-intensive version of CS191. Register using the section number of an Academic Council member. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr | Units: 3-6 | Repeatable for credit | Grading: Letter (ABCD/NP)", "courseLevel": "Undergraduate"}]}}
{"Fei-Fei Li": {"courses": [{"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)", "courseLevel": "Undergraduate"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)", "courseLevel": "Undergraduate"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)", "courseLevel": "Undergraduate"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)", "courseLevel": "Undergraduate"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)", "courseLevel": "Undergraduate"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)", "courseLevel": "Undergraduate"}]}}
{"Gregory Valiant": {"courses": [{"courseTitle": "The Modern Algorithmic Toolbox", "courseNumber": "CS 168:", "courseDescription": "This course will provide a rigorous and hands-on introduction to the central ideas and algorithms that constitute the core of the modern algorithms toolkit. Emphasis will be on understanding the high-level theoretical intuitions and principles underlying the algorithms we discuss, as well as developing a concrete understanding of when and how to implement and apply the algorithms. The course will be structured as a sequence of one-week investigations; each week will introduce one algorithmic idea, and discuss the motivation, theoretical underpinning, and practical applications of that algorithmic idea. Each topic will be accompanied by a mini-project in which students will be guided through a practical application of the ideas of the week. Topics include hashing, dimension reduction and LSH, boosting, linear programming, gradient descent,  sampling and estimation, and an introduction to spectral techniques. Prerequisites: CS107 and CS161, or permission from the instructor.", "courseAttributes": "Terms: Spr | Units: 3-4 | Grading: Letter or Credit/No Credit", "courseLevel": "Undergraduate"}, {"courseTitle": "The Modern Algorithmic Toolbox", "courseNumber": "CS 168:", "courseDescription": "This course will provide a rigorous and hands-on introduction to the central ideas and algorithms that constitute the core of the modern algorithms toolkit. Emphasis will be on understanding the high-level theoretical intuitions and principles underlying the algorithms we discuss, as well as developing a concrete understanding of when and how to implement and apply the algorithms. The course will be structured as a sequence of one-week investigations; each week will introduce one algorithmic idea, and discuss the motivation, theoretical underpinning, and practical applications of that algorithmic idea. Each topic will be accompanied by a mini-project in which students will be guided through a practical application of the ideas of the week. Topics include hashing, dimension reduction and LSH, boosting, linear programming, gradient descent,  sampling and estimation, and an introduction to spectral techniques. Prerequisites: CS107 and CS161, or permission from the instructor.", "courseAttributes": "Terms: Spr | Units: 3-4 | Grading: Letter or Credit/No Credit", "courseLevel": "Undergraduate"}, {"courseTitle": "The Modern Algorithmic Toolbox", "courseNumber": "CS 168:", "courseDescription": "This course will provide a rigorous and hands-on introduction to the central ideas and algorithms that constitute the core of the modern algorithms toolkit. Emphasis will be on understanding the high-level theoretical intuitions and principles underlying the algorithms we discuss, as well as developing a concrete understanding of when and how to implement and apply the algorithms. The course will be structured as a sequence of one-week investigations; each week will introduce one algorithmic idea, and discuss the motivation, theoretical underpinning, and practical applications of that algorithmic idea. Each topic will be accompanied by a mini-project in which students will be guided through a practical application of the ideas of the week. Topics include hashing, dimension reduction and LSH, boosting, linear programming, gradient descent,  sampling and estimation, and an introduction to spectral techniques. Prerequisites: CS107 and CS161, or permission from the instructor.", "courseAttributes": "Terms: Spr | Units: 3-4 | Grading: Letter or Credit/No Credit", "courseLevel": "Undergraduate"}, {"courseTitle": "The Modern Algorithmic Toolbox", "courseNumber": "CS 168:", "courseDescription": "This course will provide a rigorous and hands-on introduction to the central ideas and algorithms that constitute the core of the modern algorithms toolkit. Emphasis will be on understanding the high-level theoretical intuitions and principles underlying the algorithms we discuss, as well as developing a concrete understanding of when and how to implement and apply the algorithms. The course will be structured as a sequence of one-week investigations; each week will introduce one algorithmic idea, and discuss the motivation, theoretical underpinning, and practical applications of that algorithmic idea. Each topic will be accompanied by a mini-project in which students will be guided through a practical application of the ideas of the week. Topics include hashing, dimension reduction and LSH, boosting, linear programming, gradient descent,  sampling and estimation, and an introduction to spectral techniques. Prerequisites: CS107 and CS161, or permission from the instructor.", "courseAttributes": "Terms: Spr | Units: 3-4 | Grading: Letter or Credit/No Credit", "courseLevel": "Undergraduate"}, {"courseTitle": "The Modern Algorithmic Toolbox", "courseNumber": "CS 168:", "courseDescription": "This course will provide a rigorous and hands-on introduction to the central ideas and algorithms that constitute the core of the modern algorithms toolkit. Emphasis will be on understanding the high-level theoretical intuitions and principles underlying the algorithms we discuss, as well as developing a concrete understanding of when and how to implement and apply the algorithms. The course will be structured as a sequence of one-week investigations; each week will introduce one algorithmic idea, and discuss the motivation, theoretical underpinning, and practical applications of that algorithmic idea. Each topic will be accompanied by a mini-project in which students will be guided through a practical application of the ideas of the week. Topics include hashing, dimension reduction and LSH, boosting, linear programming, gradient descent,  sampling and estimation, and an introduction to spectral techniques. Prerequisites: CS107 and CS161, or permission from the instructor.", "courseAttributes": "Terms: Spr | Units: 3-4 | Grading: Letter or Credit/No Credit", "courseLevel": "Undergraduate"}, {"courseTitle": "The Modern Algorithmic Toolbox", "courseNumber": "CS 168:", "courseDescription": "This course will provide a rigorous and hands-on introduction to the central ideas and algorithms that constitute the core of the modern algorithms toolkit. Emphasis will be on understanding the high-level theoretical intuitions and principles underlying the algorithms we discuss, as well as developing a concrete understanding of when and how to implement and apply the algorithms. The course will be structured as a sequence of one-week investigations; each week will introduce one algorithmic idea, and discuss the motivation, theoretical underpinning, and practical applications of that algorithmic idea. Each topic will be accompanied by a mini-project in which students will be guided through a practical application of the ideas of the week. Topics include hashing, dimension reduction and LSH, boosting, linear programming, gradient descent,  sampling and estimation, and an introduction to spectral techniques. Prerequisites: CS107 and CS161, or permission from the instructor.", "courseAttributes": "Terms: Spr | Units: 3-4 | Grading: Letter or Credit/No Credit", "courseLevel": "Undergraduate"}]}}
{"Emma Brunskill": {"courses": [{"courseTitle": "Reinforcement Learning", "courseNumber": "CS 234:", "courseDescription": "To realize the dreams and impact of AI requires autonomous systems that learn to make good decisions. Reinforcement learning is one powerful paradigm for doing so, and it is relevant to an enormous range of tasks, including robotics, game playing, consumer modeling and healthcare. This class will briefly cover background on Markov decision processes and reinforcement learning, before focusing on some of the central problems, including scaling up to large domains and the exploration challenge. One key tool for tackling complex RL domains is deep learning and this class will include at least one homework on deep reinforcement learning. Prerequisites: proficiency in python, CS 229 or equivalents or permission of the instructor; linear algebra, basic probability.", "courseAttributes": "Terms: Win | Units: 3 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Reinforcement Learning", "courseNumber": "CS 234:", "courseDescription": "To realize the dreams and impact of AI requires autonomous systems that learn to make good decisions. Reinforcement learning is one powerful paradigm for doing so, and it is relevant to an enormous range of tasks, including robotics, game playing, consumer modeling and healthcare. This class will briefly cover background on Markov decision processes and reinforcement learning, before focusing on some of the central problems, including scaling up to large domains and the exploration challenge. One key tool for tackling complex RL domains is deep learning and this class will include at least one homework on deep reinforcement learning. Prerequisites: proficiency in python, CS 229 or equivalents or permission of the instructor; linear algebra, basic probability.", "courseAttributes": "Terms: Win | Units: 3 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Reinforcement Learning", "courseNumber": "CS 234:", "courseDescription": "To realize the dreams and impact of AI requires autonomous systems that learn to make good decisions. Reinforcement learning is one powerful paradigm for doing so, and it is relevant to an enormous range of tasks, including robotics, game playing, consumer modeling and healthcare. This class will briefly cover background on Markov decision processes and reinforcement learning, before focusing on some of the central problems, including scaling up to large domains and the exploration challenge. One key tool for tackling complex RL domains is deep learning and this class will include at least one homework on deep reinforcement learning. Prerequisites: proficiency in python, CS 229 or equivalents or permission of the instructor; linear algebra, basic probability.", "courseAttributes": "Terms: Win | Units: 3 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Reinforcement Learning", "courseNumber": "CS 234:", "courseDescription": "To realize the dreams and impact of AI requires autonomous systems that learn to make good decisions. Reinforcement learning is one powerful paradigm for doing so, and it is relevant to an enormous range of tasks, including robotics, game playing, consumer modeling and healthcare. This class will briefly cover background on Markov decision processes and reinforcement learning, before focusing on some of the central problems, including scaling up to large domains and the exploration challenge. One key tool for tackling complex RL domains is deep learning and this class will include at least one homework on deep reinforcement learning. Prerequisites: proficiency in python, CS 229 or equivalents or permission of the instructor; linear algebra, basic probability.", "courseAttributes": "Terms: Win | Units: 3 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Reinforcement Learning", "courseNumber": "CS 234:", "courseDescription": "To realize the dreams and impact of AI requires autonomous systems that learn to make good decisions. Reinforcement learning is one powerful paradigm for doing so, and it is relevant to an enormous range of tasks, including robotics, game playing, consumer modeling and healthcare. This class will briefly cover background on Markov decision processes and reinforcement learning, before focusing on some of the central problems, including scaling up to large domains and the exploration challenge. One key tool for tackling complex RL domains is deep learning and this class will include at least one homework on deep reinforcement learning. Prerequisites: proficiency in python, CS 229 or equivalents or permission of the instructor; linear algebra, basic probability.", "courseAttributes": "Terms: Win | Units: 3 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Reinforcement Learning", "courseNumber": "CS 234:", "courseDescription": "To realize the dreams and impact of AI requires autonomous systems that learn to make good decisions. Reinforcement learning is one powerful paradigm for doing so, and it is relevant to an enormous range of tasks, including robotics, game playing, consumer modeling and healthcare. This class will briefly cover background on Markov decision processes and reinforcement learning, before focusing on some of the central problems, including scaling up to large domains and the exploration challenge. One key tool for tackling complex RL domains is deep learning and this class will include at least one homework on deep reinforcement learning. Prerequisites: proficiency in python, CS 229 or equivalents or permission of the instructor; linear algebra, basic probability.", "courseAttributes": "Terms: Win | Units: 3 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Reinforcement Learning", "courseNumber": "CS 234:", "courseDescription": "To realize the dreams and impact of AI requires autonomous systems that learn to make good decisions. Reinforcement learning is one powerful paradigm for doing so, and it is relevant to an enormous range of tasks, including robotics, game playing, consumer modeling and healthcare. This class will briefly cover background on Markov decision processes and reinforcement learning, before focusing on some of the central problems, including scaling up to large domains and the exploration challenge. One key tool for tackling complex RL domains is deep learning and this class will include at least one homework on deep reinforcement learning. Prerequisites: proficiency in python, CS 229 or equivalents or permission of the instructor; linear algebra, basic probability.", "courseAttributes": "Terms: Win | Units: 3 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Reinforcement Learning", "courseNumber": "CS 234:", "courseDescription": "To realize the dreams and impact of AI requires autonomous systems that learn to make good decisions. Reinforcement learning is one powerful paradigm for doing so, and it is relevant to an enormous range of tasks, including robotics, game playing, consumer modeling and healthcare. This class will briefly cover background on Markov decision processes and reinforcement learning, before focusing on some of the central problems, including scaling up to large domains and the exploration challenge. One key tool for tackling complex RL domains is deep learning and this class will include at least one homework on deep reinforcement learning. Prerequisites: proficiency in python, CS 229 or equivalents or permission of the instructor; linear algebra, basic probability.", "courseAttributes": "Terms: Win | Units: 3 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Reinforcement Learning", "courseNumber": "CS 234:", "courseDescription": "To realize the dreams and impact of AI requires autonomous systems that learn to make good decisions. Reinforcement learning is one powerful paradigm for doing so, and it is relevant to an enormous range of tasks, including robotics, game playing, consumer modeling and healthcare. This class will briefly cover background on Markov decision processes and reinforcement learning, before focusing on some of the central problems, including scaling up to large domains and the exploration challenge. One key tool for tackling complex RL domains is deep learning and this class will include at least one homework on deep reinforcement learning. Prerequisites: proficiency in python, CS 229 or equivalents or permission of the instructor; linear algebra, basic probability.", "courseAttributes": "Terms: Win | Units: 3 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}]}}
{"John C. Duchi": {"courses": [{"courseTitle": "Special Studies or Projects in Electrical Engineering", "courseNumber": "EE 190:", "courseDescription": "Independent work under the direction of a faculty member. Individual or team activities involve lab experimentation, design of devices or systems, or directed reading. Course may be repeated for credit.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-15 | Repeatable for credit | Grading: Satisfactory/No Credit", "courseLevel": "Undergraduate"}, {"courseTitle": "Special Studies or Projects in Electrical Engineering", "courseNumber": "EE 190:", "courseDescription": "Independent work under the direction of a faculty member. Individual or team activities involve lab experimentation, design of devices or systems, or directed reading. Course may be repeated for credit.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-15 | Repeatable for credit | Grading: Satisfactory/No Credit", "courseLevel": "Undergraduate"}, {"courseTitle": "Special Studies or Projects in Electrical Engineering", "courseNumber": "EE 190:", "courseDescription": "Independent work under the direction of a faculty member. Individual or team activities involve lab experimentation, design of devices or systems, or directed reading. Course may be repeated for credit.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-15 | Repeatable for credit | Grading: Satisfactory/No Credit", "courseLevel": "Undergraduate"}, {"courseTitle": "Special Studies or Projects in Electrical Engineering", "courseNumber": "EE 190:", "courseDescription": "Independent work under the direction of a faculty member. Individual or team activities involve lab experimentation, design of devices or systems, or directed reading. Course may be repeated for credit.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-15 | Repeatable for credit | Grading: Satisfactory/No Credit", "courseLevel": "Undergraduate"}, {"courseTitle": "Special Studies or Projects in Electrical Engineering", "courseNumber": "EE 190:", "courseDescription": "Independent work under the direction of a faculty member. Individual or team activities involve lab experimentation, design of devices or systems, or directed reading. Course may be repeated for credit.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-15 | Repeatable for credit | Grading: Satisfactory/No Credit", "courseLevel": "Undergraduate"}]}}
{"Christopher D. Manning": {"courses": [{"courseTitle": "Biomedical Informatics Teaching Methods", "courseNumber": "BIOMEDIN 290:", "courseDescription": "Hands-on training in biomedical informatics pedagogy. Practical experience in pedagogical approaches, variously including didactic, inquiry, project, team, case, field, and/or problem-based approaches. Students create course content, including lectures, exercises, and assessments, and evaluate learning activities and outcomes. Prerequisite: instructor consent.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Medical Option (Med-Ltr-CR/NC)", "courseLevel": "Graduate"}, {"courseTitle": "Biomedical Informatics Teaching Methods", "courseNumber": "BIOMEDIN 290:", "courseDescription": "Hands-on training in biomedical informatics pedagogy. Practical experience in pedagogical approaches, variously including didactic, inquiry, project, team, case, field, and/or problem-based approaches. Students create course content, including lectures, exercises, and assessments, and evaluate learning activities and outcomes. Prerequisite: instructor consent.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Medical Option (Med-Ltr-CR/NC)", "courseLevel": "Graduate"}, {"courseTitle": "Biomedical Informatics Teaching Methods", "courseNumber": "BIOMEDIN 290:", "courseDescription": "Hands-on training in biomedical informatics pedagogy. Practical experience in pedagogical approaches, variously including didactic, inquiry, project, team, case, field, and/or problem-based approaches. Students create course content, including lectures, exercises, and assessments, and evaluate learning activities and outcomes. Prerequisite: instructor consent.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Medical Option (Med-Ltr-CR/NC)", "courseLevel": "Graduate"}, {"courseTitle": "Biomedical Informatics Teaching Methods", "courseNumber": "BIOMEDIN 290:", "courseDescription": "Hands-on training in biomedical informatics pedagogy. Practical experience in pedagogical approaches, variously including didactic, inquiry, project, team, case, field, and/or problem-based approaches. Students create course content, including lectures, exercises, and assessments, and evaluate learning activities and outcomes. Prerequisite: instructor consent.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Medical Option (Med-Ltr-CR/NC)", "courseLevel": "Graduate"}, {"courseTitle": "Biomedical Informatics Teaching Methods", "courseNumber": "BIOMEDIN 290:", "courseDescription": "Hands-on training in biomedical informatics pedagogy. Practical experience in pedagogical approaches, variously including didactic, inquiry, project, team, case, field, and/or problem-based approaches. Students create course content, including lectures, exercises, and assessments, and evaluate learning activities and outcomes. Prerequisite: instructor consent.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Medical Option (Med-Ltr-CR/NC)", "courseLevel": "Graduate"}, {"courseTitle": "Biomedical Informatics Teaching Methods", "courseNumber": "BIOMEDIN 290:", "courseDescription": "Hands-on training in biomedical informatics pedagogy. Practical experience in pedagogical approaches, variously including didactic, inquiry, project, team, case, field, and/or problem-based approaches. Students create course content, including lectures, exercises, and assessments, and evaluate learning activities and outcomes. Prerequisite: instructor consent.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Medical Option (Med-Ltr-CR/NC)", "courseLevel": "Graduate"}, {"courseTitle": "Biomedical Informatics Teaching Methods", "courseNumber": "BIOMEDIN 290:", "courseDescription": "Hands-on training in biomedical informatics pedagogy. Practical experience in pedagogical approaches, variously including didactic, inquiry, project, team, case, field, and/or problem-based approaches. Students create course content, including lectures, exercises, and assessments, and evaluate learning activities and outcomes. Prerequisite: instructor consent.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Medical Option (Med-Ltr-CR/NC)", "courseLevel": "Graduate"}, {"courseTitle": "Biomedical Informatics Teaching Methods", "courseNumber": "BIOMEDIN 290:", "courseDescription": "Hands-on training in biomedical informatics pedagogy. Practical experience in pedagogical approaches, variously including didactic, inquiry, project, team, case, field, and/or problem-based approaches. Students create course content, including lectures, exercises, and assessments, and evaluate learning activities and outcomes. Prerequisite: instructor consent.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Medical Option (Med-Ltr-CR/NC)", "courseLevel": "Graduate"}, {"courseTitle": "Biomedical Informatics Teaching Methods", "courseNumber": "BIOMEDIN 290:", "courseDescription": "Hands-on training in biomedical informatics pedagogy. Practical experience in pedagogical approaches, variously including didactic, inquiry, project, team, case, field, and/or problem-based approaches. Students create course content, including lectures, exercises, and assessments, and evaluate learning activities and outcomes. Prerequisite: instructor consent.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Medical Option (Med-Ltr-CR/NC)", "courseLevel": "Graduate"}, {"courseTitle": "Biomedical Informatics Teaching Methods", "courseNumber": "BIOMEDIN 290:", "courseDescription": "Hands-on training in biomedical informatics pedagogy. Practical experience in pedagogical approaches, variously including didactic, inquiry, project, team, case, field, and/or problem-based approaches. Students create course content, including lectures, exercises, and assessments, and evaluate learning activities and outcomes. Prerequisite: instructor consent.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Medical Option (Med-Ltr-CR/NC)", "courseLevel": "Graduate"}, {"courseTitle": "Biomedical Informatics Teaching Methods", "courseNumber": "BIOMEDIN 290:", "courseDescription": "Hands-on training in biomedical informatics pedagogy. Practical experience in pedagogical approaches, variously including didactic, inquiry, project, team, case, field, and/or problem-based approaches. Students create course content, including lectures, exercises, and assessments, and evaluate learning activities and outcomes. Prerequisite: instructor consent.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Medical Option (Med-Ltr-CR/NC)", "courseLevel": "Graduate"}, {"courseTitle": "Biomedical Informatics Teaching Methods", "courseNumber": "BIOMEDIN 290:", "courseDescription": "Hands-on training in biomedical informatics pedagogy. Practical experience in pedagogical approaches, variously including didactic, inquiry, project, team, case, field, and/or problem-based approaches. Students create course content, including lectures, exercises, and assessments, and evaluate learning activities and outcomes. Prerequisite: instructor consent.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Medical Option (Med-Ltr-CR/NC)", "courseLevel": "Graduate"}, {"courseTitle": "Biomedical Informatics Teaching Methods", "courseNumber": "BIOMEDIN 290:", "courseDescription": "Hands-on training in biomedical informatics pedagogy. Practical experience in pedagogical approaches, variously including didactic, inquiry, project, team, case, field, and/or problem-based approaches. Students create course content, including lectures, exercises, and assessments, and evaluate learning activities and outcomes. Prerequisite: instructor consent.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Medical Option (Med-Ltr-CR/NC)", "courseLevel": "Graduate"}, {"courseTitle": "Biomedical Informatics Teaching Methods", "courseNumber": "BIOMEDIN 290:", "courseDescription": "Hands-on training in biomedical informatics pedagogy. Practical experience in pedagogical approaches, variously including didactic, inquiry, project, team, case, field, and/or problem-based approaches. Students create course content, including lectures, exercises, and assessments, and evaluate learning activities and outcomes. Prerequisite: instructor consent.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Medical Option (Med-Ltr-CR/NC)", "courseLevel": "Graduate"}, {"courseTitle": "Biomedical Informatics Teaching Methods", "courseNumber": "BIOMEDIN 290:", "courseDescription": "Hands-on training in biomedical informatics pedagogy. Practical experience in pedagogical approaches, variously including didactic, inquiry, project, team, case, field, and/or problem-based approaches. Students create course content, including lectures, exercises, and assessments, and evaluate learning activities and outcomes. Prerequisite: instructor consent.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Medical Option (Med-Ltr-CR/NC)", "courseLevel": "Graduate"}, {"courseTitle": "Biomedical Informatics Teaching Methods", "courseNumber": "BIOMEDIN 290:", "courseDescription": "Hands-on training in biomedical informatics pedagogy. Practical experience in pedagogical approaches, variously including didactic, inquiry, project, team, case, field, and/or problem-based approaches. Students create course content, including lectures, exercises, and assessments, and evaluate learning activities and outcomes. Prerequisite: instructor consent.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Medical Option (Med-Ltr-CR/NC)", "courseLevel": "Graduate"}, {"courseTitle": "Biomedical Informatics Teaching Methods", "courseNumber": "BIOMEDIN 290:", "courseDescription": "Hands-on training in biomedical informatics pedagogy. Practical experience in pedagogical approaches, variously including didactic, inquiry, project, team, case, field, and/or problem-based approaches. Students create course content, including lectures, exercises, and assessments, and evaluate learning activities and outcomes. Prerequisite: instructor consent.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Medical Option (Med-Ltr-CR/NC)", "courseLevel": "Graduate"}, {"courseTitle": "Biomedical Informatics Teaching Methods", "courseNumber": "BIOMEDIN 290:", "courseDescription": "Hands-on training in biomedical informatics pedagogy. Practical experience in pedagogical approaches, variously including didactic, inquiry, project, team, case, field, and/or problem-based approaches. Students create course content, including lectures, exercises, and assessments, and evaluate learning activities and outcomes. Prerequisite: instructor consent.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Medical Option (Med-Ltr-CR/NC)", "courseLevel": "Graduate"}, {"courseTitle": "Biomedical Informatics Teaching Methods", "courseNumber": "BIOMEDIN 290:", "courseDescription": "Hands-on training in biomedical informatics pedagogy. Practical experience in pedagogical approaches, variously including didactic, inquiry, project, team, case, field, and/or problem-based approaches. Students create course content, including lectures, exercises, and assessments, and evaluate learning activities and outcomes. Prerequisite: instructor consent.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Medical Option (Med-Ltr-CR/NC)", "courseLevel": "Graduate"}, {"courseTitle": "Biomedical Informatics Teaching Methods", "courseNumber": "BIOMEDIN 290:", "courseDescription": "Hands-on training in biomedical informatics pedagogy. Practical experience in pedagogical approaches, variously including didactic, inquiry, project, team, case, field, and/or problem-based approaches. Students create course content, including lectures, exercises, and assessments, and evaluate learning activities and outcomes. Prerequisite: instructor consent.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Medical Option (Med-Ltr-CR/NC)", "courseLevel": "Graduate"}, {"courseTitle": "Biomedical Informatics Teaching Methods", "courseNumber": "BIOMEDIN 290:", "courseDescription": "Hands-on training in biomedical informatics pedagogy. Practical experience in pedagogical approaches, variously including didactic, inquiry, project, team, case, field, and/or problem-based approaches. Students create course content, including lectures, exercises, and assessments, and evaluate learning activities and outcomes. Prerequisite: instructor consent.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Medical Option (Med-Ltr-CR/NC)", "courseLevel": "Graduate"}, {"courseTitle": "Biomedical Informatics Teaching Methods", "courseNumber": "BIOMEDIN 290:", "courseDescription": "Hands-on training in biomedical informatics pedagogy. Practical experience in pedagogical approaches, variously including didactic, inquiry, project, team, case, field, and/or problem-based approaches. Students create course content, including lectures, exercises, and assessments, and evaluate learning activities and outcomes. Prerequisite: instructor consent.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Medical Option (Med-Ltr-CR/NC)", "courseLevel": "Graduate"}, {"courseTitle": "Biomedical Informatics Teaching Methods", "courseNumber": "BIOMEDIN 290:", "courseDescription": "Hands-on training in biomedical informatics pedagogy. Practical experience in pedagogical approaches, variously including didactic, inquiry, project, team, case, field, and/or problem-based approaches. Students create course content, including lectures, exercises, and assessments, and evaluate learning activities and outcomes. Prerequisite: instructor consent.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Medical Option (Med-Ltr-CR/NC)", "courseLevel": "Graduate"}, {"courseTitle": "Biomedical Informatics Teaching Methods", "courseNumber": "BIOMEDIN 290:", "courseDescription": "Hands-on training in biomedical informatics pedagogy. Practical experience in pedagogical approaches, variously including didactic, inquiry, project, team, case, field, and/or problem-based approaches. Students create course content, including lectures, exercises, and assessments, and evaluate learning activities and outcomes. Prerequisite: instructor consent.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Medical Option (Med-Ltr-CR/NC)", "courseLevel": "Graduate"}, {"courseTitle": "Biomedical Informatics Teaching Methods", "courseNumber": "BIOMEDIN 290:", "courseDescription": "Hands-on training in biomedical informatics pedagogy. Practical experience in pedagogical approaches, variously including didactic, inquiry, project, team, case, field, and/or problem-based approaches. Students create course content, including lectures, exercises, and assessments, and evaluate learning activities and outcomes. Prerequisite: instructor consent.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Medical Option (Med-Ltr-CR/NC)", "courseLevel": "Graduate"}, {"courseTitle": "Biomedical Informatics Teaching Methods", "courseNumber": "BIOMEDIN 290:", "courseDescription": "Hands-on training in biomedical informatics pedagogy. Practical experience in pedagogical approaches, variously including didactic, inquiry, project, team, case, field, and/or problem-based approaches. Students create course content, including lectures, exercises, and assessments, and evaluate learning activities and outcomes. Prerequisite: instructor consent.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Medical Option (Med-Ltr-CR/NC)", "courseLevel": "Graduate"}, {"courseTitle": "Biomedical Informatics Teaching Methods", "courseNumber": "BIOMEDIN 290:", "courseDescription": "Hands-on training in biomedical informatics pedagogy. Practical experience in pedagogical approaches, variously including didactic, inquiry, project, team, case, field, and/or problem-based approaches. Students create course content, including lectures, exercises, and assessments, and evaluate learning activities and outcomes. Prerequisite: instructor consent.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Medical Option (Med-Ltr-CR/NC)", "courseLevel": "Graduate"}, {"courseTitle": "Biomedical Informatics Teaching Methods", "courseNumber": "BIOMEDIN 290:", "courseDescription": "Hands-on training in biomedical informatics pedagogy. Practical experience in pedagogical approaches, variously including didactic, inquiry, project, team, case, field, and/or problem-based approaches. Students create course content, including lectures, exercises, and assessments, and evaluate learning activities and outcomes. Prerequisite: instructor consent.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Medical Option (Med-Ltr-CR/NC)", "courseLevel": "Graduate"}, {"courseTitle": "Biomedical Informatics Teaching Methods", "courseNumber": "BIOMEDIN 290:", "courseDescription": "Hands-on training in biomedical informatics pedagogy. Practical experience in pedagogical approaches, variously including didactic, inquiry, project, team, case, field, and/or problem-based approaches. Students create course content, including lectures, exercises, and assessments, and evaluate learning activities and outcomes. Prerequisite: instructor consent.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Medical Option (Med-Ltr-CR/NC)", "courseLevel": "Graduate"}, {"courseTitle": "Biomedical Informatics Teaching Methods", "courseNumber": "BIOMEDIN 290:", "courseDescription": "Hands-on training in biomedical informatics pedagogy. Practical experience in pedagogical approaches, variously including didactic, inquiry, project, team, case, field, and/or problem-based approaches. Students create course content, including lectures, exercises, and assessments, and evaluate learning activities and outcomes. Prerequisite: instructor consent.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Medical Option (Med-Ltr-CR/NC)", "courseLevel": "Graduate"}, {"courseTitle": "Biomedical Informatics Teaching Methods", "courseNumber": "BIOMEDIN 290:", "courseDescription": "Hands-on training in biomedical informatics pedagogy. Practical experience in pedagogical approaches, variously including didactic, inquiry, project, team, case, field, and/or problem-based approaches. Students create course content, including lectures, exercises, and assessments, and evaluate learning activities and outcomes. Prerequisite: instructor consent.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Medical Option (Med-Ltr-CR/NC)", "courseLevel": "Graduate"}]}}
{"Gregory Valiant": {"courses": [{"courseTitle": "Randomized Algorithms and Probabilistic Analysis (CS 265)", "courseNumber": "CME 309:", "courseDescription": "Randomness pervades the natural processes around us, from the formation of networks, to genetic recombination, to quantum physics. Randomness is also a powerful tool that can be leveraged to create algorithms and data structures which, in many cases, are more efficient and simpler than their deterministic counterparts. This course covers the key tools of probabilistic analysis, and application of these tools to understand the behaviors of random processes and algorithms. Emphasis is on theoretical foundations, though we will apply this theory broadly, discussing applications in machine learning and data analysis, networking, and systems. Topics include tail bounds, the probabilistic method, Markov chains, and martingales, with applications to analyzing random graphs, metric embeddings, random walks, and a host of powerful and elegant randomized algorithms. Prerequisites: CS 161 and STAT 116, or equivalents and instructor consent.", "courseAttributes": "Terms: Aut | Units: 3 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Randomized Algorithms and Probabilistic Analysis (CS 265)", "courseNumber": "CME 309:", "courseDescription": "Randomness pervades the natural processes around us, from the formation of networks, to genetic recombination, to quantum physics. Randomness is also a powerful tool that can be leveraged to create algorithms and data structures which, in many cases, are more efficient and simpler than their deterministic counterparts. This course covers the key tools of probabilistic analysis, and application of these tools to understand the behaviors of random processes and algorithms. Emphasis is on theoretical foundations, though we will apply this theory broadly, discussing applications in machine learning and data analysis, networking, and systems. Topics include tail bounds, the probabilistic method, Markov chains, and martingales, with applications to analyzing random graphs, metric embeddings, random walks, and a host of powerful and elegant randomized algorithms. Prerequisites: CS 161 and STAT 116, or equivalents and instructor consent.", "courseAttributes": "Terms: Aut | Units: 3 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Randomized Algorithms and Probabilistic Analysis (CS 265)", "courseNumber": "CME 309:", "courseDescription": "Randomness pervades the natural processes around us, from the formation of networks, to genetic recombination, to quantum physics. Randomness is also a powerful tool that can be leveraged to create algorithms and data structures which, in many cases, are more efficient and simpler than their deterministic counterparts. This course covers the key tools of probabilistic analysis, and application of these tools to understand the behaviors of random processes and algorithms. Emphasis is on theoretical foundations, though we will apply this theory broadly, discussing applications in machine learning and data analysis, networking, and systems. Topics include tail bounds, the probabilistic method, Markov chains, and martingales, with applications to analyzing random graphs, metric embeddings, random walks, and a host of powerful and elegant randomized algorithms. Prerequisites: CS 161 and STAT 116, or equivalents and instructor consent.", "courseAttributes": "Terms: Aut | Units: 3 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Randomized Algorithms and Probabilistic Analysis (CS 265)", "courseNumber": "CME 309:", "courseDescription": "Randomness pervades the natural processes around us, from the formation of networks, to genetic recombination, to quantum physics. Randomness is also a powerful tool that can be leveraged to create algorithms and data structures which, in many cases, are more efficient and simpler than their deterministic counterparts. This course covers the key tools of probabilistic analysis, and application of these tools to understand the behaviors of random processes and algorithms. Emphasis is on theoretical foundations, though we will apply this theory broadly, discussing applications in machine learning and data analysis, networking, and systems. Topics include tail bounds, the probabilistic method, Markov chains, and martingales, with applications to analyzing random graphs, metric embeddings, random walks, and a host of powerful and elegant randomized algorithms. Prerequisites: CS 161 and STAT 116, or equivalents and instructor consent.", "courseAttributes": "Terms: Aut | Units: 3 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Randomized Algorithms and Probabilistic Analysis (CS 265)", "courseNumber": "CME 309:", "courseDescription": "Randomness pervades the natural processes around us, from the formation of networks, to genetic recombination, to quantum physics. Randomness is also a powerful tool that can be leveraged to create algorithms and data structures which, in many cases, are more efficient and simpler than their deterministic counterparts. This course covers the key tools of probabilistic analysis, and application of these tools to understand the behaviors of random processes and algorithms. Emphasis is on theoretical foundations, though we will apply this theory broadly, discussing applications in machine learning and data analysis, networking, and systems. Topics include tail bounds, the probabilistic method, Markov chains, and martingales, with applications to analyzing random graphs, metric embeddings, random walks, and a host of powerful and elegant randomized algorithms. Prerequisites: CS 161 and STAT 116, or equivalents and instructor consent.", "courseAttributes": "Terms: Aut | Units: 3 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Randomized Algorithms and Probabilistic Analysis (CS 265)", "courseNumber": "CME 309:", "courseDescription": "Randomness pervades the natural processes around us, from the formation of networks, to genetic recombination, to quantum physics. Randomness is also a powerful tool that can be leveraged to create algorithms and data structures which, in many cases, are more efficient and simpler than their deterministic counterparts. This course covers the key tools of probabilistic analysis, and application of these tools to understand the behaviors of random processes and algorithms. Emphasis is on theoretical foundations, though we will apply this theory broadly, discussing applications in machine learning and data analysis, networking, and systems. Topics include tail bounds, the probabilistic method, Markov chains, and martingales, with applications to analyzing random graphs, metric embeddings, random walks, and a host of powerful and elegant randomized algorithms. Prerequisites: CS 161 and STAT 116, or equivalents and instructor consent.", "courseAttributes": "Terms: Aut | Units: 3 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Randomized Algorithms and Probabilistic Analysis (CS 265)", "courseNumber": "CME 309:", "courseDescription": "Randomness pervades the natural processes around us, from the formation of networks, to genetic recombination, to quantum physics. Randomness is also a powerful tool that can be leveraged to create algorithms and data structures which, in many cases, are more efficient and simpler than their deterministic counterparts. This course covers the key tools of probabilistic analysis, and application of these tools to understand the behaviors of random processes and algorithms. Emphasis is on theoretical foundations, though we will apply this theory broadly, discussing applications in machine learning and data analysis, networking, and systems. Topics include tail bounds, the probabilistic method, Markov chains, and martingales, with applications to analyzing random graphs, metric embeddings, random walks, and a host of powerful and elegant randomized algorithms. Prerequisites: CS 161 and STAT 116, or equivalents and instructor consent.", "courseAttributes": "Terms: Aut | Units: 3 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Randomized Algorithms and Probabilistic Analysis (CS 265)", "courseNumber": "CME 309:", "courseDescription": "Randomness pervades the natural processes around us, from the formation of networks, to genetic recombination, to quantum physics. Randomness is also a powerful tool that can be leveraged to create algorithms and data structures which, in many cases, are more efficient and simpler than their deterministic counterparts. This course covers the key tools of probabilistic analysis, and application of these tools to understand the behaviors of random processes and algorithms. Emphasis is on theoretical foundations, though we will apply this theory broadly, discussing applications in machine learning and data analysis, networking, and systems. Topics include tail bounds, the probabilistic method, Markov chains, and martingales, with applications to analyzing random graphs, metric embeddings, random walks, and a host of powerful and elegant randomized algorithms. Prerequisites: CS 161 and STAT 116, or equivalents and instructor consent.", "courseAttributes": "Terms: Aut | Units: 3 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Randomized Algorithms and Probabilistic Analysis (CS 265)", "courseNumber": "CME 309:", "courseDescription": "Randomness pervades the natural processes around us, from the formation of networks, to genetic recombination, to quantum physics. Randomness is also a powerful tool that can be leveraged to create algorithms and data structures which, in many cases, are more efficient and simpler than their deterministic counterparts. This course covers the key tools of probabilistic analysis, and application of these tools to understand the behaviors of random processes and algorithms. Emphasis is on theoretical foundations, though we will apply this theory broadly, discussing applications in machine learning and data analysis, networking, and systems. Topics include tail bounds, the probabilistic method, Markov chains, and martingales, with applications to analyzing random graphs, metric embeddings, random walks, and a host of powerful and elegant randomized algorithms. Prerequisites: CS 161 and STAT 116, or equivalents and instructor consent.", "courseAttributes": "Terms: Aut | Units: 3 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Randomized Algorithms and Probabilistic Analysis (CS 265)", "courseNumber": "CME 309:", "courseDescription": "Randomness pervades the natural processes around us, from the formation of networks, to genetic recombination, to quantum physics. Randomness is also a powerful tool that can be leveraged to create algorithms and data structures which, in many cases, are more efficient and simpler than their deterministic counterparts. This course covers the key tools of probabilistic analysis, and application of these tools to understand the behaviors of random processes and algorithms. Emphasis is on theoretical foundations, though we will apply this theory broadly, discussing applications in machine learning and data analysis, networking, and systems. Topics include tail bounds, the probabilistic method, Markov chains, and martingales, with applications to analyzing random graphs, metric embeddings, random walks, and a host of powerful and elegant randomized algorithms. Prerequisites: CS 161 and STAT 116, or equivalents and instructor consent.", "courseAttributes": "Terms: Aut | Units: 3 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Randomized Algorithms and Probabilistic Analysis (CS 265)", "courseNumber": "CME 309:", "courseDescription": "Randomness pervades the natural processes around us, from the formation of networks, to genetic recombination, to quantum physics. Randomness is also a powerful tool that can be leveraged to create algorithms and data structures which, in many cases, are more efficient and simpler than their deterministic counterparts. This course covers the key tools of probabilistic analysis, and application of these tools to understand the behaviors of random processes and algorithms. Emphasis is on theoretical foundations, though we will apply this theory broadly, discussing applications in machine learning and data analysis, networking, and systems. Topics include tail bounds, the probabilistic method, Markov chains, and martingales, with applications to analyzing random graphs, metric embeddings, random walks, and a host of powerful and elegant randomized algorithms. Prerequisites: CS 161 and STAT 116, or equivalents and instructor consent.", "courseAttributes": "Terms: Aut | Units: 3 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Randomized Algorithms and Probabilistic Analysis (CS 265)", "courseNumber": "CME 309:", "courseDescription": "Randomness pervades the natural processes around us, from the formation of networks, to genetic recombination, to quantum physics. Randomness is also a powerful tool that can be leveraged to create algorithms and data structures which, in many cases, are more efficient and simpler than their deterministic counterparts. This course covers the key tools of probabilistic analysis, and application of these tools to understand the behaviors of random processes and algorithms. Emphasis is on theoretical foundations, though we will apply this theory broadly, discussing applications in machine learning and data analysis, networking, and systems. Topics include tail bounds, the probabilistic method, Markov chains, and martingales, with applications to analyzing random graphs, metric embeddings, random walks, and a host of powerful and elegant randomized algorithms. Prerequisites: CS 161 and STAT 116, or equivalents and instructor consent.", "courseAttributes": "Terms: Aut | Units: 3 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Randomized Algorithms and Probabilistic Analysis (CS 265)", "courseNumber": "CME 309:", "courseDescription": "Randomness pervades the natural processes around us, from the formation of networks, to genetic recombination, to quantum physics. Randomness is also a powerful tool that can be leveraged to create algorithms and data structures which, in many cases, are more efficient and simpler than their deterministic counterparts. This course covers the key tools of probabilistic analysis, and application of these tools to understand the behaviors of random processes and algorithms. Emphasis is on theoretical foundations, though we will apply this theory broadly, discussing applications in machine learning and data analysis, networking, and systems. Topics include tail bounds, the probabilistic method, Markov chains, and martingales, with applications to analyzing random graphs, metric embeddings, random walks, and a host of powerful and elegant randomized algorithms. Prerequisites: CS 161 and STAT 116, or equivalents and instructor consent.", "courseAttributes": "Terms: Aut | Units: 3 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Randomized Algorithms and Probabilistic Analysis (CS 265)", "courseNumber": "CME 309:", "courseDescription": "Randomness pervades the natural processes around us, from the formation of networks, to genetic recombination, to quantum physics. Randomness is also a powerful tool that can be leveraged to create algorithms and data structures which, in many cases, are more efficient and simpler than their deterministic counterparts. This course covers the key tools of probabilistic analysis, and application of these tools to understand the behaviors of random processes and algorithms. Emphasis is on theoretical foundations, though we will apply this theory broadly, discussing applications in machine learning and data analysis, networking, and systems. Topics include tail bounds, the probabilistic method, Markov chains, and martingales, with applications to analyzing random graphs, metric embeddings, random walks, and a host of powerful and elegant randomized algorithms. Prerequisites: CS 161 and STAT 116, or equivalents and instructor consent.", "courseAttributes": "Terms: Aut | Units: 3 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Randomized Algorithms and Probabilistic Analysis (CS 265)", "courseNumber": "CME 309:", "courseDescription": "Randomness pervades the natural processes around us, from the formation of networks, to genetic recombination, to quantum physics. Randomness is also a powerful tool that can be leveraged to create algorithms and data structures which, in many cases, are more efficient and simpler than their deterministic counterparts. This course covers the key tools of probabilistic analysis, and application of these tools to understand the behaviors of random processes and algorithms. Emphasis is on theoretical foundations, though we will apply this theory broadly, discussing applications in machine learning and data analysis, networking, and systems. Topics include tail bounds, the probabilistic method, Markov chains, and martingales, with applications to analyzing random graphs, metric embeddings, random walks, and a host of powerful and elegant randomized algorithms. Prerequisites: CS 161 and STAT 116, or equivalents and instructor consent.", "courseAttributes": "Terms: Aut | Units: 3 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Randomized Algorithms and Probabilistic Analysis (CS 265)", "courseNumber": "CME 309:", "courseDescription": "Randomness pervades the natural processes around us, from the formation of networks, to genetic recombination, to quantum physics. Randomness is also a powerful tool that can be leveraged to create algorithms and data structures which, in many cases, are more efficient and simpler than their deterministic counterparts. This course covers the key tools of probabilistic analysis, and application of these tools to understand the behaviors of random processes and algorithms. Emphasis is on theoretical foundations, though we will apply this theory broadly, discussing applications in machine learning and data analysis, networking, and systems. Topics include tail bounds, the probabilistic method, Markov chains, and martingales, with applications to analyzing random graphs, metric embeddings, random walks, and a host of powerful and elegant randomized algorithms. Prerequisites: CS 161 and STAT 116, or equivalents and instructor consent.", "courseAttributes": "Terms: Aut | Units: 3 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}]}}
{"Dan Boneh": {"courses": [{"courseTitle": "Cryptocurrencies and blockchain technologies", "courseNumber": "CS 251:", "courseDescription": "For advanced undergraduates and for graduate students.  The potential applications for Bitcoin-like technologies is enormous.  The course will cover the technical aspects of cryptocurrencies, blockchain technologies, and distributed consensus. Students will learn how these systems work and how to engineer secure software that interacts with the Bitcoin network and other cryptocurrencies. Prerequisite: CS110. Recommended: CS255.", "courseAttributes": "Terms: Aut | Units: 3 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Cryptocurrencies and blockchain technologies", "courseNumber": "CS 251:", "courseDescription": "For advanced undergraduates and for graduate students.  The potential applications for Bitcoin-like technologies is enormous.  The course will cover the technical aspects of cryptocurrencies, blockchain technologies, and distributed consensus. Students will learn how these systems work and how to engineer secure software that interacts with the Bitcoin network and other cryptocurrencies. Prerequisite: CS110. Recommended: CS255.", "courseAttributes": "Terms: Aut | Units: 3 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Cryptocurrencies and blockchain technologies", "courseNumber": "CS 251:", "courseDescription": "For advanced undergraduates and for graduate students.  The potential applications for Bitcoin-like technologies is enormous.  The course will cover the technical aspects of cryptocurrencies, blockchain technologies, and distributed consensus. Students will learn how these systems work and how to engineer secure software that interacts with the Bitcoin network and other cryptocurrencies. Prerequisite: CS110. Recommended: CS255.", "courseAttributes": "Terms: Aut | Units: 3 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Cryptocurrencies and blockchain technologies", "courseNumber": "CS 251:", "courseDescription": "For advanced undergraduates and for graduate students.  The potential applications for Bitcoin-like technologies is enormous.  The course will cover the technical aspects of cryptocurrencies, blockchain technologies, and distributed consensus. Students will learn how these systems work and how to engineer secure software that interacts with the Bitcoin network and other cryptocurrencies. Prerequisite: CS110. Recommended: CS255.", "courseAttributes": "Terms: Aut | Units: 3 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Cryptocurrencies and blockchain technologies", "courseNumber": "CS 251:", "courseDescription": "For advanced undergraduates and for graduate students.  The potential applications for Bitcoin-like technologies is enormous.  The course will cover the technical aspects of cryptocurrencies, blockchain technologies, and distributed consensus. Students will learn how these systems work and how to engineer secure software that interacts with the Bitcoin network and other cryptocurrencies. Prerequisite: CS110. Recommended: CS255.", "courseAttributes": "Terms: Aut | Units: 3 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Cryptocurrencies and blockchain technologies", "courseNumber": "CS 251:", "courseDescription": "For advanced undergraduates and for graduate students.  The potential applications for Bitcoin-like technologies is enormous.  The course will cover the technical aspects of cryptocurrencies, blockchain technologies, and distributed consensus. Students will learn how these systems work and how to engineer secure software that interacts with the Bitcoin network and other cryptocurrencies. Prerequisite: CS110. Recommended: CS255.", "courseAttributes": "Terms: Aut | Units: 3 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Cryptocurrencies and blockchain technologies", "courseNumber": "CS 251:", "courseDescription": "For advanced undergraduates and for graduate students.  The potential applications for Bitcoin-like technologies is enormous.  The course will cover the technical aspects of cryptocurrencies, blockchain technologies, and distributed consensus. Students will learn how these systems work and how to engineer secure software that interacts with the Bitcoin network and other cryptocurrencies. Prerequisite: CS110. Recommended: CS255.", "courseAttributes": "Terms: Aut | Units: 3 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Cryptocurrencies and blockchain technologies", "courseNumber": "CS 251:", "courseDescription": "For advanced undergraduates and for graduate students.  The potential applications for Bitcoin-like technologies is enormous.  The course will cover the technical aspects of cryptocurrencies, blockchain technologies, and distributed consensus. Students will learn how these systems work and how to engineer secure software that interacts with the Bitcoin network and other cryptocurrencies. Prerequisite: CS110. Recommended: CS255.", "courseAttributes": "Terms: Aut | Units: 3 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Cryptocurrencies and blockchain technologies", "courseNumber": "CS 251:", "courseDescription": "For advanced undergraduates and for graduate students.  The potential applications for Bitcoin-like technologies is enormous.  The course will cover the technical aspects of cryptocurrencies, blockchain technologies, and distributed consensus. Students will learn how these systems work and how to engineer secure software that interacts with the Bitcoin network and other cryptocurrencies. Prerequisite: CS110. Recommended: CS255.", "courseAttributes": "Terms: Aut | Units: 3 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Cryptocurrencies and blockchain technologies", "courseNumber": "CS 251:", "courseDescription": "For advanced undergraduates and for graduate students.  The potential applications for Bitcoin-like technologies is enormous.  The course will cover the technical aspects of cryptocurrencies, blockchain technologies, and distributed consensus. Students will learn how these systems work and how to engineer secure software that interacts with the Bitcoin network and other cryptocurrencies. Prerequisite: CS110. Recommended: CS255.", "courseAttributes": "Terms: Aut | Units: 3 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Cryptocurrencies and blockchain technologies", "courseNumber": "CS 251:", "courseDescription": "For advanced undergraduates and for graduate students.  The potential applications for Bitcoin-like technologies is enormous.  The course will cover the technical aspects of cryptocurrencies, blockchain technologies, and distributed consensus. Students will learn how these systems work and how to engineer secure software that interacts with the Bitcoin network and other cryptocurrencies. Prerequisite: CS110. Recommended: CS255.", "courseAttributes": "Terms: Aut | Units: 3 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Cryptocurrencies and blockchain technologies", "courseNumber": "CS 251:", "courseDescription": "For advanced undergraduates and for graduate students.  The potential applications for Bitcoin-like technologies is enormous.  The course will cover the technical aspects of cryptocurrencies, blockchain technologies, and distributed consensus. Students will learn how these systems work and how to engineer secure software that interacts with the Bitcoin network and other cryptocurrencies. Prerequisite: CS110. Recommended: CS255.", "courseAttributes": "Terms: Aut | Units: 3 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Cryptocurrencies and blockchain technologies", "courseNumber": "CS 251:", "courseDescription": "For advanced undergraduates and for graduate students.  The potential applications for Bitcoin-like technologies is enormous.  The course will cover the technical aspects of cryptocurrencies, blockchain technologies, and distributed consensus. Students will learn how these systems work and how to engineer secure software that interacts with the Bitcoin network and other cryptocurrencies. Prerequisite: CS110. Recommended: CS255.", "courseAttributes": "Terms: Aut | Units: 3 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Cryptocurrencies and blockchain technologies", "courseNumber": "CS 251:", "courseDescription": "For advanced undergraduates and for graduate students.  The potential applications for Bitcoin-like technologies is enormous.  The course will cover the technical aspects of cryptocurrencies, blockchain technologies, and distributed consensus. Students will learn how these systems work and how to engineer secure software that interacts with the Bitcoin network and other cryptocurrencies. Prerequisite: CS110. Recommended: CS255.", "courseAttributes": "Terms: Aut | Units: 3 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Cryptocurrencies and blockchain technologies", "courseNumber": "CS 251:", "courseDescription": "For advanced undergraduates and for graduate students.  The potential applications for Bitcoin-like technologies is enormous.  The course will cover the technical aspects of cryptocurrencies, blockchain technologies, and distributed consensus. Students will learn how these systems work and how to engineer secure software that interacts with the Bitcoin network and other cryptocurrencies. Prerequisite: CS110. Recommended: CS255.", "courseAttributes": "Terms: Aut | Units: 3 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Cryptocurrencies and blockchain technologies", "courseNumber": "CS 251:", "courseDescription": "For advanced undergraduates and for graduate students.  The potential applications for Bitcoin-like technologies is enormous.  The course will cover the technical aspects of cryptocurrencies, blockchain technologies, and distributed consensus. Students will learn how these systems work and how to engineer secure software that interacts with the Bitcoin network and other cryptocurrencies. Prerequisite: CS110. Recommended: CS255.", "courseAttributes": "Terms: Aut | Units: 3 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Cryptocurrencies and blockchain technologies", "courseNumber": "CS 251:", "courseDescription": "For advanced undergraduates and for graduate students.  The potential applications for Bitcoin-like technologies is enormous.  The course will cover the technical aspects of cryptocurrencies, blockchain technologies, and distributed consensus. Students will learn how these systems work and how to engineer secure software that interacts with the Bitcoin network and other cryptocurrencies. Prerequisite: CS110. Recommended: CS255.", "courseAttributes": "Terms: Aut | Units: 3 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Cryptocurrencies and blockchain technologies", "courseNumber": "CS 251:", "courseDescription": "For advanced undergraduates and for graduate students.  The potential applications for Bitcoin-like technologies is enormous.  The course will cover the technical aspects of cryptocurrencies, blockchain technologies, and distributed consensus. Students will learn how these systems work and how to engineer secure software that interacts with the Bitcoin network and other cryptocurrencies. Prerequisite: CS110. Recommended: CS255.", "courseAttributes": "Terms: Aut | Units: 3 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Cryptocurrencies and blockchain technologies", "courseNumber": "CS 251:", "courseDescription": "For advanced undergraduates and for graduate students.  The potential applications for Bitcoin-like technologies is enormous.  The course will cover the technical aspects of cryptocurrencies, blockchain technologies, and distributed consensus. Students will learn how these systems work and how to engineer secure software that interacts with the Bitcoin network and other cryptocurrencies. Prerequisite: CS110. Recommended: CS255.", "courseAttributes": "Terms: Aut | Units: 3 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Cryptocurrencies and blockchain technologies", "courseNumber": "CS 251:", "courseDescription": "For advanced undergraduates and for graduate students.  The potential applications for Bitcoin-like technologies is enormous.  The course will cover the technical aspects of cryptocurrencies, blockchain technologies, and distributed consensus. Students will learn how these systems work and how to engineer secure software that interacts with the Bitcoin network and other cryptocurrencies. Prerequisite: CS110. Recommended: CS255.", "courseAttributes": "Terms: Aut | Units: 3 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Cryptocurrencies and blockchain technologies", "courseNumber": "CS 251:", "courseDescription": "For advanced undergraduates and for graduate students.  The potential applications for Bitcoin-like technologies is enormous.  The course will cover the technical aspects of cryptocurrencies, blockchain technologies, and distributed consensus. Students will learn how these systems work and how to engineer secure software that interacts with the Bitcoin network and other cryptocurrencies. Prerequisite: CS110. Recommended: CS255.", "courseAttributes": "Terms: Aut | Units: 3 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Cryptocurrencies and blockchain technologies", "courseNumber": "CS 251:", "courseDescription": "For advanced undergraduates and for graduate students.  The potential applications for Bitcoin-like technologies is enormous.  The course will cover the technical aspects of cryptocurrencies, blockchain technologies, and distributed consensus. Students will learn how these systems work and how to engineer secure software that interacts with the Bitcoin network and other cryptocurrencies. Prerequisite: CS110. Recommended: CS255.", "courseAttributes": "Terms: Aut | Units: 3 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Cryptocurrencies and blockchain technologies", "courseNumber": "CS 251:", "courseDescription": "For advanced undergraduates and for graduate students.  The potential applications for Bitcoin-like technologies is enormous.  The course will cover the technical aspects of cryptocurrencies, blockchain technologies, and distributed consensus. Students will learn how these systems work and how to engineer secure software that interacts with the Bitcoin network and other cryptocurrencies. Prerequisite: CS110. Recommended: CS255.", "courseAttributes": "Terms: Aut | Units: 3 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Cryptocurrencies and blockchain technologies", "courseNumber": "CS 251:", "courseDescription": "For advanced undergraduates and for graduate students.  The potential applications for Bitcoin-like technologies is enormous.  The course will cover the technical aspects of cryptocurrencies, blockchain technologies, and distributed consensus. Students will learn how these systems work and how to engineer secure software that interacts with the Bitcoin network and other cryptocurrencies. Prerequisite: CS110. Recommended: CS255.", "courseAttributes": "Terms: Aut | Units: 3 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Cryptocurrencies and blockchain technologies", "courseNumber": "CS 251:", "courseDescription": "For advanced undergraduates and for graduate students.  The potential applications for Bitcoin-like technologies is enormous.  The course will cover the technical aspects of cryptocurrencies, blockchain technologies, and distributed consensus. Students will learn how these systems work and how to engineer secure software that interacts with the Bitcoin network and other cryptocurrencies. Prerequisite: CS110. Recommended: CS255.", "courseAttributes": "Terms: Aut | Units: 3 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Cryptocurrencies and blockchain technologies", "courseNumber": "CS 251:", "courseDescription": "For advanced undergraduates and for graduate students.  The potential applications for Bitcoin-like technologies is enormous.  The course will cover the technical aspects of cryptocurrencies, blockchain technologies, and distributed consensus. Students will learn how these systems work and how to engineer secure software that interacts with the Bitcoin network and other cryptocurrencies. Prerequisite: CS110. Recommended: CS255.", "courseAttributes": "Terms: Aut | Units: 3 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Cryptocurrencies and blockchain technologies", "courseNumber": "CS 251:", "courseDescription": "For advanced undergraduates and for graduate students.  The potential applications for Bitcoin-like technologies is enormous.  The course will cover the technical aspects of cryptocurrencies, blockchain technologies, and distributed consensus. Students will learn how these systems work and how to engineer secure software that interacts with the Bitcoin network and other cryptocurrencies. Prerequisite: CS110. Recommended: CS255.", "courseAttributes": "Terms: Aut | Units: 3 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}]}}
{"Hector Garcia-Molina": {"courses": [{"courseTitle": "Computers and Photography: From Capture to Sharing", "courseNumber": "CS 45N:", "courseDescription": "Preference to freshmen with experience in photography and use of computers. Elements of photography, such as lighting, focus, depth of field, aperture, and composition. How a photographer makes photos available for computer viewing, reliably stores them, organizes them, tags them, searches them, and distributes them online. No programming experience required. Digital SLRs and editing software will be provided to those students who do not wish to use their own.", "courseAttributes": "Terms: Aut, Spr | Units: 3-4 | UG Reqs: WAY-CE | Grading: Letter or Credit/No Credit", "courseLevel": "Undergraduate"}, {"courseTitle": "Computers and Photography: From Capture to Sharing", "courseNumber": "CS 45N:", "courseDescription": "Preference to freshmen with experience in photography and use of computers. Elements of photography, such as lighting, focus, depth of field, aperture, and composition. How a photographer makes photos available for computer viewing, reliably stores them, organizes them, tags them, searches them, and distributes them online. No programming experience required. Digital SLRs and editing software will be provided to those students who do not wish to use their own.", "courseAttributes": "Terms: Aut, Spr | Units: 3-4 | UG Reqs: WAY-CE | Grading: Letter or Credit/No Credit", "courseLevel": "Undergraduate"}, {"courseTitle": "Computers and Photography: From Capture to Sharing", "courseNumber": "CS 45N:", "courseDescription": "Preference to freshmen with experience in photography and use of computers. Elements of photography, such as lighting, focus, depth of field, aperture, and composition. How a photographer makes photos available for computer viewing, reliably stores them, organizes them, tags them, searches them, and distributes them online. No programming experience required. Digital SLRs and editing software will be provided to those students who do not wish to use their own.", "courseAttributes": "Terms: Aut, Spr | Units: 3-4 | UG Reqs: WAY-CE | Grading: Letter or Credit/No Credit", "courseLevel": "Undergraduate"}, {"courseTitle": "Computers and Photography: From Capture to Sharing", "courseNumber": "CS 45N:", "courseDescription": "Preference to freshmen with experience in photography and use of computers. Elements of photography, such as lighting, focus, depth of field, aperture, and composition. How a photographer makes photos available for computer viewing, reliably stores them, organizes them, tags them, searches them, and distributes them online. No programming experience required. Digital SLRs and editing software will be provided to those students who do not wish to use their own.", "courseAttributes": "Terms: Aut, Spr | Units: 3-4 | UG Reqs: WAY-CE | Grading: Letter or Credit/No Credit", "courseLevel": "Undergraduate"}, {"courseTitle": "Computers and Photography: From Capture to Sharing", "courseNumber": "CS 45N:", "courseDescription": "Preference to freshmen with experience in photography and use of computers. Elements of photography, such as lighting, focus, depth of field, aperture, and composition. How a photographer makes photos available for computer viewing, reliably stores them, organizes them, tags them, searches them, and distributes them online. No programming experience required. Digital SLRs and editing software will be provided to those students who do not wish to use their own.", "courseAttributes": "Terms: Aut, Spr | Units: 3-4 | UG Reqs: WAY-CE | Grading: Letter or Credit/No Credit", "courseLevel": "Undergraduate"}, {"courseTitle": "Computers and Photography: From Capture to Sharing", "courseNumber": "CS 45N:", "courseDescription": "Preference to freshmen with experience in photography and use of computers. Elements of photography, such as lighting, focus, depth of field, aperture, and composition. How a photographer makes photos available for computer viewing, reliably stores them, organizes them, tags them, searches them, and distributes them online. No programming experience required. Digital SLRs and editing software will be provided to those students who do not wish to use their own.", "courseAttributes": "Terms: Aut, Spr | Units: 3-4 | UG Reqs: WAY-CE | Grading: Letter or Credit/No Credit", "courseLevel": "Undergraduate"}, {"courseTitle": "Computers and Photography: From Capture to Sharing", "courseNumber": "CS 45N:", "courseDescription": "Preference to freshmen with experience in photography and use of computers. Elements of photography, such as lighting, focus, depth of field, aperture, and composition. How a photographer makes photos available for computer viewing, reliably stores them, organizes them, tags them, searches them, and distributes them online. No programming experience required. Digital SLRs and editing software will be provided to those students who do not wish to use their own.", "courseAttributes": "Terms: Aut, Spr | Units: 3-4 | UG Reqs: WAY-CE | Grading: Letter or Credit/No Credit", "courseLevel": "Undergraduate"}, {"courseTitle": "Computers and Photography: From Capture to Sharing", "courseNumber": "CS 45N:", "courseDescription": "Preference to freshmen with experience in photography and use of computers. Elements of photography, such as lighting, focus, depth of field, aperture, and composition. How a photographer makes photos available for computer viewing, reliably stores them, organizes them, tags them, searches them, and distributes them online. No programming experience required. Digital SLRs and editing software will be provided to those students who do not wish to use their own.", "courseAttributes": "Terms: Aut, Spr | Units: 3-4 | UG Reqs: WAY-CE | Grading: Letter or Credit/No Credit", "courseLevel": "Undergraduate"}, {"courseTitle": "Computers and Photography: From Capture to Sharing", "courseNumber": "CS 45N:", "courseDescription": "Preference to freshmen with experience in photography and use of computers. Elements of photography, such as lighting, focus, depth of field, aperture, and composition. How a photographer makes photos available for computer viewing, reliably stores them, organizes them, tags them, searches them, and distributes them online. No programming experience required. Digital SLRs and editing software will be provided to those students who do not wish to use their own.", "courseAttributes": "Terms: Aut, Spr | Units: 3-4 | UG Reqs: WAY-CE | Grading: Letter or Credit/No Credit", "courseLevel": "Undergraduate"}]}}
{"Fei-Fei Li": {"courses": [{"courseTitle": "Convolutional Neural Networks for Visual Recognition", "courseNumber": "CS 231N:", "courseDescription": "Computer Vision has become ubiquitous in our society, with applications innsearch, image understanding, apps, mapping, medicine, drones, andnself-driving cars. Core to many of these applications are the tasks of image classification, localization and detection. This course is a deep dive into details of neural network architectures with a focus on learning end-to-end models for these tasks, particularly image classification. During the 10-week course, students will learn to implement, train and debug their own neural networks and gain a detailed understanding of cutting-edge research in computer vision. The final assignment will involve training a multi-million parameter convolutional neural network and applying it on the largest image classification dataset (ImageNet). We will focus on teaching how to set up the problem of image recognition, the learning algorithms (e.g. backpropagation), practical engineering tricks for training and fine-tuning the networks and guide the students through hands-on assignments and a final course project. Much of the background and materials of this course will be drawn from the ImageNet Challenge: http://image-net.org/challenges/LSVRC/2014/index. Prerequisites: Proficiency in Python; familiarity with C/C++; CS 131 and CS 229 or equivalents; Math 21 or equivalent, linear algebra.", "courseAttributes": "Terms: Spr | Units: 3-4 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Convolutional Neural Networks for Visual Recognition", "courseNumber": "CS 231N:", "courseDescription": "Computer Vision has become ubiquitous in our society, with applications innsearch, image understanding, apps, mapping, medicine, drones, andnself-driving cars. Core to many of these applications are the tasks of image classification, localization and detection. This course is a deep dive into details of neural network architectures with a focus on learning end-to-end models for these tasks, particularly image classification. During the 10-week course, students will learn to implement, train and debug their own neural networks and gain a detailed understanding of cutting-edge research in computer vision. The final assignment will involve training a multi-million parameter convolutional neural network and applying it on the largest image classification dataset (ImageNet). We will focus on teaching how to set up the problem of image recognition, the learning algorithms (e.g. backpropagation), practical engineering tricks for training and fine-tuning the networks and guide the students through hands-on assignments and a final course project. Much of the background and materials of this course will be drawn from the ImageNet Challenge: http://image-net.org/challenges/LSVRC/2014/index. Prerequisites: Proficiency in Python; familiarity with C/C++; CS 131 and CS 229 or equivalents; Math 21 or equivalent, linear algebra.", "courseAttributes": "Terms: Spr | Units: 3-4 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Convolutional Neural Networks for Visual Recognition", "courseNumber": "CS 231N:", "courseDescription": "Computer Vision has become ubiquitous in our society, with applications innsearch, image understanding, apps, mapping, medicine, drones, andnself-driving cars. Core to many of these applications are the tasks of image classification, localization and detection. This course is a deep dive into details of neural network architectures with a focus on learning end-to-end models for these tasks, particularly image classification. During the 10-week course, students will learn to implement, train and debug their own neural networks and gain a detailed understanding of cutting-edge research in computer vision. The final assignment will involve training a multi-million parameter convolutional neural network and applying it on the largest image classification dataset (ImageNet). We will focus on teaching how to set up the problem of image recognition, the learning algorithms (e.g. backpropagation), practical engineering tricks for training and fine-tuning the networks and guide the students through hands-on assignments and a final course project. Much of the background and materials of this course will be drawn from the ImageNet Challenge: http://image-net.org/challenges/LSVRC/2014/index. Prerequisites: Proficiency in Python; familiarity with C/C++; CS 131 and CS 229 or equivalents; Math 21 or equivalent, linear algebra.", "courseAttributes": "Terms: Spr | Units: 3-4 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Convolutional Neural Networks for Visual Recognition", "courseNumber": "CS 231N:", "courseDescription": "Computer Vision has become ubiquitous in our society, with applications innsearch, image understanding, apps, mapping, medicine, drones, andnself-driving cars. Core to many of these applications are the tasks of image classification, localization and detection. This course is a deep dive into details of neural network architectures with a focus on learning end-to-end models for these tasks, particularly image classification. During the 10-week course, students will learn to implement, train and debug their own neural networks and gain a detailed understanding of cutting-edge research in computer vision. The final assignment will involve training a multi-million parameter convolutional neural network and applying it on the largest image classification dataset (ImageNet). We will focus on teaching how to set up the problem of image recognition, the learning algorithms (e.g. backpropagation), practical engineering tricks for training and fine-tuning the networks and guide the students through hands-on assignments and a final course project. Much of the background and materials of this course will be drawn from the ImageNet Challenge: http://image-net.org/challenges/LSVRC/2014/index. Prerequisites: Proficiency in Python; familiarity with C/C++; CS 131 and CS 229 or equivalents; Math 21 or equivalent, linear algebra.", "courseAttributes": "Terms: Spr | Units: 3-4 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Convolutional Neural Networks for Visual Recognition", "courseNumber": "CS 231N:", "courseDescription": "Computer Vision has become ubiquitous in our society, with applications innsearch, image understanding, apps, mapping, medicine, drones, andnself-driving cars. Core to many of these applications are the tasks of image classification, localization and detection. This course is a deep dive into details of neural network architectures with a focus on learning end-to-end models for these tasks, particularly image classification. During the 10-week course, students will learn to implement, train and debug their own neural networks and gain a detailed understanding of cutting-edge research in computer vision. The final assignment will involve training a multi-million parameter convolutional neural network and applying it on the largest image classification dataset (ImageNet). We will focus on teaching how to set up the problem of image recognition, the learning algorithms (e.g. backpropagation), practical engineering tricks for training and fine-tuning the networks and guide the students through hands-on assignments and a final course project. Much of the background and materials of this course will be drawn from the ImageNet Challenge: http://image-net.org/challenges/LSVRC/2014/index. Prerequisites: Proficiency in Python; familiarity with C/C++; CS 131 and CS 229 or equivalents; Math 21 or equivalent, linear algebra.", "courseAttributes": "Terms: Spr | Units: 3-4 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Convolutional Neural Networks for Visual Recognition", "courseNumber": "CS 231N:", "courseDescription": "Computer Vision has become ubiquitous in our society, with applications innsearch, image understanding, apps, mapping, medicine, drones, andnself-driving cars. Core to many of these applications are the tasks of image classification, localization and detection. This course is a deep dive into details of neural network architectures with a focus on learning end-to-end models for these tasks, particularly image classification. During the 10-week course, students will learn to implement, train and debug their own neural networks and gain a detailed understanding of cutting-edge research in computer vision. The final assignment will involve training a multi-million parameter convolutional neural network and applying it on the largest image classification dataset (ImageNet). We will focus on teaching how to set up the problem of image recognition, the learning algorithms (e.g. backpropagation), practical engineering tricks for training and fine-tuning the networks and guide the students through hands-on assignments and a final course project. Much of the background and materials of this course will be drawn from the ImageNet Challenge: http://image-net.org/challenges/LSVRC/2014/index. Prerequisites: Proficiency in Python; familiarity with C/C++; CS 131 and CS 229 or equivalents; Math 21 or equivalent, linear algebra.", "courseAttributes": "Terms: Spr | Units: 3-4 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Convolutional Neural Networks for Visual Recognition", "courseNumber": "CS 231N:", "courseDescription": "Computer Vision has become ubiquitous in our society, with applications innsearch, image understanding, apps, mapping, medicine, drones, andnself-driving cars. Core to many of these applications are the tasks of image classification, localization and detection. This course is a deep dive into details of neural network architectures with a focus on learning end-to-end models for these tasks, particularly image classification. During the 10-week course, students will learn to implement, train and debug their own neural networks and gain a detailed understanding of cutting-edge research in computer vision. The final assignment will involve training a multi-million parameter convolutional neural network and applying it on the largest image classification dataset (ImageNet). We will focus on teaching how to set up the problem of image recognition, the learning algorithms (e.g. backpropagation), practical engineering tricks for training and fine-tuning the networks and guide the students through hands-on assignments and a final course project. Much of the background and materials of this course will be drawn from the ImageNet Challenge: http://image-net.org/challenges/LSVRC/2014/index. Prerequisites: Proficiency in Python; familiarity with C/C++; CS 131 and CS 229 or equivalents; Math 21 or equivalent, linear algebra.", "courseAttributes": "Terms: Spr | Units: 3-4 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Convolutional Neural Networks for Visual Recognition", "courseNumber": "CS 231N:", "courseDescription": "Computer Vision has become ubiquitous in our society, with applications innsearch, image understanding, apps, mapping, medicine, drones, andnself-driving cars. Core to many of these applications are the tasks of image classification, localization and detection. This course is a deep dive into details of neural network architectures with a focus on learning end-to-end models for these tasks, particularly image classification. During the 10-week course, students will learn to implement, train and debug their own neural networks and gain a detailed understanding of cutting-edge research in computer vision. The final assignment will involve training a multi-million parameter convolutional neural network and applying it on the largest image classification dataset (ImageNet). We will focus on teaching how to set up the problem of image recognition, the learning algorithms (e.g. backpropagation), practical engineering tricks for training and fine-tuning the networks and guide the students through hands-on assignments and a final course project. Much of the background and materials of this course will be drawn from the ImageNet Challenge: http://image-net.org/challenges/LSVRC/2014/index. Prerequisites: Proficiency in Python; familiarity with C/C++; CS 131 and CS 229 or equivalents; Math 21 or equivalent, linear algebra.", "courseAttributes": "Terms: Spr | Units: 3-4 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Convolutional Neural Networks for Visual Recognition", "courseNumber": "CS 231N:", "courseDescription": "Computer Vision has become ubiquitous in our society, with applications innsearch, image understanding, apps, mapping, medicine, drones, andnself-driving cars. Core to many of these applications are the tasks of image classification, localization and detection. This course is a deep dive into details of neural network architectures with a focus on learning end-to-end models for these tasks, particularly image classification. During the 10-week course, students will learn to implement, train and debug their own neural networks and gain a detailed understanding of cutting-edge research in computer vision. The final assignment will involve training a multi-million parameter convolutional neural network and applying it on the largest image classification dataset (ImageNet). We will focus on teaching how to set up the problem of image recognition, the learning algorithms (e.g. backpropagation), practical engineering tricks for training and fine-tuning the networks and guide the students through hands-on assignments and a final course project. Much of the background and materials of this course will be drawn from the ImageNet Challenge: http://image-net.org/challenges/LSVRC/2014/index. Prerequisites: Proficiency in Python; familiarity with C/C++; CS 131 and CS 229 or equivalents; Math 21 or equivalent, linear algebra.", "courseAttributes": "Terms: Spr | Units: 3-4 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Convolutional Neural Networks for Visual Recognition", "courseNumber": "CS 231N:", "courseDescription": "Computer Vision has become ubiquitous in our society, with applications innsearch, image understanding, apps, mapping, medicine, drones, andnself-driving cars. Core to many of these applications are the tasks of image classification, localization and detection. This course is a deep dive into details of neural network architectures with a focus on learning end-to-end models for these tasks, particularly image classification. During the 10-week course, students will learn to implement, train and debug their own neural networks and gain a detailed understanding of cutting-edge research in computer vision. The final assignment will involve training a multi-million parameter convolutional neural network and applying it on the largest image classification dataset (ImageNet). We will focus on teaching how to set up the problem of image recognition, the learning algorithms (e.g. backpropagation), practical engineering tricks for training and fine-tuning the networks and guide the students through hands-on assignments and a final course project. Much of the background and materials of this course will be drawn from the ImageNet Challenge: http://image-net.org/challenges/LSVRC/2014/index. Prerequisites: Proficiency in Python; familiarity with C/C++; CS 131 and CS 229 or equivalents; Math 21 or equivalent, linear algebra.", "courseAttributes": "Terms: Spr | Units: 3-4 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Convolutional Neural Networks for Visual Recognition", "courseNumber": "CS 231N:", "courseDescription": "Computer Vision has become ubiquitous in our society, with applications innsearch, image understanding, apps, mapping, medicine, drones, andnself-driving cars. Core to many of these applications are the tasks of image classification, localization and detection. This course is a deep dive into details of neural network architectures with a focus on learning end-to-end models for these tasks, particularly image classification. During the 10-week course, students will learn to implement, train and debug their own neural networks and gain a detailed understanding of cutting-edge research in computer vision. The final assignment will involve training a multi-million parameter convolutional neural network and applying it on the largest image classification dataset (ImageNet). We will focus on teaching how to set up the problem of image recognition, the learning algorithms (e.g. backpropagation), practical engineering tricks for training and fine-tuning the networks and guide the students through hands-on assignments and a final course project. Much of the background and materials of this course will be drawn from the ImageNet Challenge: http://image-net.org/challenges/LSVRC/2014/index. Prerequisites: Proficiency in Python; familiarity with C/C++; CS 131 and CS 229 or equivalents; Math 21 or equivalent, linear algebra.", "courseAttributes": "Terms: Spr | Units: 3-4 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Convolutional Neural Networks for Visual Recognition", "courseNumber": "CS 231N:", "courseDescription": "Computer Vision has become ubiquitous in our society, with applications innsearch, image understanding, apps, mapping, medicine, drones, andnself-driving cars. Core to many of these applications are the tasks of image classification, localization and detection. This course is a deep dive into details of neural network architectures with a focus on learning end-to-end models for these tasks, particularly image classification. During the 10-week course, students will learn to implement, train and debug their own neural networks and gain a detailed understanding of cutting-edge research in computer vision. The final assignment will involve training a multi-million parameter convolutional neural network and applying it on the largest image classification dataset (ImageNet). We will focus on teaching how to set up the problem of image recognition, the learning algorithms (e.g. backpropagation), practical engineering tricks for training and fine-tuning the networks and guide the students through hands-on assignments and a final course project. Much of the background and materials of this course will be drawn from the ImageNet Challenge: http://image-net.org/challenges/LSVRC/2014/index. Prerequisites: Proficiency in Python; familiarity with C/C++; CS 131 and CS 229 or equivalents; Math 21 or equivalent, linear algebra.", "courseAttributes": "Terms: Spr | Units: 3-4 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Convolutional Neural Networks for Visual Recognition", "courseNumber": "CS 231N:", "courseDescription": "Computer Vision has become ubiquitous in our society, with applications innsearch, image understanding, apps, mapping, medicine, drones, andnself-driving cars. Core to many of these applications are the tasks of image classification, localization and detection. This course is a deep dive into details of neural network architectures with a focus on learning end-to-end models for these tasks, particularly image classification. During the 10-week course, students will learn to implement, train and debug their own neural networks and gain a detailed understanding of cutting-edge research in computer vision. The final assignment will involve training a multi-million parameter convolutional neural network and applying it on the largest image classification dataset (ImageNet). We will focus on teaching how to set up the problem of image recognition, the learning algorithms (e.g. backpropagation), practical engineering tricks for training and fine-tuning the networks and guide the students through hands-on assignments and a final course project. Much of the background and materials of this course will be drawn from the ImageNet Challenge: http://image-net.org/challenges/LSVRC/2014/index. Prerequisites: Proficiency in Python; familiarity with C/C++; CS 131 and CS 229 or equivalents; Math 21 or equivalent, linear algebra.", "courseAttributes": "Terms: Spr | Units: 3-4 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Convolutional Neural Networks for Visual Recognition", "courseNumber": "CS 231N:", "courseDescription": "Computer Vision has become ubiquitous in our society, with applications innsearch, image understanding, apps, mapping, medicine, drones, andnself-driving cars. Core to many of these applications are the tasks of image classification, localization and detection. This course is a deep dive into details of neural network architectures with a focus on learning end-to-end models for these tasks, particularly image classification. During the 10-week course, students will learn to implement, train and debug their own neural networks and gain a detailed understanding of cutting-edge research in computer vision. The final assignment will involve training a multi-million parameter convolutional neural network and applying it on the largest image classification dataset (ImageNet). We will focus on teaching how to set up the problem of image recognition, the learning algorithms (e.g. backpropagation), practical engineering tricks for training and fine-tuning the networks and guide the students through hands-on assignments and a final course project. Much of the background and materials of this course will be drawn from the ImageNet Challenge: http://image-net.org/challenges/LSVRC/2014/index. Prerequisites: Proficiency in Python; familiarity with C/C++; CS 131 and CS 229 or equivalents; Math 21 or equivalent, linear algebra.", "courseAttributes": "Terms: Spr | Units: 3-4 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Convolutional Neural Networks for Visual Recognition", "courseNumber": "CS 231N:", "courseDescription": "Computer Vision has become ubiquitous in our society, with applications innsearch, image understanding, apps, mapping, medicine, drones, andnself-driving cars. Core to many of these applications are the tasks of image classification, localization and detection. This course is a deep dive into details of neural network architectures with a focus on learning end-to-end models for these tasks, particularly image classification. During the 10-week course, students will learn to implement, train and debug their own neural networks and gain a detailed understanding of cutting-edge research in computer vision. The final assignment will involve training a multi-million parameter convolutional neural network and applying it on the largest image classification dataset (ImageNet). We will focus on teaching how to set up the problem of image recognition, the learning algorithms (e.g. backpropagation), practical engineering tricks for training and fine-tuning the networks and guide the students through hands-on assignments and a final course project. Much of the background and materials of this course will be drawn from the ImageNet Challenge: http://image-net.org/challenges/LSVRC/2014/index. Prerequisites: Proficiency in Python; familiarity with C/C++; CS 131 and CS 229 or equivalents; Math 21 or equivalent, linear algebra.", "courseAttributes": "Terms: Spr | Units: 3-4 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Convolutional Neural Networks for Visual Recognition", "courseNumber": "CS 231N:", "courseDescription": "Computer Vision has become ubiquitous in our society, with applications innsearch, image understanding, apps, mapping, medicine, drones, andnself-driving cars. Core to many of these applications are the tasks of image classification, localization and detection. This course is a deep dive into details of neural network architectures with a focus on learning end-to-end models for these tasks, particularly image classification. During the 10-week course, students will learn to implement, train and debug their own neural networks and gain a detailed understanding of cutting-edge research in computer vision. The final assignment will involve training a multi-million parameter convolutional neural network and applying it on the largest image classification dataset (ImageNet). We will focus on teaching how to set up the problem of image recognition, the learning algorithms (e.g. backpropagation), practical engineering tricks for training and fine-tuning the networks and guide the students through hands-on assignments and a final course project. Much of the background and materials of this course will be drawn from the ImageNet Challenge: http://image-net.org/challenges/LSVRC/2014/index. Prerequisites: Proficiency in Python; familiarity with C/C++; CS 131 and CS 229 or equivalents; Math 21 or equivalent, linear algebra.", "courseAttributes": "Terms: Spr | Units: 3-4 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Convolutional Neural Networks for Visual Recognition", "courseNumber": "CS 231N:", "courseDescription": "Computer Vision has become ubiquitous in our society, with applications innsearch, image understanding, apps, mapping, medicine, drones, andnself-driving cars. Core to many of these applications are the tasks of image classification, localization and detection. This course is a deep dive into details of neural network architectures with a focus on learning end-to-end models for these tasks, particularly image classification. During the 10-week course, students will learn to implement, train and debug their own neural networks and gain a detailed understanding of cutting-edge research in computer vision. The final assignment will involve training a multi-million parameter convolutional neural network and applying it on the largest image classification dataset (ImageNet). We will focus on teaching how to set up the problem of image recognition, the learning algorithms (e.g. backpropagation), practical engineering tricks for training and fine-tuning the networks and guide the students through hands-on assignments and a final course project. Much of the background and materials of this course will be drawn from the ImageNet Challenge: http://image-net.org/challenges/LSVRC/2014/index. Prerequisites: Proficiency in Python; familiarity with C/C++; CS 131 and CS 229 or equivalents; Math 21 or equivalent, linear algebra.", "courseAttributes": "Terms: Spr | Units: 3-4 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Convolutional Neural Networks for Visual Recognition", "courseNumber": "CS 231N:", "courseDescription": "Computer Vision has become ubiquitous in our society, with applications innsearch, image understanding, apps, mapping, medicine, drones, andnself-driving cars. Core to many of these applications are the tasks of image classification, localization and detection. This course is a deep dive into details of neural network architectures with a focus on learning end-to-end models for these tasks, particularly image classification. During the 10-week course, students will learn to implement, train and debug their own neural networks and gain a detailed understanding of cutting-edge research in computer vision. The final assignment will involve training a multi-million parameter convolutional neural network and applying it on the largest image classification dataset (ImageNet). We will focus on teaching how to set up the problem of image recognition, the learning algorithms (e.g. backpropagation), practical engineering tricks for training and fine-tuning the networks and guide the students through hands-on assignments and a final course project. Much of the background and materials of this course will be drawn from the ImageNet Challenge: http://image-net.org/challenges/LSVRC/2014/index. Prerequisites: Proficiency in Python; familiarity with C/C++; CS 131 and CS 229 or equivalents; Math 21 or equivalent, linear algebra.", "courseAttributes": "Terms: Spr | Units: 3-4 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Convolutional Neural Networks for Visual Recognition", "courseNumber": "CS 231N:", "courseDescription": "Computer Vision has become ubiquitous in our society, with applications innsearch, image understanding, apps, mapping, medicine, drones, andnself-driving cars. Core to many of these applications are the tasks of image classification, localization and detection. This course is a deep dive into details of neural network architectures with a focus on learning end-to-end models for these tasks, particularly image classification. During the 10-week course, students will learn to implement, train and debug their own neural networks and gain a detailed understanding of cutting-edge research in computer vision. The final assignment will involve training a multi-million parameter convolutional neural network and applying it on the largest image classification dataset (ImageNet). We will focus on teaching how to set up the problem of image recognition, the learning algorithms (e.g. backpropagation), practical engineering tricks for training and fine-tuning the networks and guide the students through hands-on assignments and a final course project. Much of the background and materials of this course will be drawn from the ImageNet Challenge: http://image-net.org/challenges/LSVRC/2014/index. Prerequisites: Proficiency in Python; familiarity with C/C++; CS 131 and CS 229 or equivalents; Math 21 or equivalent, linear algebra.", "courseAttributes": "Terms: Spr | Units: 3-4 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Convolutional Neural Networks for Visual Recognition", "courseNumber": "CS 231N:", "courseDescription": "Computer Vision has become ubiquitous in our society, with applications innsearch, image understanding, apps, mapping, medicine, drones, andnself-driving cars. Core to many of these applications are the tasks of image classification, localization and detection. This course is a deep dive into details of neural network architectures with a focus on learning end-to-end models for these tasks, particularly image classification. During the 10-week course, students will learn to implement, train and debug their own neural networks and gain a detailed understanding of cutting-edge research in computer vision. The final assignment will involve training a multi-million parameter convolutional neural network and applying it on the largest image classification dataset (ImageNet). We will focus on teaching how to set up the problem of image recognition, the learning algorithms (e.g. backpropagation), practical engineering tricks for training and fine-tuning the networks and guide the students through hands-on assignments and a final course project. Much of the background and materials of this course will be drawn from the ImageNet Challenge: http://image-net.org/challenges/LSVRC/2014/index. Prerequisites: Proficiency in Python; familiarity with C/C++; CS 131 and CS 229 or equivalents; Math 21 or equivalent, linear algebra.", "courseAttributes": "Terms: Spr | Units: 3-4 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Convolutional Neural Networks for Visual Recognition", "courseNumber": "CS 231N:", "courseDescription": "Computer Vision has become ubiquitous in our society, with applications innsearch, image understanding, apps, mapping, medicine, drones, andnself-driving cars. Core to many of these applications are the tasks of image classification, localization and detection. This course is a deep dive into details of neural network architectures with a focus on learning end-to-end models for these tasks, particularly image classification. During the 10-week course, students will learn to implement, train and debug their own neural networks and gain a detailed understanding of cutting-edge research in computer vision. The final assignment will involve training a multi-million parameter convolutional neural network and applying it on the largest image classification dataset (ImageNet). We will focus on teaching how to set up the problem of image recognition, the learning algorithms (e.g. backpropagation), practical engineering tricks for training and fine-tuning the networks and guide the students through hands-on assignments and a final course project. Much of the background and materials of this course will be drawn from the ImageNet Challenge: http://image-net.org/challenges/LSVRC/2014/index. Prerequisites: Proficiency in Python; familiarity with C/C++; CS 131 and CS 229 or equivalents; Math 21 or equivalent, linear algebra.", "courseAttributes": "Terms: Spr | Units: 3-4 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Convolutional Neural Networks for Visual Recognition", "courseNumber": "CS 231N:", "courseDescription": "Computer Vision has become ubiquitous in our society, with applications innsearch, image understanding, apps, mapping, medicine, drones, andnself-driving cars. Core to many of these applications are the tasks of image classification, localization and detection. This course is a deep dive into details of neural network architectures with a focus on learning end-to-end models for these tasks, particularly image classification. During the 10-week course, students will learn to implement, train and debug their own neural networks and gain a detailed understanding of cutting-edge research in computer vision. The final assignment will involve training a multi-million parameter convolutional neural network and applying it on the largest image classification dataset (ImageNet). We will focus on teaching how to set up the problem of image recognition, the learning algorithms (e.g. backpropagation), practical engineering tricks for training and fine-tuning the networks and guide the students through hands-on assignments and a final course project. Much of the background and materials of this course will be drawn from the ImageNet Challenge: http://image-net.org/challenges/LSVRC/2014/index. Prerequisites: Proficiency in Python; familiarity with C/C++; CS 131 and CS 229 or equivalents; Math 21 or equivalent, linear algebra.", "courseAttributes": "Terms: Spr | Units: 3-4 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Convolutional Neural Networks for Visual Recognition", "courseNumber": "CS 231N:", "courseDescription": "Computer Vision has become ubiquitous in our society, with applications innsearch, image understanding, apps, mapping, medicine, drones, andnself-driving cars. Core to many of these applications are the tasks of image classification, localization and detection. This course is a deep dive into details of neural network architectures with a focus on learning end-to-end models for these tasks, particularly image classification. During the 10-week course, students will learn to implement, train and debug their own neural networks and gain a detailed understanding of cutting-edge research in computer vision. The final assignment will involve training a multi-million parameter convolutional neural network and applying it on the largest image classification dataset (ImageNet). We will focus on teaching how to set up the problem of image recognition, the learning algorithms (e.g. backpropagation), practical engineering tricks for training and fine-tuning the networks and guide the students through hands-on assignments and a final course project. Much of the background and materials of this course will be drawn from the ImageNet Challenge: http://image-net.org/challenges/LSVRC/2014/index. Prerequisites: Proficiency in Python; familiarity with C/C++; CS 131 and CS 229 or equivalents; Math 21 or equivalent, linear algebra.", "courseAttributes": "Terms: Spr | Units: 3-4 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Convolutional Neural Networks for Visual Recognition", "courseNumber": "CS 231N:", "courseDescription": "Computer Vision has become ubiquitous in our society, with applications innsearch, image understanding, apps, mapping, medicine, drones, andnself-driving cars. Core to many of these applications are the tasks of image classification, localization and detection. This course is a deep dive into details of neural network architectures with a focus on learning end-to-end models for these tasks, particularly image classification. During the 10-week course, students will learn to implement, train and debug their own neural networks and gain a detailed understanding of cutting-edge research in computer vision. The final assignment will involve training a multi-million parameter convolutional neural network and applying it on the largest image classification dataset (ImageNet). We will focus on teaching how to set up the problem of image recognition, the learning algorithms (e.g. backpropagation), practical engineering tricks for training and fine-tuning the networks and guide the students through hands-on assignments and a final course project. Much of the background and materials of this course will be drawn from the ImageNet Challenge: http://image-net.org/challenges/LSVRC/2014/index. Prerequisites: Proficiency in Python; familiarity with C/C++; CS 131 and CS 229 or equivalents; Math 21 or equivalent, linear algebra.", "courseAttributes": "Terms: Spr | Units: 3-4 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}]}}
{"Jure Leskovec": {"courses": [{"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)", "courseLevel": "Undergraduate"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)", "courseLevel": "Undergraduate"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)", "courseLevel": "Undergraduate"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)", "courseLevel": "Undergraduate"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)", "courseLevel": "Undergraduate"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)", "courseLevel": "Undergraduate"}]}}
{"John C. Duchi": {"courses": [{"courseTitle": "Curricular Practical Training", "courseNumber": "CS 390A:", "courseDescription": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1 | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Curricular Practical Training", "courseNumber": "CS 390A:", "courseDescription": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1 | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Curricular Practical Training", "courseNumber": "CS 390A:", "courseDescription": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1 | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Curricular Practical Training", "courseNumber": "CS 390A:", "courseDescription": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1 | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Curricular Practical Training", "courseNumber": "CS 390A:", "courseDescription": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1 | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Curricular Practical Training", "courseNumber": "CS 390A:", "courseDescription": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1 | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Curricular Practical Training", "courseNumber": "CS 390A:", "courseDescription": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1 | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Curricular Practical Training", "courseNumber": "CS 390A:", "courseDescription": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1 | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Curricular Practical Training", "courseNumber": "CS 390A:", "courseDescription": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1 | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Curricular Practical Training", "courseNumber": "CS 390A:", "courseDescription": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1 | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Curricular Practical Training", "courseNumber": "CS 390A:", "courseDescription": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1 | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Curricular Practical Training", "courseNumber": "CS 390A:", "courseDescription": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1 | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Curricular Practical Training", "courseNumber": "CS 390A:", "courseDescription": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1 | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Curricular Practical Training", "courseNumber": "CS 390A:", "courseDescription": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1 | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Curricular Practical Training", "courseNumber": "CS 390A:", "courseDescription": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1 | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Curricular Practical Training", "courseNumber": "CS 390A:", "courseDescription": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1 | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}]}}
{"Hector Garcia-Molina": {"courses": [{"courseTitle": "Curricular Practical Training", "courseNumber": "CS 390A:", "courseDescription": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1 | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Curricular Practical Training", "courseNumber": "CS 390A:", "courseDescription": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1 | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Curricular Practical Training", "courseNumber": "CS 390A:", "courseDescription": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1 | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Curricular Practical Training", "courseNumber": "CS 390A:", "courseDescription": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1 | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Curricular Practical Training", "courseNumber": "CS 390A:", "courseDescription": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1 | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Curricular Practical Training", "courseNumber": "CS 390A:", "courseDescription": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1 | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Curricular Practical Training", "courseNumber": "CS 390A:", "courseDescription": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1 | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Curricular Practical Training", "courseNumber": "CS 390A:", "courseDescription": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1 | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Curricular Practical Training", "courseNumber": "CS 390A:", "courseDescription": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1 | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Curricular Practical Training", "courseNumber": "CS 390A:", "courseDescription": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1 | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Curricular Practical Training", "courseNumber": "CS 390A:", "courseDescription": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1 | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Curricular Practical Training", "courseNumber": "CS 390A:", "courseDescription": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1 | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Curricular Practical Training", "courseNumber": "CS 390A:", "courseDescription": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1 | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Curricular Practical Training", "courseNumber": "CS 390A:", "courseDescription": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1 | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Curricular Practical Training", "courseNumber": "CS 390A:", "courseDescription": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1 | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Curricular Practical Training", "courseNumber": "CS 390A:", "courseDescription": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1 | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Curricular Practical Training", "courseNumber": "CS 390A:", "courseDescription": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1 | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Curricular Practical Training", "courseNumber": "CS 390A:", "courseDescription": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1 | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Curricular Practical Training", "courseNumber": "CS 390A:", "courseDescription": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1 | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Curricular Practical Training", "courseNumber": "CS 390A:", "courseDescription": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1 | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Curricular Practical Training", "courseNumber": "CS 390A:", "courseDescription": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1 | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Curricular Practical Training", "courseNumber": "CS 390A:", "courseDescription": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1 | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Curricular Practical Training", "courseNumber": "CS 390A:", "courseDescription": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1 | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}]}}
{"Kayvon Fatahalian": {"courses": [{"courseTitle": "Parallel Computing", "courseNumber": "CS 149:", "courseDescription": "This course is an introduction to parallelism and parallel programming. Most new computer architectures are parallel; programming these machines requires knowledge of the basic issues of and techniques for writing parallel software. Topics: varieties of parallelism in current hardware (e.g., fast networks, multicore, accelerators such as GPUs, vector instruction sets), importance of locality, implicit vs. explicit parallelism, shared vs. non-shared memory, synchronization mechanisms (locking, atomicity, transactions, barriers), and parallel programming models (threads, data parallel/streaming, MapReduce, Apache Spark, SPMD, message passing, SIMT, transactions, and nested parallelism). Significant parallel programming assignments will be given as homework. The course is open to students who have completed the introductory CS course sequence through 110.", "courseAttributes": "Terms: Win | Units: 3-4 | UG Reqs: GER:DB-EngrAppSci | Grading: Letter or Credit/No Credit", "courseLevel": "Undergraduate"}, {"courseTitle": "Parallel Computing", "courseNumber": "CS 149:", "courseDescription": "This course is an introduction to parallelism and parallel programming. Most new computer architectures are parallel; programming these machines requires knowledge of the basic issues of and techniques for writing parallel software. Topics: varieties of parallelism in current hardware (e.g., fast networks, multicore, accelerators such as GPUs, vector instruction sets), importance of locality, implicit vs. explicit parallelism, shared vs. non-shared memory, synchronization mechanisms (locking, atomicity, transactions, barriers), and parallel programming models (threads, data parallel/streaming, MapReduce, Apache Spark, SPMD, message passing, SIMT, transactions, and nested parallelism). Significant parallel programming assignments will be given as homework. The course is open to students who have completed the introductory CS course sequence through 110.", "courseAttributes": "Terms: Win | Units: 3-4 | UG Reqs: GER:DB-EngrAppSci | Grading: Letter or Credit/No Credit", "courseLevel": "Undergraduate"}, {"courseTitle": "Parallel Computing", "courseNumber": "CS 149:", "courseDescription": "This course is an introduction to parallelism and parallel programming. Most new computer architectures are parallel; programming these machines requires knowledge of the basic issues of and techniques for writing parallel software. Topics: varieties of parallelism in current hardware (e.g., fast networks, multicore, accelerators such as GPUs, vector instruction sets), importance of locality, implicit vs. explicit parallelism, shared vs. non-shared memory, synchronization mechanisms (locking, atomicity, transactions, barriers), and parallel programming models (threads, data parallel/streaming, MapReduce, Apache Spark, SPMD, message passing, SIMT, transactions, and nested parallelism). Significant parallel programming assignments will be given as homework. The course is open to students who have completed the introductory CS course sequence through 110.", "courseAttributes": "Terms: Win | Units: 3-4 | UG Reqs: GER:DB-EngrAppSci | Grading: Letter or Credit/No Credit", "courseLevel": "Undergraduate"}, {"courseTitle": "Parallel Computing", "courseNumber": "CS 149:", "courseDescription": "This course is an introduction to parallelism and parallel programming. Most new computer architectures are parallel; programming these machines requires knowledge of the basic issues of and techniques for writing parallel software. Topics: varieties of parallelism in current hardware (e.g., fast networks, multicore, accelerators such as GPUs, vector instruction sets), importance of locality, implicit vs. explicit parallelism, shared vs. non-shared memory, synchronization mechanisms (locking, atomicity, transactions, barriers), and parallel programming models (threads, data parallel/streaming, MapReduce, Apache Spark, SPMD, message passing, SIMT, transactions, and nested parallelism). Significant parallel programming assignments will be given as homework. The course is open to students who have completed the introductory CS course sequence through 110.", "courseAttributes": "Terms: Win | Units: 3-4 | UG Reqs: GER:DB-EngrAppSci | Grading: Letter or Credit/No Credit", "courseLevel": "Undergraduate"}]}}
{"Kayvon Fatahalian": {"courses": [{"courseTitle": "Interactive Computer Graphics", "courseNumber": "CS 248:", "courseDescription": "This course provides a comprehensive introduction to interactive computer graphics, focusing on fundamental concepts and techniques, as well as their cross-cutting relationship to multiple problem domains in interactive graphics (such as rendering, animation, geometry, image processing). Topics include: 2D and 3D drawing, sampling theory, interpolation, rasterization, image compositing, the real-time GPU graphics pipeline (and parallel rendering), VR rendering, geometric transformations, curves and surfaces, geometric data structures, subdivision, meshing, spatial hierarchies, image processing, time integration, physically-based animation, and inverse kinematics.  The course will involve several in-depth programming assignments and a self-selected final project that explores concepts covered in the class. Prerequisite: CS 107, MATH 51.", "courseAttributes": "Terms: Win | Units: 3-4 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Interactive Computer Graphics", "courseNumber": "CS 248:", "courseDescription": "This course provides a comprehensive introduction to interactive computer graphics, focusing on fundamental concepts and techniques, as well as their cross-cutting relationship to multiple problem domains in interactive graphics (such as rendering, animation, geometry, image processing). Topics include: 2D and 3D drawing, sampling theory, interpolation, rasterization, image compositing, the real-time GPU graphics pipeline (and parallel rendering), VR rendering, geometric transformations, curves and surfaces, geometric data structures, subdivision, meshing, spatial hierarchies, image processing, time integration, physically-based animation, and inverse kinematics.  The course will involve several in-depth programming assignments and a self-selected final project that explores concepts covered in the class. Prerequisite: CS 107, MATH 51.", "courseAttributes": "Terms: Win | Units: 3-4 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Interactive Computer Graphics", "courseNumber": "CS 248:", "courseDescription": "This course provides a comprehensive introduction to interactive computer graphics, focusing on fundamental concepts and techniques, as well as their cross-cutting relationship to multiple problem domains in interactive graphics (such as rendering, animation, geometry, image processing). Topics include: 2D and 3D drawing, sampling theory, interpolation, rasterization, image compositing, the real-time GPU graphics pipeline (and parallel rendering), VR rendering, geometric transformations, curves and surfaces, geometric data structures, subdivision, meshing, spatial hierarchies, image processing, time integration, physically-based animation, and inverse kinematics.  The course will involve several in-depth programming assignments and a self-selected final project that explores concepts covered in the class. Prerequisite: CS 107, MATH 51.", "courseAttributes": "Terms: Win | Units: 3-4 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Interactive Computer Graphics", "courseNumber": "CS 248:", "courseDescription": "This course provides a comprehensive introduction to interactive computer graphics, focusing on fundamental concepts and techniques, as well as their cross-cutting relationship to multiple problem domains in interactive graphics (such as rendering, animation, geometry, image processing). Topics include: 2D and 3D drawing, sampling theory, interpolation, rasterization, image compositing, the real-time GPU graphics pipeline (and parallel rendering), VR rendering, geometric transformations, curves and surfaces, geometric data structures, subdivision, meshing, spatial hierarchies, image processing, time integration, physically-based animation, and inverse kinematics.  The course will involve several in-depth programming assignments and a self-selected final project that explores concepts covered in the class. Prerequisite: CS 107, MATH 51.", "courseAttributes": "Terms: Win | Units: 3-4 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Interactive Computer Graphics", "courseNumber": "CS 248:", "courseDescription": "This course provides a comprehensive introduction to interactive computer graphics, focusing on fundamental concepts and techniques, as well as their cross-cutting relationship to multiple problem domains in interactive graphics (such as rendering, animation, geometry, image processing). Topics include: 2D and 3D drawing, sampling theory, interpolation, rasterization, image compositing, the real-time GPU graphics pipeline (and parallel rendering), VR rendering, geometric transformations, curves and surfaces, geometric data structures, subdivision, meshing, spatial hierarchies, image processing, time integration, physically-based animation, and inverse kinematics.  The course will involve several in-depth programming assignments and a self-selected final project that explores concepts covered in the class. Prerequisite: CS 107, MATH 51.", "courseAttributes": "Terms: Win | Units: 3-4 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Interactive Computer Graphics", "courseNumber": "CS 248:", "courseDescription": "This course provides a comprehensive introduction to interactive computer graphics, focusing on fundamental concepts and techniques, as well as their cross-cutting relationship to multiple problem domains in interactive graphics (such as rendering, animation, geometry, image processing). Topics include: 2D and 3D drawing, sampling theory, interpolation, rasterization, image compositing, the real-time GPU graphics pipeline (and parallel rendering), VR rendering, geometric transformations, curves and surfaces, geometric data structures, subdivision, meshing, spatial hierarchies, image processing, time integration, physically-based animation, and inverse kinematics.  The course will involve several in-depth programming assignments and a self-selected final project that explores concepts covered in the class. Prerequisite: CS 107, MATH 51.", "courseAttributes": "Terms: Win | Units: 3-4 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Interactive Computer Graphics", "courseNumber": "CS 248:", "courseDescription": "This course provides a comprehensive introduction to interactive computer graphics, focusing on fundamental concepts and techniques, as well as their cross-cutting relationship to multiple problem domains in interactive graphics (such as rendering, animation, geometry, image processing). Topics include: 2D and 3D drawing, sampling theory, interpolation, rasterization, image compositing, the real-time GPU graphics pipeline (and parallel rendering), VR rendering, geometric transformations, curves and surfaces, geometric data structures, subdivision, meshing, spatial hierarchies, image processing, time integration, physically-based animation, and inverse kinematics.  The course will involve several in-depth programming assignments and a self-selected final project that explores concepts covered in the class. Prerequisite: CS 107, MATH 51.", "courseAttributes": "Terms: Win | Units: 3-4 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Interactive Computer Graphics", "courseNumber": "CS 248:", "courseDescription": "This course provides a comprehensive introduction to interactive computer graphics, focusing on fundamental concepts and techniques, as well as their cross-cutting relationship to multiple problem domains in interactive graphics (such as rendering, animation, geometry, image processing). Topics include: 2D and 3D drawing, sampling theory, interpolation, rasterization, image compositing, the real-time GPU graphics pipeline (and parallel rendering), VR rendering, geometric transformations, curves and surfaces, geometric data structures, subdivision, meshing, spatial hierarchies, image processing, time integration, physically-based animation, and inverse kinematics.  The course will involve several in-depth programming assignments and a self-selected final project that explores concepts covered in the class. Prerequisite: CS 107, MATH 51.", "courseAttributes": "Terms: Win | Units: 3-4 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}]}}
{"John C. Mitchell": {"courses": [{"courseTitle": "You Say You Want a Revolution (Blockchain Edition)", "courseNumber": "CS 58:", "courseDescription": "This project-based course will give creative students an opportunity to work together on revolutionary change leveraging blockchain technology. The course will provide opportunities for students to become operationally familiar with blockchain concepts, supported by presentation of blockchain fundamentals at a level accessible to those with or without a strong technical background. Specific topics include: incentives, ethics, crypto-commons, values, FOMO 3D, risks, implications and social good. Students will each discover a new possible use-case for blockchain and prototype their vision for the future accordingly. Application and impact areas may come from medicine, law, economics, history, anthropology, or other sectors. Student diversity of background will be valued highly.", "courseAttributes": "Terms: Win | Units: 2 | Grading: Letter or Credit/No Credit", "courseLevel": "Undergraduate"}, {"courseTitle": "You Say You Want a Revolution (Blockchain Edition)", "courseNumber": "CS 58:", "courseDescription": "This project-based course will give creative students an opportunity to work together on revolutionary change leveraging blockchain technology. The course will provide opportunities for students to become operationally familiar with blockchain concepts, supported by presentation of blockchain fundamentals at a level accessible to those with or without a strong technical background. Specific topics include: incentives, ethics, crypto-commons, values, FOMO 3D, risks, implications and social good. Students will each discover a new possible use-case for blockchain and prototype their vision for the future accordingly. Application and impact areas may come from medicine, law, economics, history, anthropology, or other sectors. Student diversity of background will be valued highly.", "courseAttributes": "Terms: Win | Units: 2 | Grading: Letter or Credit/No Credit", "courseLevel": "Undergraduate"}, {"courseTitle": "You Say You Want a Revolution (Blockchain Edition)", "courseNumber": "CS 58:", "courseDescription": "This project-based course will give creative students an opportunity to work together on revolutionary change leveraging blockchain technology. The course will provide opportunities for students to become operationally familiar with blockchain concepts, supported by presentation of blockchain fundamentals at a level accessible to those with or without a strong technical background. Specific topics include: incentives, ethics, crypto-commons, values, FOMO 3D, risks, implications and social good. Students will each discover a new possible use-case for blockchain and prototype their vision for the future accordingly. Application and impact areas may come from medicine, law, economics, history, anthropology, or other sectors. Student diversity of background will be valued highly.", "courseAttributes": "Terms: Win | Units: 2 | Grading: Letter or Credit/No Credit", "courseLevel": "Undergraduate"}, {"courseTitle": "You Say You Want a Revolution (Blockchain Edition)", "courseNumber": "CS 58:", "courseDescription": "This project-based course will give creative students an opportunity to work together on revolutionary change leveraging blockchain technology. The course will provide opportunities for students to become operationally familiar with blockchain concepts, supported by presentation of blockchain fundamentals at a level accessible to those with or without a strong technical background. Specific topics include: incentives, ethics, crypto-commons, values, FOMO 3D, risks, implications and social good. Students will each discover a new possible use-case for blockchain and prototype their vision for the future accordingly. Application and impact areas may come from medicine, law, economics, history, anthropology, or other sectors. Student diversity of background will be valued highly.", "courseAttributes": "Terms: Win | Units: 2 | Grading: Letter or Credit/No Credit", "courseLevel": "Undergraduate"}, {"courseTitle": "You Say You Want a Revolution (Blockchain Edition)", "courseNumber": "CS 58:", "courseDescription": "This project-based course will give creative students an opportunity to work together on revolutionary change leveraging blockchain technology. The course will provide opportunities for students to become operationally familiar with blockchain concepts, supported by presentation of blockchain fundamentals at a level accessible to those with or without a strong technical background. Specific topics include: incentives, ethics, crypto-commons, values, FOMO 3D, risks, implications and social good. Students will each discover a new possible use-case for blockchain and prototype their vision for the future accordingly. Application and impact areas may come from medicine, law, economics, history, anthropology, or other sectors. Student diversity of background will be valued highly.", "courseAttributes": "Terms: Win | Units: 2 | Grading: Letter or Credit/No Credit", "courseLevel": "Undergraduate"}, {"courseTitle": "You Say You Want a Revolution (Blockchain Edition)", "courseNumber": "CS 58:", "courseDescription": "This project-based course will give creative students an opportunity to work together on revolutionary change leveraging blockchain technology. The course will provide opportunities for students to become operationally familiar with blockchain concepts, supported by presentation of blockchain fundamentals at a level accessible to those with or without a strong technical background. Specific topics include: incentives, ethics, crypto-commons, values, FOMO 3D, risks, implications and social good. Students will each discover a new possible use-case for blockchain and prototype their vision for the future accordingly. Application and impact areas may come from medicine, law, economics, history, anthropology, or other sectors. Student diversity of background will be valued highly.", "courseAttributes": "Terms: Win | Units: 2 | Grading: Letter or Credit/No Credit", "courseLevel": "Undergraduate"}, {"courseTitle": "You Say You Want a Revolution (Blockchain Edition)", "courseNumber": "CS 58:", "courseDescription": "This project-based course will give creative students an opportunity to work together on revolutionary change leveraging blockchain technology. The course will provide opportunities for students to become operationally familiar with blockchain concepts, supported by presentation of blockchain fundamentals at a level accessible to those with or without a strong technical background. Specific topics include: incentives, ethics, crypto-commons, values, FOMO 3D, risks, implications and social good. Students will each discover a new possible use-case for blockchain and prototype their vision for the future accordingly. Application and impact areas may come from medicine, law, economics, history, anthropology, or other sectors. Student diversity of background will be valued highly.", "courseAttributes": "Terms: Win | Units: 2 | Grading: Letter or Credit/No Credit", "courseLevel": "Undergraduate"}, {"courseTitle": "You Say You Want a Revolution (Blockchain Edition)", "courseNumber": "CS 58:", "courseDescription": "This project-based course will give creative students an opportunity to work together on revolutionary change leveraging blockchain technology. The course will provide opportunities for students to become operationally familiar with blockchain concepts, supported by presentation of blockchain fundamentals at a level accessible to those with or without a strong technical background. Specific topics include: incentives, ethics, crypto-commons, values, FOMO 3D, risks, implications and social good. Students will each discover a new possible use-case for blockchain and prototype their vision for the future accordingly. Application and impact areas may come from medicine, law, economics, history, anthropology, or other sectors. Student diversity of background will be valued highly.", "courseAttributes": "Terms: Win | Units: 2 | Grading: Letter or Credit/No Credit", "courseLevel": "Undergraduate"}, {"courseTitle": "You Say You Want a Revolution (Blockchain Edition)", "courseNumber": "CS 58:", "courseDescription": "This project-based course will give creative students an opportunity to work together on revolutionary change leveraging blockchain technology. The course will provide opportunities for students to become operationally familiar with blockchain concepts, supported by presentation of blockchain fundamentals at a level accessible to those with or without a strong technical background. Specific topics include: incentives, ethics, crypto-commons, values, FOMO 3D, risks, implications and social good. Students will each discover a new possible use-case for blockchain and prototype their vision for the future accordingly. Application and impact areas may come from medicine, law, economics, history, anthropology, or other sectors. Student diversity of background will be valued highly.", "courseAttributes": "Terms: Win | Units: 2 | Grading: Letter or Credit/No Credit", "courseLevel": "Undergraduate"}, {"courseTitle": "You Say You Want a Revolution (Blockchain Edition)", "courseNumber": "CS 58:", "courseDescription": "This project-based course will give creative students an opportunity to work together on revolutionary change leveraging blockchain technology. The course will provide opportunities for students to become operationally familiar with blockchain concepts, supported by presentation of blockchain fundamentals at a level accessible to those with or without a strong technical background. Specific topics include: incentives, ethics, crypto-commons, values, FOMO 3D, risks, implications and social good. Students will each discover a new possible use-case for blockchain and prototype their vision for the future accordingly. Application and impact areas may come from medicine, law, economics, history, anthropology, or other sectors. Student diversity of background will be valued highly.", "courseAttributes": "Terms: Win | Units: 2 | Grading: Letter or Credit/No Credit", "courseLevel": "Undergraduate"}, {"courseTitle": "You Say You Want a Revolution (Blockchain Edition)", "courseNumber": "CS 58:", "courseDescription": "This project-based course will give creative students an opportunity to work together on revolutionary change leveraging blockchain technology. The course will provide opportunities for students to become operationally familiar with blockchain concepts, supported by presentation of blockchain fundamentals at a level accessible to those with or without a strong technical background. Specific topics include: incentives, ethics, crypto-commons, values, FOMO 3D, risks, implications and social good. Students will each discover a new possible use-case for blockchain and prototype their vision for the future accordingly. Application and impact areas may come from medicine, law, economics, history, anthropology, or other sectors. Student diversity of background will be valued highly.", "courseAttributes": "Terms: Win | Units: 2 | Grading: Letter or Credit/No Credit", "courseLevel": "Undergraduate"}, {"courseTitle": "You Say You Want a Revolution (Blockchain Edition)", "courseNumber": "CS 58:", "courseDescription": "This project-based course will give creative students an opportunity to work together on revolutionary change leveraging blockchain technology. The course will provide opportunities for students to become operationally familiar with blockchain concepts, supported by presentation of blockchain fundamentals at a level accessible to those with or without a strong technical background. Specific topics include: incentives, ethics, crypto-commons, values, FOMO 3D, risks, implications and social good. Students will each discover a new possible use-case for blockchain and prototype their vision for the future accordingly. Application and impact areas may come from medicine, law, economics, history, anthropology, or other sectors. Student diversity of background will be valued highly.", "courseAttributes": "Terms: Win | Units: 2 | Grading: Letter or Credit/No Credit", "courseLevel": "Undergraduate"}, {"courseTitle": "You Say You Want a Revolution (Blockchain Edition)", "courseNumber": "CS 58:", "courseDescription": "This project-based course will give creative students an opportunity to work together on revolutionary change leveraging blockchain technology. The course will provide opportunities for students to become operationally familiar with blockchain concepts, supported by presentation of blockchain fundamentals at a level accessible to those with or without a strong technical background. Specific topics include: incentives, ethics, crypto-commons, values, FOMO 3D, risks, implications and social good. Students will each discover a new possible use-case for blockchain and prototype their vision for the future accordingly. Application and impact areas may come from medicine, law, economics, history, anthropology, or other sectors. Student diversity of background will be valued highly.", "courseAttributes": "Terms: Win | Units: 2 | Grading: Letter or Credit/No Credit", "courseLevel": "Undergraduate"}, {"courseTitle": "You Say You Want a Revolution (Blockchain Edition)", "courseNumber": "CS 58:", "courseDescription": "This project-based course will give creative students an opportunity to work together on revolutionary change leveraging blockchain technology. The course will provide opportunities for students to become operationally familiar with blockchain concepts, supported by presentation of blockchain fundamentals at a level accessible to those with or without a strong technical background. Specific topics include: incentives, ethics, crypto-commons, values, FOMO 3D, risks, implications and social good. Students will each discover a new possible use-case for blockchain and prototype their vision for the future accordingly. Application and impact areas may come from medicine, law, economics, history, anthropology, or other sectors. Student diversity of background will be valued highly.", "courseAttributes": "Terms: Win | Units: 2 | Grading: Letter or Credit/No Credit", "courseLevel": "Undergraduate"}]}}
{"Leonidas J. Guibas": {"courses": [{"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)", "courseLevel": "Undergraduate"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)", "courseLevel": "Undergraduate"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)", "courseLevel": "Undergraduate"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)", "courseLevel": "Undergraduate"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)", "courseLevel": "Undergraduate"}]}}
{"Matei Zaharia": {"courses": [{"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)", "courseLevel": "Undergraduate"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)", "courseLevel": "Undergraduate"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)", "courseLevel": "Undergraduate"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)", "courseLevel": "Undergraduate"}]}}
{"Kunle Olukotun": {"courses": [{"courseTitle": "Parallel Computing", "courseNumber": "CS 149:", "courseDescription": "This course is an introduction to parallelism and parallel programming. Most new computer architectures are parallel; programming these machines requires knowledge of the basic issues of and techniques for writing parallel software. Topics: varieties of parallelism in current hardware (e.g., fast networks, multicore, accelerators such as GPUs, vector instruction sets), importance of locality, implicit vs. explicit parallelism, shared vs. non-shared memory, synchronization mechanisms (locking, atomicity, transactions, barriers), and parallel programming models (threads, data parallel/streaming, MapReduce, Apache Spark, SPMD, message passing, SIMT, transactions, and nested parallelism). Significant parallel programming assignments will be given as homework. The course is open to students who have completed the introductory CS course sequence through 110.", "courseAttributes": "Terms: Win | Units: 3-4 | UG Reqs: GER:DB-EngrAppSci | Grading: Letter or Credit/No Credit", "courseLevel": "Undergraduate"}, {"courseTitle": "Parallel Computing", "courseNumber": "CS 149:", "courseDescription": "This course is an introduction to parallelism and parallel programming. Most new computer architectures are parallel; programming these machines requires knowledge of the basic issues of and techniques for writing parallel software. Topics: varieties of parallelism in current hardware (e.g., fast networks, multicore, accelerators such as GPUs, vector instruction sets), importance of locality, implicit vs. explicit parallelism, shared vs. non-shared memory, synchronization mechanisms (locking, atomicity, transactions, barriers), and parallel programming models (threads, data parallel/streaming, MapReduce, Apache Spark, SPMD, message passing, SIMT, transactions, and nested parallelism). Significant parallel programming assignments will be given as homework. The course is open to students who have completed the introductory CS course sequence through 110.", "courseAttributes": "Terms: Win | Units: 3-4 | UG Reqs: GER:DB-EngrAppSci | Grading: Letter or Credit/No Credit", "courseLevel": "Undergraduate"}, {"courseTitle": "Parallel Computing", "courseNumber": "CS 149:", "courseDescription": "This course is an introduction to parallelism and parallel programming. Most new computer architectures are parallel; programming these machines requires knowledge of the basic issues of and techniques for writing parallel software. Topics: varieties of parallelism in current hardware (e.g., fast networks, multicore, accelerators such as GPUs, vector instruction sets), importance of locality, implicit vs. explicit parallelism, shared vs. non-shared memory, synchronization mechanisms (locking, atomicity, transactions, barriers), and parallel programming models (threads, data parallel/streaming, MapReduce, Apache Spark, SPMD, message passing, SIMT, transactions, and nested parallelism). Significant parallel programming assignments will be given as homework. The course is open to students who have completed the introductory CS course sequence through 110.", "courseAttributes": "Terms: Win | Units: 3-4 | UG Reqs: GER:DB-EngrAppSci | Grading: Letter or Credit/No Credit", "courseLevel": "Undergraduate"}, {"courseTitle": "Parallel Computing", "courseNumber": "CS 149:", "courseDescription": "This course is an introduction to parallelism and parallel programming. Most new computer architectures are parallel; programming these machines requires knowledge of the basic issues of and techniques for writing parallel software. Topics: varieties of parallelism in current hardware (e.g., fast networks, multicore, accelerators such as GPUs, vector instruction sets), importance of locality, implicit vs. explicit parallelism, shared vs. non-shared memory, synchronization mechanisms (locking, atomicity, transactions, barriers), and parallel programming models (threads, data parallel/streaming, MapReduce, Apache Spark, SPMD, message passing, SIMT, transactions, and nested parallelism). Significant parallel programming assignments will be given as homework. The course is open to students who have completed the introductory CS course sequence through 110.", "courseAttributes": "Terms: Win | Units: 3-4 | UG Reqs: GER:DB-EngrAppSci | Grading: Letter or Credit/No Credit", "courseLevel": "Undergraduate"}, {"courseTitle": "Parallel Computing", "courseNumber": "CS 149:", "courseDescription": "This course is an introduction to parallelism and parallel programming. Most new computer architectures are parallel; programming these machines requires knowledge of the basic issues of and techniques for writing parallel software. Topics: varieties of parallelism in current hardware (e.g., fast networks, multicore, accelerators such as GPUs, vector instruction sets), importance of locality, implicit vs. explicit parallelism, shared vs. non-shared memory, synchronization mechanisms (locking, atomicity, transactions, barriers), and parallel programming models (threads, data parallel/streaming, MapReduce, Apache Spark, SPMD, message passing, SIMT, transactions, and nested parallelism). Significant parallel programming assignments will be given as homework. The course is open to students who have completed the introductory CS course sequence through 110.", "courseAttributes": "Terms: Win | Units: 3-4 | UG Reqs: GER:DB-EngrAppSci | Grading: Letter or Credit/No Credit", "courseLevel": "Undergraduate"}, {"courseTitle": "Parallel Computing", "courseNumber": "CS 149:", "courseDescription": "This course is an introduction to parallelism and parallel programming. Most new computer architectures are parallel; programming these machines requires knowledge of the basic issues of and techniques for writing parallel software. Topics: varieties of parallelism in current hardware (e.g., fast networks, multicore, accelerators such as GPUs, vector instruction sets), importance of locality, implicit vs. explicit parallelism, shared vs. non-shared memory, synchronization mechanisms (locking, atomicity, transactions, barriers), and parallel programming models (threads, data parallel/streaming, MapReduce, Apache Spark, SPMD, message passing, SIMT, transactions, and nested parallelism). Significant parallel programming assignments will be given as homework. The course is open to students who have completed the introductory CS course sequence through 110.", "courseAttributes": "Terms: Win | Units: 3-4 | UG Reqs: GER:DB-EngrAppSci | Grading: Letter or Credit/No Credit", "courseLevel": "Undergraduate"}, {"courseTitle": "Parallel Computing", "courseNumber": "CS 149:", "courseDescription": "This course is an introduction to parallelism and parallel programming. Most new computer architectures are parallel; programming these machines requires knowledge of the basic issues of and techniques for writing parallel software. Topics: varieties of parallelism in current hardware (e.g., fast networks, multicore, accelerators such as GPUs, vector instruction sets), importance of locality, implicit vs. explicit parallelism, shared vs. non-shared memory, synchronization mechanisms (locking, atomicity, transactions, barriers), and parallel programming models (threads, data parallel/streaming, MapReduce, Apache Spark, SPMD, message passing, SIMT, transactions, and nested parallelism). Significant parallel programming assignments will be given as homework. The course is open to students who have completed the introductory CS course sequence through 110.", "courseAttributes": "Terms: Win | Units: 3-4 | UG Reqs: GER:DB-EngrAppSci | Grading: Letter or Credit/No Credit", "courseLevel": "Undergraduate"}, {"courseTitle": "Parallel Computing", "courseNumber": "CS 149:", "courseDescription": "This course is an introduction to parallelism and parallel programming. Most new computer architectures are parallel; programming these machines requires knowledge of the basic issues of and techniques for writing parallel software. Topics: varieties of parallelism in current hardware (e.g., fast networks, multicore, accelerators such as GPUs, vector instruction sets), importance of locality, implicit vs. explicit parallelism, shared vs. non-shared memory, synchronization mechanisms (locking, atomicity, transactions, barriers), and parallel programming models (threads, data parallel/streaming, MapReduce, Apache Spark, SPMD, message passing, SIMT, transactions, and nested parallelism). Significant parallel programming assignments will be given as homework. The course is open to students who have completed the introductory CS course sequence through 110.", "courseAttributes": "Terms: Win | Units: 3-4 | UG Reqs: GER:DB-EngrAppSci | Grading: Letter or Credit/No Credit", "courseLevel": "Undergraduate"}, {"courseTitle": "Parallel Computing", "courseNumber": "CS 149:", "courseDescription": "This course is an introduction to parallelism and parallel programming. Most new computer architectures are parallel; programming these machines requires knowledge of the basic issues of and techniques for writing parallel software. Topics: varieties of parallelism in current hardware (e.g., fast networks, multicore, accelerators such as GPUs, vector instruction sets), importance of locality, implicit vs. explicit parallelism, shared vs. non-shared memory, synchronization mechanisms (locking, atomicity, transactions, barriers), and parallel programming models (threads, data parallel/streaming, MapReduce, Apache Spark, SPMD, message passing, SIMT, transactions, and nested parallelism). Significant parallel programming assignments will be given as homework. The course is open to students who have completed the introductory CS course sequence through 110.", "courseAttributes": "Terms: Win | Units: 3-4 | UG Reqs: GER:DB-EngrAppSci | Grading: Letter or Credit/No Credit", "courseLevel": "Undergraduate"}, {"courseTitle": "Parallel Computing", "courseNumber": "CS 149:", "courseDescription": "This course is an introduction to parallelism and parallel programming. Most new computer architectures are parallel; programming these machines requires knowledge of the basic issues of and techniques for writing parallel software. Topics: varieties of parallelism in current hardware (e.g., fast networks, multicore, accelerators such as GPUs, vector instruction sets), importance of locality, implicit vs. explicit parallelism, shared vs. non-shared memory, synchronization mechanisms (locking, atomicity, transactions, barriers), and parallel programming models (threads, data parallel/streaming, MapReduce, Apache Spark, SPMD, message passing, SIMT, transactions, and nested parallelism). Significant parallel programming assignments will be given as homework. The course is open to students who have completed the introductory CS course sequence through 110.", "courseAttributes": "Terms: Win | Units: 3-4 | UG Reqs: GER:DB-EngrAppSci | Grading: Letter or Credit/No Credit", "courseLevel": "Undergraduate"}, {"courseTitle": "Parallel Computing", "courseNumber": "CS 149:", "courseDescription": "This course is an introduction to parallelism and parallel programming. Most new computer architectures are parallel; programming these machines requires knowledge of the basic issues of and techniques for writing parallel software. Topics: varieties of parallelism in current hardware (e.g., fast networks, multicore, accelerators such as GPUs, vector instruction sets), importance of locality, implicit vs. explicit parallelism, shared vs. non-shared memory, synchronization mechanisms (locking, atomicity, transactions, barriers), and parallel programming models (threads, data parallel/streaming, MapReduce, Apache Spark, SPMD, message passing, SIMT, transactions, and nested parallelism). Significant parallel programming assignments will be given as homework. The course is open to students who have completed the introductory CS course sequence through 110.", "courseAttributes": "Terms: Win | Units: 3-4 | UG Reqs: GER:DB-EngrAppSci | Grading: Letter or Credit/No Credit", "courseLevel": "Undergraduate"}]}}
{"Matei Zaharia": {"courses": [{"courseTitle": "Principles of Data-Intensive Systems", "courseNumber": "CS 245:", "courseDescription": "Architecture of data storage and processing systems, including relational databases, cluster computing systems, stream processing and machine learning systems. Topics include database system architecture, storage organization, query optimization, transaction management, fault recovery, and parallel processing, with a focus on the key design ideas shared across many types of data-intensive systems. Prerequisites: 145, 161.", "courseAttributes": "Terms: Spr | Units: 3 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Principles of Data-Intensive Systems", "courseNumber": "CS 245:", "courseDescription": "Architecture of data storage and processing systems, including relational databases, cluster computing systems, stream processing and machine learning systems. Topics include database system architecture, storage organization, query optimization, transaction management, fault recovery, and parallel processing, with a focus on the key design ideas shared across many types of data-intensive systems. Prerequisites: 145, 161.", "courseAttributes": "Terms: Spr | Units: 3 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Principles of Data-Intensive Systems", "courseNumber": "CS 245:", "courseDescription": "Architecture of data storage and processing systems, including relational databases, cluster computing systems, stream processing and machine learning systems. Topics include database system architecture, storage organization, query optimization, transaction management, fault recovery, and parallel processing, with a focus on the key design ideas shared across many types of data-intensive systems. Prerequisites: 145, 161.", "courseAttributes": "Terms: Spr | Units: 3 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Principles of Data-Intensive Systems", "courseNumber": "CS 245:", "courseDescription": "Architecture of data storage and processing systems, including relational databases, cluster computing systems, stream processing and machine learning systems. Topics include database system architecture, storage organization, query optimization, transaction management, fault recovery, and parallel processing, with a focus on the key design ideas shared across many types of data-intensive systems. Prerequisites: 145, 161.", "courseAttributes": "Terms: Spr | Units: 3 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Principles of Data-Intensive Systems", "courseNumber": "CS 245:", "courseDescription": "Architecture of data storage and processing systems, including relational databases, cluster computing systems, stream processing and machine learning systems. Topics include database system architecture, storage organization, query optimization, transaction management, fault recovery, and parallel processing, with a focus on the key design ideas shared across many types of data-intensive systems. Prerequisites: 145, 161.", "courseAttributes": "Terms: Spr | Units: 3 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Principles of Data-Intensive Systems", "courseNumber": "CS 245:", "courseDescription": "Architecture of data storage and processing systems, including relational databases, cluster computing systems, stream processing and machine learning systems. Topics include database system architecture, storage organization, query optimization, transaction management, fault recovery, and parallel processing, with a focus on the key design ideas shared across many types of data-intensive systems. Prerequisites: 145, 161.", "courseAttributes": "Terms: Spr | Units: 3 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Principles of Data-Intensive Systems", "courseNumber": "CS 245:", "courseDescription": "Architecture of data storage and processing systems, including relational databases, cluster computing systems, stream processing and machine learning systems. Topics include database system architecture, storage organization, query optimization, transaction management, fault recovery, and parallel processing, with a focus on the key design ideas shared across many types of data-intensive systems. Prerequisites: 145, 161.", "courseAttributes": "Terms: Spr | Units: 3 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Principles of Data-Intensive Systems", "courseNumber": "CS 245:", "courseDescription": "Architecture of data storage and processing systems, including relational databases, cluster computing systems, stream processing and machine learning systems. Topics include database system architecture, storage organization, query optimization, transaction management, fault recovery, and parallel processing, with a focus on the key design ideas shared across many types of data-intensive systems. Prerequisites: 145, 161.", "courseAttributes": "Terms: Spr | Units: 3 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Principles of Data-Intensive Systems", "courseNumber": "CS 245:", "courseDescription": "Architecture of data storage and processing systems, including relational databases, cluster computing systems, stream processing and machine learning systems. Topics include database system architecture, storage organization, query optimization, transaction management, fault recovery, and parallel processing, with a focus on the key design ideas shared across many types of data-intensive systems. Prerequisites: 145, 161.", "courseAttributes": "Terms: Spr | Units: 3 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Principles of Data-Intensive Systems", "courseNumber": "CS 245:", "courseDescription": "Architecture of data storage and processing systems, including relational databases, cluster computing systems, stream processing and machine learning systems. Topics include database system architecture, storage organization, query optimization, transaction management, fault recovery, and parallel processing, with a focus on the key design ideas shared across many types of data-intensive systems. Prerequisites: 145, 161.", "courseAttributes": "Terms: Spr | Units: 3 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Principles of Data-Intensive Systems", "courseNumber": "CS 245:", "courseDescription": "Architecture of data storage and processing systems, including relational databases, cluster computing systems, stream processing and machine learning systems. Topics include database system architecture, storage organization, query optimization, transaction management, fault recovery, and parallel processing, with a focus on the key design ideas shared across many types of data-intensive systems. Prerequisites: 145, 161.", "courseAttributes": "Terms: Spr | Units: 3 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}]}}
{"Jure Leskovec": {"courses": [{"courseTitle": "Directed Study", "courseNumber": "BIOE 391:", "courseDescription": "May be used to prepare for research during a later quarter in 392. Faculty sponsor required. May be repeated for credit.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Directed Study", "courseNumber": "BIOE 391:", "courseDescription": "May be used to prepare for research during a later quarter in 392. Faculty sponsor required. May be repeated for credit.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Directed Study", "courseNumber": "BIOE 391:", "courseDescription": "May be used to prepare for research during a later quarter in 392. Faculty sponsor required. May be repeated for credit.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Directed Study", "courseNumber": "BIOE 391:", "courseDescription": "May be used to prepare for research during a later quarter in 392. Faculty sponsor required. May be repeated for credit.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Directed Study", "courseNumber": "BIOE 391:", "courseDescription": "May be used to prepare for research during a later quarter in 392. Faculty sponsor required. May be repeated for credit.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Directed Study", "courseNumber": "BIOE 391:", "courseDescription": "May be used to prepare for research during a later quarter in 392. Faculty sponsor required. May be repeated for credit.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Directed Study", "courseNumber": "BIOE 391:", "courseDescription": "May be used to prepare for research during a later quarter in 392. Faculty sponsor required. May be repeated for credit.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Directed Study", "courseNumber": "BIOE 391:", "courseDescription": "May be used to prepare for research during a later quarter in 392. Faculty sponsor required. May be repeated for credit.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Directed Study", "courseNumber": "BIOE 391:", "courseDescription": "May be used to prepare for research during a later quarter in 392. Faculty sponsor required. May be repeated for credit.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Directed Study", "courseNumber": "BIOE 391:", "courseDescription": "May be used to prepare for research during a later quarter in 392. Faculty sponsor required. May be repeated for credit.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Directed Study", "courseNumber": "BIOE 391:", "courseDescription": "May be used to prepare for research during a later quarter in 392. Faculty sponsor required. May be repeated for credit.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Directed Study", "courseNumber": "BIOE 391:", "courseDescription": "May be used to prepare for research during a later quarter in 392. Faculty sponsor required. May be repeated for credit.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Directed Study", "courseNumber": "BIOE 391:", "courseDescription": "May be used to prepare for research during a later quarter in 392. Faculty sponsor required. May be repeated for credit.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Directed Study", "courseNumber": "BIOE 391:", "courseDescription": "May be used to prepare for research during a later quarter in 392. Faculty sponsor required. May be repeated for credit.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Directed Study", "courseNumber": "BIOE 391:", "courseDescription": "May be used to prepare for research during a later quarter in 392. Faculty sponsor required. May be repeated for credit.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Directed Study", "courseNumber": "BIOE 391:", "courseDescription": "May be used to prepare for research during a later quarter in 392. Faculty sponsor required. May be repeated for credit.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Directed Study", "courseNumber": "BIOE 391:", "courseDescription": "May be used to prepare for research during a later quarter in 392. Faculty sponsor required. May be repeated for credit.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Directed Study", "courseNumber": "BIOE 391:", "courseDescription": "May be used to prepare for research during a later quarter in 392. Faculty sponsor required. May be repeated for credit.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Directed Study", "courseNumber": "BIOE 391:", "courseDescription": "May be used to prepare for research during a later quarter in 392. Faculty sponsor required. May be repeated for credit.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Directed Study", "courseNumber": "BIOE 391:", "courseDescription": "May be used to prepare for research during a later quarter in 392. Faculty sponsor required. May be repeated for credit.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Directed Study", "courseNumber": "BIOE 391:", "courseDescription": "May be used to prepare for research during a later quarter in 392. Faculty sponsor required. May be repeated for credit.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Directed Study", "courseNumber": "BIOE 391:", "courseDescription": "May be used to prepare for research during a later quarter in 392. Faculty sponsor required. May be repeated for credit.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Directed Study", "courseNumber": "BIOE 391:", "courseDescription": "May be used to prepare for research during a later quarter in 392. Faculty sponsor required. May be repeated for credit.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Directed Study", "courseNumber": "BIOE 391:", "courseDescription": "May be used to prepare for research during a later quarter in 392. Faculty sponsor required. May be repeated for credit.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Directed Study", "courseNumber": "BIOE 391:", "courseDescription": "May be used to prepare for research during a later quarter in 392. Faculty sponsor required. May be repeated for credit.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}]}}
{"Mehran Sahami": {"courses": [{"courseTitle": "Computers, Ethics, and Public Policy (CS 181, ETHICSOC 181X, PHIL 75C, POLISCI 181, PUBLPOL 181)", "courseNumber": "COMM 181:", "courseDescription": "Ethical and social issues related to the development and use of computer technology. Ethical theory, and social, political, and legal considerations. Scenarios in problem areas: privacy, reliability and risks of complex systems, and responsibility of professionals for applications and consequences of their work. Prerequisite: 106A.", "courseAttributes": "Terms: Aut, Win | Units: 4 | UG Reqs: GER:EC-EthicReas, WAY-ER | Grading: Letter or Credit/No Credit", "courseLevel": "Undergraduate"}, {"courseTitle": "Computers, Ethics, and Public Policy (CS 181, ETHICSOC 181X, PHIL 75C, POLISCI 181, PUBLPOL 181)", "courseNumber": "COMM 181:", "courseDescription": "Ethical and social issues related to the development and use of computer technology. Ethical theory, and social, political, and legal considerations. Scenarios in problem areas: privacy, reliability and risks of complex systems, and responsibility of professionals for applications and consequences of their work. Prerequisite: 106A.", "courseAttributes": "Terms: Aut, Win | Units: 4 | UG Reqs: GER:EC-EthicReas, WAY-ER | Grading: Letter or Credit/No Credit", "courseLevel": "Undergraduate"}, {"courseTitle": "Computers, Ethics, and Public Policy (CS 181, ETHICSOC 181X, PHIL 75C, POLISCI 181, PUBLPOL 181)", "courseNumber": "COMM 181:", "courseDescription": "Ethical and social issues related to the development and use of computer technology. Ethical theory, and social, political, and legal considerations. Scenarios in problem areas: privacy, reliability and risks of complex systems, and responsibility of professionals for applications and consequences of their work. Prerequisite: 106A.", "courseAttributes": "Terms: Aut, Win | Units: 4 | UG Reqs: GER:EC-EthicReas, WAY-ER | Grading: Letter or Credit/No Credit", "courseLevel": "Undergraduate"}, {"courseTitle": "Computers, Ethics, and Public Policy (CS 181, ETHICSOC 181X, PHIL 75C, POLISCI 181, PUBLPOL 181)", "courseNumber": "COMM 181:", "courseDescription": "Ethical and social issues related to the development and use of computer technology. Ethical theory, and social, political, and legal considerations. Scenarios in problem areas: privacy, reliability and risks of complex systems, and responsibility of professionals for applications and consequences of their work. Prerequisite: 106A.", "courseAttributes": "Terms: Aut, Win | Units: 4 | UG Reqs: GER:EC-EthicReas, WAY-ER | Grading: Letter or Credit/No Credit", "courseLevel": "Undergraduate"}, {"courseTitle": "Computers, Ethics, and Public Policy (CS 181, ETHICSOC 181X, PHIL 75C, POLISCI 181, PUBLPOL 181)", "courseNumber": "COMM 181:", "courseDescription": "Ethical and social issues related to the development and use of computer technology. Ethical theory, and social, political, and legal considerations. Scenarios in problem areas: privacy, reliability and risks of complex systems, and responsibility of professionals for applications and consequences of their work. Prerequisite: 106A.", "courseAttributes": "Terms: Aut, Win | Units: 4 | UG Reqs: GER:EC-EthicReas, WAY-ER | Grading: Letter or Credit/No Credit", "courseLevel": "Undergraduate"}, {"courseTitle": "Computers, Ethics, and Public Policy (CS 181, ETHICSOC 181X, PHIL 75C, POLISCI 181, PUBLPOL 181)", "courseNumber": "COMM 181:", "courseDescription": "Ethical and social issues related to the development and use of computer technology. Ethical theory, and social, political, and legal considerations. Scenarios in problem areas: privacy, reliability and risks of complex systems, and responsibility of professionals for applications and consequences of their work. Prerequisite: 106A.", "courseAttributes": "Terms: Aut, Win | Units: 4 | UG Reqs: GER:EC-EthicReas, WAY-ER | Grading: Letter or Credit/No Credit", "courseLevel": "Undergraduate"}, {"courseTitle": "Computers, Ethics, and Public Policy (CS 181, ETHICSOC 181X, PHIL 75C, POLISCI 181, PUBLPOL 181)", "courseNumber": "COMM 181:", "courseDescription": "Ethical and social issues related to the development and use of computer technology. Ethical theory, and social, political, and legal considerations. Scenarios in problem areas: privacy, reliability and risks of complex systems, and responsibility of professionals for applications and consequences of their work. Prerequisite: 106A.", "courseAttributes": "Terms: Aut, Win | Units: 4 | UG Reqs: GER:EC-EthicReas, WAY-ER | Grading: Letter or Credit/No Credit", "courseLevel": "Undergraduate"}, {"courseTitle": "Computers, Ethics, and Public Policy (CS 181, ETHICSOC 181X, PHIL 75C, POLISCI 181, PUBLPOL 181)", "courseNumber": "COMM 181:", "courseDescription": "Ethical and social issues related to the development and use of computer technology. Ethical theory, and social, political, and legal considerations. Scenarios in problem areas: privacy, reliability and risks of complex systems, and responsibility of professionals for applications and consequences of their work. Prerequisite: 106A.", "courseAttributes": "Terms: Aut, Win | Units: 4 | UG Reqs: GER:EC-EthicReas, WAY-ER | Grading: Letter or Credit/No Credit", "courseLevel": "Undergraduate"}, {"courseTitle": "Computers, Ethics, and Public Policy (CS 181, ETHICSOC 181X, PHIL 75C, POLISCI 181, PUBLPOL 181)", "courseNumber": "COMM 181:", "courseDescription": "Ethical and social issues related to the development and use of computer technology. Ethical theory, and social, political, and legal considerations. Scenarios in problem areas: privacy, reliability and risks of complex systems, and responsibility of professionals for applications and consequences of their work. Prerequisite: 106A.", "courseAttributes": "Terms: Aut, Win | Units: 4 | UG Reqs: GER:EC-EthicReas, WAY-ER | Grading: Letter or Credit/No Credit", "courseLevel": "Undergraduate"}, {"courseTitle": "Computers, Ethics, and Public Policy (CS 181, ETHICSOC 181X, PHIL 75C, POLISCI 181, PUBLPOL 181)", "courseNumber": "COMM 181:", "courseDescription": "Ethical and social issues related to the development and use of computer technology. Ethical theory, and social, political, and legal considerations. Scenarios in problem areas: privacy, reliability and risks of complex systems, and responsibility of professionals for applications and consequences of their work. Prerequisite: 106A.", "courseAttributes": "Terms: Aut, Win | Units: 4 | UG Reqs: GER:EC-EthicReas, WAY-ER | Grading: Letter or Credit/No Credit", "courseLevel": "Undergraduate"}, {"courseTitle": "Computers, Ethics, and Public Policy (CS 181, ETHICSOC 181X, PHIL 75C, POLISCI 181, PUBLPOL 181)", "courseNumber": "COMM 181:", "courseDescription": "Ethical and social issues related to the development and use of computer technology. Ethical theory, and social, political, and legal considerations. Scenarios in problem areas: privacy, reliability and risks of complex systems, and responsibility of professionals for applications and consequences of their work. Prerequisite: 106A.", "courseAttributes": "Terms: Aut, Win | Units: 4 | UG Reqs: GER:EC-EthicReas, WAY-ER | Grading: Letter or Credit/No Credit", "courseLevel": "Undergraduate"}, {"courseTitle": "Computers, Ethics, and Public Policy (CS 181, ETHICSOC 181X, PHIL 75C, POLISCI 181, PUBLPOL 181)", "courseNumber": "COMM 181:", "courseDescription": "Ethical and social issues related to the development and use of computer technology. Ethical theory, and social, political, and legal considerations. Scenarios in problem areas: privacy, reliability and risks of complex systems, and responsibility of professionals for applications and consequences of their work. Prerequisite: 106A.", "courseAttributes": "Terms: Aut, Win | Units: 4 | UG Reqs: GER:EC-EthicReas, WAY-ER | Grading: Letter or Credit/No Credit", "courseLevel": "Undergraduate"}, {"courseTitle": "Computers, Ethics, and Public Policy (CS 181, ETHICSOC 181X, PHIL 75C, POLISCI 181, PUBLPOL 181)", "courseNumber": "COMM 181:", "courseDescription": "Ethical and social issues related to the development and use of computer technology. Ethical theory, and social, political, and legal considerations. Scenarios in problem areas: privacy, reliability and risks of complex systems, and responsibility of professionals for applications and consequences of their work. Prerequisite: 106A.", "courseAttributes": "Terms: Aut, Win | Units: 4 | UG Reqs: GER:EC-EthicReas, WAY-ER | Grading: Letter or Credit/No Credit", "courseLevel": "Undergraduate"}, {"courseTitle": "Computers, Ethics, and Public Policy (CS 181, ETHICSOC 181X, PHIL 75C, POLISCI 181, PUBLPOL 181)", "courseNumber": "COMM 181:", "courseDescription": "Ethical and social issues related to the development and use of computer technology. Ethical theory, and social, political, and legal considerations. Scenarios in problem areas: privacy, reliability and risks of complex systems, and responsibility of professionals for applications and consequences of their work. Prerequisite: 106A.", "courseAttributes": "Terms: Aut, Win | Units: 4 | UG Reqs: GER:EC-EthicReas, WAY-ER | Grading: Letter or Credit/No Credit", "courseLevel": "Undergraduate"}, {"courseTitle": "Computers, Ethics, and Public Policy (CS 181, ETHICSOC 181X, PHIL 75C, POLISCI 181, PUBLPOL 181)", "courseNumber": "COMM 181:", "courseDescription": "Ethical and social issues related to the development and use of computer technology. Ethical theory, and social, political, and legal considerations. Scenarios in problem areas: privacy, reliability and risks of complex systems, and responsibility of professionals for applications and consequences of their work. Prerequisite: 106A.", "courseAttributes": "Terms: Aut, Win | Units: 4 | UG Reqs: GER:EC-EthicReas, WAY-ER | Grading: Letter or Credit/No Credit", "courseLevel": "Undergraduate"}, {"courseTitle": "Computers, Ethics, and Public Policy (CS 181, ETHICSOC 181X, PHIL 75C, POLISCI 181, PUBLPOL 181)", "courseNumber": "COMM 181:", "courseDescription": "Ethical and social issues related to the development and use of computer technology. Ethical theory, and social, political, and legal considerations. Scenarios in problem areas: privacy, reliability and risks of complex systems, and responsibility of professionals for applications and consequences of their work. Prerequisite: 106A.", "courseAttributes": "Terms: Aut, Win | Units: 4 | UG Reqs: GER:EC-EthicReas, WAY-ER | Grading: Letter or Credit/No Credit", "courseLevel": "Undergraduate"}, {"courseTitle": "Computers, Ethics, and Public Policy (CS 181, ETHICSOC 181X, PHIL 75C, POLISCI 181, PUBLPOL 181)", "courseNumber": "COMM 181:", "courseDescription": "Ethical and social issues related to the development and use of computer technology. Ethical theory, and social, political, and legal considerations. Scenarios in problem areas: privacy, reliability and risks of complex systems, and responsibility of professionals for applications and consequences of their work. Prerequisite: 106A.", "courseAttributes": "Terms: Aut, Win | Units: 4 | UG Reqs: GER:EC-EthicReas, WAY-ER | Grading: Letter or Credit/No Credit", "courseLevel": "Undergraduate"}, {"courseTitle": "Computers, Ethics, and Public Policy (CS 181, ETHICSOC 181X, PHIL 75C, POLISCI 181, PUBLPOL 181)", "courseNumber": "COMM 181:", "courseDescription": "Ethical and social issues related to the development and use of computer technology. Ethical theory, and social, political, and legal considerations. Scenarios in problem areas: privacy, reliability and risks of complex systems, and responsibility of professionals for applications and consequences of their work. Prerequisite: 106A.", "courseAttributes": "Terms: Aut, Win | Units: 4 | UG Reqs: GER:EC-EthicReas, WAY-ER | Grading: Letter or Credit/No Credit", "courseLevel": "Undergraduate"}, {"courseTitle": "Computers, Ethics, and Public Policy (CS 181, ETHICSOC 181X, PHIL 75C, POLISCI 181, PUBLPOL 181)", "courseNumber": "COMM 181:", "courseDescription": "Ethical and social issues related to the development and use of computer technology. Ethical theory, and social, political, and legal considerations. Scenarios in problem areas: privacy, reliability and risks of complex systems, and responsibility of professionals for applications and consequences of their work. Prerequisite: 106A.", "courseAttributes": "Terms: Aut, Win | Units: 4 | UG Reqs: GER:EC-EthicReas, WAY-ER | Grading: Letter or Credit/No Credit", "courseLevel": "Undergraduate"}]}}
{"Michael S. Bernstein": {"courses": [{"courseTitle": "Individual Work", "courseNumber": "AMSTUD 195:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-5 | Repeatable for credit | Grading: Letter or Credit/No Credit", "courseLevel": "Undergraduate"}, {"courseTitle": "Individual Work", "courseNumber": "AMSTUD 195:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-5 | Repeatable for credit | Grading: Letter or Credit/No Credit", "courseLevel": "Undergraduate"}, {"courseTitle": "Individual Work", "courseNumber": "AMSTUD 195:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-5 | Repeatable for credit | Grading: Letter or Credit/No Credit", "courseLevel": "Undergraduate"}, {"courseTitle": "Individual Work", "courseNumber": "AMSTUD 195:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-5 | Repeatable for credit | Grading: Letter or Credit/No Credit", "courseLevel": "Undergraduate"}, {"courseTitle": "Individual Work", "courseNumber": "AMSTUD 195:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-5 | Repeatable for credit | Grading: Letter or Credit/No Credit", "courseLevel": "Undergraduate"}, {"courseTitle": "Individual Work", "courseNumber": "AMSTUD 195:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-5 | Repeatable for credit | Grading: Letter or Credit/No Credit", "courseLevel": "Undergraduate"}, {"courseTitle": "Individual Work", "courseNumber": "AMSTUD 195:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-5 | Repeatable for credit | Grading: Letter or Credit/No Credit", "courseLevel": "Undergraduate"}, {"courseTitle": "Individual Work", "courseNumber": "AMSTUD 195:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-5 | Repeatable for credit | Grading: Letter or Credit/No Credit", "courseLevel": "Undergraduate"}, {"courseTitle": "Individual Work", "courseNumber": "AMSTUD 195:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-5 | Repeatable for credit | Grading: Letter or Credit/No Credit", "courseLevel": "Undergraduate"}, {"courseTitle": "Individual Work", "courseNumber": "AMSTUD 195:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-5 | Repeatable for credit | Grading: Letter or Credit/No Credit", "courseLevel": "Undergraduate"}, {"courseTitle": "Individual Work", "courseNumber": "AMSTUD 195:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-5 | Repeatable for credit | Grading: Letter or Credit/No Credit", "courseLevel": "Undergraduate"}]}}
{"Kunle Olukotun": {"courses": [{"courseTitle": "Curricular Practical Training", "courseNumber": "CS 390A:", "courseDescription": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1 | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Curricular Practical Training", "courseNumber": "CS 390A:", "courseDescription": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1 | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Curricular Practical Training", "courseNumber": "CS 390A:", "courseDescription": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1 | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Curricular Practical Training", "courseNumber": "CS 390A:", "courseDescription": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1 | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Curricular Practical Training", "courseNumber": "CS 390A:", "courseDescription": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1 | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Curricular Practical Training", "courseNumber": "CS 390A:", "courseDescription": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1 | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Curricular Practical Training", "courseNumber": "CS 390A:", "courseDescription": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1 | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Curricular Practical Training", "courseNumber": "CS 390A:", "courseDescription": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1 | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Curricular Practical Training", "courseNumber": "CS 390A:", "courseDescription": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1 | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Curricular Practical Training", "courseNumber": "CS 390A:", "courseDescription": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1 | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Curricular Practical Training", "courseNumber": "CS 390A:", "courseDescription": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1 | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Curricular Practical Training", "courseNumber": "CS 390A:", "courseDescription": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1 | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Curricular Practical Training", "courseNumber": "CS 390A:", "courseDescription": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1 | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Curricular Practical Training", "courseNumber": "CS 390A:", "courseDescription": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1 | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Curricular Practical Training", "courseNumber": "CS 390A:", "courseDescription": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1 | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Curricular Practical Training", "courseNumber": "CS 390A:", "courseDescription": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1 | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Curricular Practical Training", "courseNumber": "CS 390A:", "courseDescription": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1 | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Curricular Practical Training", "courseNumber": "CS 390A:", "courseDescription": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1 | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Curricular Practical Training", "courseNumber": "CS 390A:", "courseDescription": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1 | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Curricular Practical Training", "courseNumber": "CS 390A:", "courseDescription": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1 | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Curricular Practical Training", "courseNumber": "CS 390A:", "courseDescription": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1 | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Curricular Practical Training", "courseNumber": "CS 390A:", "courseDescription": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1 | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Curricular Practical Training", "courseNumber": "CS 390A:", "courseDescription": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1 | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}]}}
{"Leonidas J. Guibas": {"courses": [{"courseTitle": "Biomedical Informatics Teaching Methods", "courseNumber": "BIOMEDIN 290:", "courseDescription": "Hands-on training in biomedical informatics pedagogy. Practical experience in pedagogical approaches, variously including didactic, inquiry, project, team, case, field, and/or problem-based approaches. Students create course content, including lectures, exercises, and assessments, and evaluate learning activities and outcomes. Prerequisite: instructor consent.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Medical Option (Med-Ltr-CR/NC)", "courseLevel": "Graduate"}, {"courseTitle": "Biomedical Informatics Teaching Methods", "courseNumber": "BIOMEDIN 290:", "courseDescription": "Hands-on training in biomedical informatics pedagogy. Practical experience in pedagogical approaches, variously including didactic, inquiry, project, team, case, field, and/or problem-based approaches. Students create course content, including lectures, exercises, and assessments, and evaluate learning activities and outcomes. Prerequisite: instructor consent.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Medical Option (Med-Ltr-CR/NC)", "courseLevel": "Graduate"}, {"courseTitle": "Biomedical Informatics Teaching Methods", "courseNumber": "BIOMEDIN 290:", "courseDescription": "Hands-on training in biomedical informatics pedagogy. Practical experience in pedagogical approaches, variously including didactic, inquiry, project, team, case, field, and/or problem-based approaches. Students create course content, including lectures, exercises, and assessments, and evaluate learning activities and outcomes. Prerequisite: instructor consent.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Medical Option (Med-Ltr-CR/NC)", "courseLevel": "Graduate"}, {"courseTitle": "Biomedical Informatics Teaching Methods", "courseNumber": "BIOMEDIN 290:", "courseDescription": "Hands-on training in biomedical informatics pedagogy. Practical experience in pedagogical approaches, variously including didactic, inquiry, project, team, case, field, and/or problem-based approaches. Students create course content, including lectures, exercises, and assessments, and evaluate learning activities and outcomes. Prerequisite: instructor consent.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Medical Option (Med-Ltr-CR/NC)", "courseLevel": "Graduate"}, {"courseTitle": "Biomedical Informatics Teaching Methods", "courseNumber": "BIOMEDIN 290:", "courseDescription": "Hands-on training in biomedical informatics pedagogy. Practical experience in pedagogical approaches, variously including didactic, inquiry, project, team, case, field, and/or problem-based approaches. Students create course content, including lectures, exercises, and assessments, and evaluate learning activities and outcomes. Prerequisite: instructor consent.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Medical Option (Med-Ltr-CR/NC)", "courseLevel": "Graduate"}, {"courseTitle": "Biomedical Informatics Teaching Methods", "courseNumber": "BIOMEDIN 290:", "courseDescription": "Hands-on training in biomedical informatics pedagogy. Practical experience in pedagogical approaches, variously including didactic, inquiry, project, team, case, field, and/or problem-based approaches. Students create course content, including lectures, exercises, and assessments, and evaluate learning activities and outcomes. Prerequisite: instructor consent.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Medical Option (Med-Ltr-CR/NC)", "courseLevel": "Graduate"}, {"courseTitle": "Biomedical Informatics Teaching Methods", "courseNumber": "BIOMEDIN 290:", "courseDescription": "Hands-on training in biomedical informatics pedagogy. Practical experience in pedagogical approaches, variously including didactic, inquiry, project, team, case, field, and/or problem-based approaches. Students create course content, including lectures, exercises, and assessments, and evaluate learning activities and outcomes. Prerequisite: instructor consent.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Medical Option (Med-Ltr-CR/NC)", "courseLevel": "Graduate"}, {"courseTitle": "Biomedical Informatics Teaching Methods", "courseNumber": "BIOMEDIN 290:", "courseDescription": "Hands-on training in biomedical informatics pedagogy. Practical experience in pedagogical approaches, variously including didactic, inquiry, project, team, case, field, and/or problem-based approaches. Students create course content, including lectures, exercises, and assessments, and evaluate learning activities and outcomes. Prerequisite: instructor consent.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Medical Option (Med-Ltr-CR/NC)", "courseLevel": "Graduate"}, {"courseTitle": "Biomedical Informatics Teaching Methods", "courseNumber": "BIOMEDIN 290:", "courseDescription": "Hands-on training in biomedical informatics pedagogy. Practical experience in pedagogical approaches, variously including didactic, inquiry, project, team, case, field, and/or problem-based approaches. Students create course content, including lectures, exercises, and assessments, and evaluate learning activities and outcomes. Prerequisite: instructor consent.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Medical Option (Med-Ltr-CR/NC)", "courseLevel": "Graduate"}, {"courseTitle": "Biomedical Informatics Teaching Methods", "courseNumber": "BIOMEDIN 290:", "courseDescription": "Hands-on training in biomedical informatics pedagogy. Practical experience in pedagogical approaches, variously including didactic, inquiry, project, team, case, field, and/or problem-based approaches. Students create course content, including lectures, exercises, and assessments, and evaluate learning activities and outcomes. Prerequisite: instructor consent.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Medical Option (Med-Ltr-CR/NC)", "courseLevel": "Graduate"}, {"courseTitle": "Biomedical Informatics Teaching Methods", "courseNumber": "BIOMEDIN 290:", "courseDescription": "Hands-on training in biomedical informatics pedagogy. Practical experience in pedagogical approaches, variously including didactic, inquiry, project, team, case, field, and/or problem-based approaches. Students create course content, including lectures, exercises, and assessments, and evaluate learning activities and outcomes. Prerequisite: instructor consent.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Medical Option (Med-Ltr-CR/NC)", "courseLevel": "Graduate"}, {"courseTitle": "Biomedical Informatics Teaching Methods", "courseNumber": "BIOMEDIN 290:", "courseDescription": "Hands-on training in biomedical informatics pedagogy. Practical experience in pedagogical approaches, variously including didactic, inquiry, project, team, case, field, and/or problem-based approaches. Students create course content, including lectures, exercises, and assessments, and evaluate learning activities and outcomes. Prerequisite: instructor consent.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Medical Option (Med-Ltr-CR/NC)", "courseLevel": "Graduate"}, {"courseTitle": "Biomedical Informatics Teaching Methods", "courseNumber": "BIOMEDIN 290:", "courseDescription": "Hands-on training in biomedical informatics pedagogy. Practical experience in pedagogical approaches, variously including didactic, inquiry, project, team, case, field, and/or problem-based approaches. Students create course content, including lectures, exercises, and assessments, and evaluate learning activities and outcomes. Prerequisite: instructor consent.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Medical Option (Med-Ltr-CR/NC)", "courseLevel": "Graduate"}, {"courseTitle": "Biomedical Informatics Teaching Methods", "courseNumber": "BIOMEDIN 290:", "courseDescription": "Hands-on training in biomedical informatics pedagogy. Practical experience in pedagogical approaches, variously including didactic, inquiry, project, team, case, field, and/or problem-based approaches. Students create course content, including lectures, exercises, and assessments, and evaluate learning activities and outcomes. Prerequisite: instructor consent.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Medical Option (Med-Ltr-CR/NC)", "courseLevel": "Graduate"}, {"courseTitle": "Biomedical Informatics Teaching Methods", "courseNumber": "BIOMEDIN 290:", "courseDescription": "Hands-on training in biomedical informatics pedagogy. Practical experience in pedagogical approaches, variously including didactic, inquiry, project, team, case, field, and/or problem-based approaches. Students create course content, including lectures, exercises, and assessments, and evaluate learning activities and outcomes. Prerequisite: instructor consent.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Medical Option (Med-Ltr-CR/NC)", "courseLevel": "Graduate"}, {"courseTitle": "Biomedical Informatics Teaching Methods", "courseNumber": "BIOMEDIN 290:", "courseDescription": "Hands-on training in biomedical informatics pedagogy. Practical experience in pedagogical approaches, variously including didactic, inquiry, project, team, case, field, and/or problem-based approaches. Students create course content, including lectures, exercises, and assessments, and evaluate learning activities and outcomes. Prerequisite: instructor consent.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Medical Option (Med-Ltr-CR/NC)", "courseLevel": "Graduate"}, {"courseTitle": "Biomedical Informatics Teaching Methods", "courseNumber": "BIOMEDIN 290:", "courseDescription": "Hands-on training in biomedical informatics pedagogy. Practical experience in pedagogical approaches, variously including didactic, inquiry, project, team, case, field, and/or problem-based approaches. Students create course content, including lectures, exercises, and assessments, and evaluate learning activities and outcomes. Prerequisite: instructor consent.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Medical Option (Med-Ltr-CR/NC)", "courseLevel": "Graduate"}, {"courseTitle": "Biomedical Informatics Teaching Methods", "courseNumber": "BIOMEDIN 290:", "courseDescription": "Hands-on training in biomedical informatics pedagogy. Practical experience in pedagogical approaches, variously including didactic, inquiry, project, team, case, field, and/or problem-based approaches. Students create course content, including lectures, exercises, and assessments, and evaluate learning activities and outcomes. Prerequisite: instructor consent.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Medical Option (Med-Ltr-CR/NC)", "courseLevel": "Graduate"}, {"courseTitle": "Biomedical Informatics Teaching Methods", "courseNumber": "BIOMEDIN 290:", "courseDescription": "Hands-on training in biomedical informatics pedagogy. Practical experience in pedagogical approaches, variously including didactic, inquiry, project, team, case, field, and/or problem-based approaches. Students create course content, including lectures, exercises, and assessments, and evaluate learning activities and outcomes. Prerequisite: instructor consent.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Medical Option (Med-Ltr-CR/NC)", "courseLevel": "Graduate"}, {"courseTitle": "Biomedical Informatics Teaching Methods", "courseNumber": "BIOMEDIN 290:", "courseDescription": "Hands-on training in biomedical informatics pedagogy. Practical experience in pedagogical approaches, variously including didactic, inquiry, project, team, case, field, and/or problem-based approaches. Students create course content, including lectures, exercises, and assessments, and evaluate learning activities and outcomes. Prerequisite: instructor consent.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Medical Option (Med-Ltr-CR/NC)", "courseLevel": "Graduate"}, {"courseTitle": "Biomedical Informatics Teaching Methods", "courseNumber": "BIOMEDIN 290:", "courseDescription": "Hands-on training in biomedical informatics pedagogy. Practical experience in pedagogical approaches, variously including didactic, inquiry, project, team, case, field, and/or problem-based approaches. Students create course content, including lectures, exercises, and assessments, and evaluate learning activities and outcomes. Prerequisite: instructor consent.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Medical Option (Med-Ltr-CR/NC)", "courseLevel": "Graduate"}, {"courseTitle": "Biomedical Informatics Teaching Methods", "courseNumber": "BIOMEDIN 290:", "courseDescription": "Hands-on training in biomedical informatics pedagogy. Practical experience in pedagogical approaches, variously including didactic, inquiry, project, team, case, field, and/or problem-based approaches. Students create course content, including lectures, exercises, and assessments, and evaluate learning activities and outcomes. Prerequisite: instructor consent.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Medical Option (Med-Ltr-CR/NC)", "courseLevel": "Graduate"}, {"courseTitle": "Biomedical Informatics Teaching Methods", "courseNumber": "BIOMEDIN 290:", "courseDescription": "Hands-on training in biomedical informatics pedagogy. Practical experience in pedagogical approaches, variously including didactic, inquiry, project, team, case, field, and/or problem-based approaches. Students create course content, including lectures, exercises, and assessments, and evaluate learning activities and outcomes. Prerequisite: instructor consent.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Medical Option (Med-Ltr-CR/NC)", "courseLevel": "Graduate"}]}}
{"Monica S. Lam": {"courses": [{"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)", "courseLevel": "Undergraduate"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)", "courseLevel": "Undergraduate"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)", "courseLevel": "Undergraduate"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)", "courseLevel": "Undergraduate"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)", "courseLevel": "Undergraduate"}]}}
{"John C. Mitchell": {"courses": [{"courseTitle": "Teaching in Cancer Biology", "courseNumber": "CBIO 260:", "courseDescription": "Practical experience in teaching by serving as a teaching assistant in a cancer biology course. Unit values are allotted  individually to reflect the level of teaching responsibility assigned to the student.", "courseAttributes": "Terms: Aut, Win, Spr | Units: 1-10 | Repeatable for credit | Grading: Medical Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Teaching in Cancer Biology", "courseNumber": "CBIO 260:", "courseDescription": "Practical experience in teaching by serving as a teaching assistant in a cancer biology course. Unit values are allotted  individually to reflect the level of teaching responsibility assigned to the student.", "courseAttributes": "Terms: Aut, Win, Spr | Units: 1-10 | Repeatable for credit | Grading: Medical Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Teaching in Cancer Biology", "courseNumber": "CBIO 260:", "courseDescription": "Practical experience in teaching by serving as a teaching assistant in a cancer biology course. Unit values are allotted  individually to reflect the level of teaching responsibility assigned to the student.", "courseAttributes": "Terms: Aut, Win, Spr | Units: 1-10 | Repeatable for credit | Grading: Medical Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Teaching in Cancer Biology", "courseNumber": "CBIO 260:", "courseDescription": "Practical experience in teaching by serving as a teaching assistant in a cancer biology course. Unit values are allotted  individually to reflect the level of teaching responsibility assigned to the student.", "courseAttributes": "Terms: Aut, Win, Spr | Units: 1-10 | Repeatable for credit | Grading: Medical Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Teaching in Cancer Biology", "courseNumber": "CBIO 260:", "courseDescription": "Practical experience in teaching by serving as a teaching assistant in a cancer biology course. Unit values are allotted  individually to reflect the level of teaching responsibility assigned to the student.", "courseAttributes": "Terms: Aut, Win, Spr | Units: 1-10 | Repeatable for credit | Grading: Medical Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Teaching in Cancer Biology", "courseNumber": "CBIO 260:", "courseDescription": "Practical experience in teaching by serving as a teaching assistant in a cancer biology course. Unit values are allotted  individually to reflect the level of teaching responsibility assigned to the student.", "courseAttributes": "Terms: Aut, Win, Spr | Units: 1-10 | Repeatable for credit | Grading: Medical Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Teaching in Cancer Biology", "courseNumber": "CBIO 260:", "courseDescription": "Practical experience in teaching by serving as a teaching assistant in a cancer biology course. Unit values are allotted  individually to reflect the level of teaching responsibility assigned to the student.", "courseAttributes": "Terms: Aut, Win, Spr | Units: 1-10 | Repeatable for credit | Grading: Medical Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Teaching in Cancer Biology", "courseNumber": "CBIO 260:", "courseDescription": "Practical experience in teaching by serving as a teaching assistant in a cancer biology course. Unit values are allotted  individually to reflect the level of teaching responsibility assigned to the student.", "courseAttributes": "Terms: Aut, Win, Spr | Units: 1-10 | Repeatable for credit | Grading: Medical Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Teaching in Cancer Biology", "courseNumber": "CBIO 260:", "courseDescription": "Practical experience in teaching by serving as a teaching assistant in a cancer biology course. Unit values are allotted  individually to reflect the level of teaching responsibility assigned to the student.", "courseAttributes": "Terms: Aut, Win, Spr | Units: 1-10 | Repeatable for credit | Grading: Medical Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Teaching in Cancer Biology", "courseNumber": "CBIO 260:", "courseDescription": "Practical experience in teaching by serving as a teaching assistant in a cancer biology course. Unit values are allotted  individually to reflect the level of teaching responsibility assigned to the student.", "courseAttributes": "Terms: Aut, Win, Spr | Units: 1-10 | Repeatable for credit | Grading: Medical Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Teaching in Cancer Biology", "courseNumber": "CBIO 260:", "courseDescription": "Practical experience in teaching by serving as a teaching assistant in a cancer biology course. Unit values are allotted  individually to reflect the level of teaching responsibility assigned to the student.", "courseAttributes": "Terms: Aut, Win, Spr | Units: 1-10 | Repeatable for credit | Grading: Medical Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Teaching in Cancer Biology", "courseNumber": "CBIO 260:", "courseDescription": "Practical experience in teaching by serving as a teaching assistant in a cancer biology course. Unit values are allotted  individually to reflect the level of teaching responsibility assigned to the student.", "courseAttributes": "Terms: Aut, Win, Spr | Units: 1-10 | Repeatable for credit | Grading: Medical Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Teaching in Cancer Biology", "courseNumber": "CBIO 260:", "courseDescription": "Practical experience in teaching by serving as a teaching assistant in a cancer biology course. Unit values are allotted  individually to reflect the level of teaching responsibility assigned to the student.", "courseAttributes": "Terms: Aut, Win, Spr | Units: 1-10 | Repeatable for credit | Grading: Medical Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Teaching in Cancer Biology", "courseNumber": "CBIO 260:", "courseDescription": "Practical experience in teaching by serving as a teaching assistant in a cancer biology course. Unit values are allotted  individually to reflect the level of teaching responsibility assigned to the student.", "courseAttributes": "Terms: Aut, Win, Spr | Units: 1-10 | Repeatable for credit | Grading: Medical Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Teaching in Cancer Biology", "courseNumber": "CBIO 260:", "courseDescription": "Practical experience in teaching by serving as a teaching assistant in a cancer biology course. Unit values are allotted  individually to reflect the level of teaching responsibility assigned to the student.", "courseAttributes": "Terms: Aut, Win, Spr | Units: 1-10 | Repeatable for credit | Grading: Medical Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Teaching in Cancer Biology", "courseNumber": "CBIO 260:", "courseDescription": "Practical experience in teaching by serving as a teaching assistant in a cancer biology course. Unit values are allotted  individually to reflect the level of teaching responsibility assigned to the student.", "courseAttributes": "Terms: Aut, Win, Spr | Units: 1-10 | Repeatable for credit | Grading: Medical Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Teaching in Cancer Biology", "courseNumber": "CBIO 260:", "courseDescription": "Practical experience in teaching by serving as a teaching assistant in a cancer biology course. Unit values are allotted  individually to reflect the level of teaching responsibility assigned to the student.", "courseAttributes": "Terms: Aut, Win, Spr | Units: 1-10 | Repeatable for credit | Grading: Medical Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Teaching in Cancer Biology", "courseNumber": "CBIO 260:", "courseDescription": "Practical experience in teaching by serving as a teaching assistant in a cancer biology course. Unit values are allotted  individually to reflect the level of teaching responsibility assigned to the student.", "courseAttributes": "Terms: Aut, Win, Spr | Units: 1-10 | Repeatable for credit | Grading: Medical Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Teaching in Cancer Biology", "courseNumber": "CBIO 260:", "courseDescription": "Practical experience in teaching by serving as a teaching assistant in a cancer biology course. Unit values are allotted  individually to reflect the level of teaching responsibility assigned to the student.", "courseAttributes": "Terms: Aut, Win, Spr | Units: 1-10 | Repeatable for credit | Grading: Medical Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Teaching in Cancer Biology", "courseNumber": "CBIO 260:", "courseDescription": "Practical experience in teaching by serving as a teaching assistant in a cancer biology course. Unit values are allotted  individually to reflect the level of teaching responsibility assigned to the student.", "courseAttributes": "Terms: Aut, Win, Spr | Units: 1-10 | Repeatable for credit | Grading: Medical Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Teaching in Cancer Biology", "courseNumber": "CBIO 260:", "courseDescription": "Practical experience in teaching by serving as a teaching assistant in a cancer biology course. Unit values are allotted  individually to reflect the level of teaching responsibility assigned to the student.", "courseAttributes": "Terms: Aut, Win, Spr | Units: 1-10 | Repeatable for credit | Grading: Medical Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Teaching in Cancer Biology", "courseNumber": "CBIO 260:", "courseDescription": "Practical experience in teaching by serving as a teaching assistant in a cancer biology course. Unit values are allotted  individually to reflect the level of teaching responsibility assigned to the student.", "courseAttributes": "Terms: Aut, Win, Spr | Units: 1-10 | Repeatable for credit | Grading: Medical Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Teaching in Cancer Biology", "courseNumber": "CBIO 260:", "courseDescription": "Practical experience in teaching by serving as a teaching assistant in a cancer biology course. Unit values are allotted  individually to reflect the level of teaching responsibility assigned to the student.", "courseAttributes": "Terms: Aut, Win, Spr | Units: 1-10 | Repeatable for credit | Grading: Medical Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Teaching in Cancer Biology", "courseNumber": "CBIO 260:", "courseDescription": "Practical experience in teaching by serving as a teaching assistant in a cancer biology course. Unit values are allotted  individually to reflect the level of teaching responsibility assigned to the student.", "courseAttributes": "Terms: Aut, Win, Spr | Units: 1-10 | Repeatable for credit | Grading: Medical Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Teaching in Cancer Biology", "courseNumber": "CBIO 260:", "courseDescription": "Practical experience in teaching by serving as a teaching assistant in a cancer biology course. Unit values are allotted  individually to reflect the level of teaching responsibility assigned to the student.", "courseAttributes": "Terms: Aut, Win, Spr | Units: 1-10 | Repeatable for credit | Grading: Medical Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Teaching in Cancer Biology", "courseNumber": "CBIO 260:", "courseDescription": "Practical experience in teaching by serving as a teaching assistant in a cancer biology course. Unit values are allotted  individually to reflect the level of teaching responsibility assigned to the student.", "courseAttributes": "Terms: Aut, Win, Spr | Units: 1-10 | Repeatable for credit | Grading: Medical Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Teaching in Cancer Biology", "courseNumber": "CBIO 260:", "courseDescription": "Practical experience in teaching by serving as a teaching assistant in a cancer biology course. Unit values are allotted  individually to reflect the level of teaching responsibility assigned to the student.", "courseAttributes": "Terms: Aut, Win, Spr | Units: 1-10 | Repeatable for credit | Grading: Medical Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Teaching in Cancer Biology", "courseNumber": "CBIO 260:", "courseDescription": "Practical experience in teaching by serving as a teaching assistant in a cancer biology course. Unit values are allotted  individually to reflect the level of teaching responsibility assigned to the student.", "courseAttributes": "Terms: Aut, Win, Spr | Units: 1-10 | Repeatable for credit | Grading: Medical Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Teaching in Cancer Biology", "courseNumber": "CBIO 260:", "courseDescription": "Practical experience in teaching by serving as a teaching assistant in a cancer biology course. Unit values are allotted  individually to reflect the level of teaching responsibility assigned to the student.", "courseAttributes": "Terms: Aut, Win, Spr | Units: 1-10 | Repeatable for credit | Grading: Medical Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Teaching in Cancer Biology", "courseNumber": "CBIO 260:", "courseDescription": "Practical experience in teaching by serving as a teaching assistant in a cancer biology course. Unit values are allotted  individually to reflect the level of teaching responsibility assigned to the student.", "courseAttributes": "Terms: Aut, Win, Spr | Units: 1-10 | Repeatable for credit | Grading: Medical Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Teaching in Cancer Biology", "courseNumber": "CBIO 260:", "courseDescription": "Practical experience in teaching by serving as a teaching assistant in a cancer biology course. Unit values are allotted  individually to reflect the level of teaching responsibility assigned to the student.", "courseAttributes": "Terms: Aut, Win, Spr | Units: 1-10 | Repeatable for credit | Grading: Medical Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Teaching in Cancer Biology", "courseNumber": "CBIO 260:", "courseDescription": "Practical experience in teaching by serving as a teaching assistant in a cancer biology course. Unit values are allotted  individually to reflect the level of teaching responsibility assigned to the student.", "courseAttributes": "Terms: Aut, Win, Spr | Units: 1-10 | Repeatable for credit | Grading: Medical Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Teaching in Cancer Biology", "courseNumber": "CBIO 260:", "courseDescription": "Practical experience in teaching by serving as a teaching assistant in a cancer biology course. Unit values are allotted  individually to reflect the level of teaching responsibility assigned to the student.", "courseAttributes": "Terms: Aut, Win, Spr | Units: 1-10 | Repeatable for credit | Grading: Medical Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Teaching in Cancer Biology", "courseNumber": "CBIO 260:", "courseDescription": "Practical experience in teaching by serving as a teaching assistant in a cancer biology course. Unit values are allotted  individually to reflect the level of teaching responsibility assigned to the student.", "courseAttributes": "Terms: Aut, Win, Spr | Units: 1-10 | Repeatable for credit | Grading: Medical Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Teaching in Cancer Biology", "courseNumber": "CBIO 260:", "courseDescription": "Practical experience in teaching by serving as a teaching assistant in a cancer biology course. Unit values are allotted  individually to reflect the level of teaching responsibility assigned to the student.", "courseAttributes": "Terms: Aut, Win, Spr | Units: 1-10 | Repeatable for credit | Grading: Medical Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Teaching in Cancer Biology", "courseNumber": "CBIO 260:", "courseDescription": "Practical experience in teaching by serving as a teaching assistant in a cancer biology course. Unit values are allotted  individually to reflect the level of teaching responsibility assigned to the student.", "courseAttributes": "Terms: Aut, Win, Spr | Units: 1-10 | Repeatable for credit | Grading: Medical Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Teaching in Cancer Biology", "courseNumber": "CBIO 260:", "courseDescription": "Practical experience in teaching by serving as a teaching assistant in a cancer biology course. Unit values are allotted  individually to reflect the level of teaching responsibility assigned to the student.", "courseAttributes": "Terms: Aut, Win, Spr | Units: 1-10 | Repeatable for credit | Grading: Medical Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Teaching in Cancer Biology", "courseNumber": "CBIO 260:", "courseDescription": "Practical experience in teaching by serving as a teaching assistant in a cancer biology course. Unit values are allotted  individually to reflect the level of teaching responsibility assigned to the student.", "courseAttributes": "Terms: Aut, Win, Spr | Units: 1-10 | Repeatable for credit | Grading: Medical Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Teaching in Cancer Biology", "courseNumber": "CBIO 260:", "courseDescription": "Practical experience in teaching by serving as a teaching assistant in a cancer biology course. Unit values are allotted  individually to reflect the level of teaching responsibility assigned to the student.", "courseAttributes": "Terms: Aut, Win, Spr | Units: 1-10 | Repeatable for credit | Grading: Medical Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Teaching in Cancer Biology", "courseNumber": "CBIO 260:", "courseDescription": "Practical experience in teaching by serving as a teaching assistant in a cancer biology course. Unit values are allotted  individually to reflect the level of teaching responsibility assigned to the student.", "courseAttributes": "Terms: Aut, Win, Spr | Units: 1-10 | Repeatable for credit | Grading: Medical Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Teaching in Cancer Biology", "courseNumber": "CBIO 260:", "courseDescription": "Practical experience in teaching by serving as a teaching assistant in a cancer biology course. Unit values are allotted  individually to reflect the level of teaching responsibility assigned to the student.", "courseAttributes": "Terms: Aut, Win, Spr | Units: 1-10 | Repeatable for credit | Grading: Medical Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Teaching in Cancer Biology", "courseNumber": "CBIO 260:", "courseDescription": "Practical experience in teaching by serving as a teaching assistant in a cancer biology course. Unit values are allotted  individually to reflect the level of teaching responsibility assigned to the student.", "courseAttributes": "Terms: Aut, Win, Spr | Units: 1-10 | Repeatable for credit | Grading: Medical Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Teaching in Cancer Biology", "courseNumber": "CBIO 260:", "courseDescription": "Practical experience in teaching by serving as a teaching assistant in a cancer biology course. Unit values are allotted  individually to reflect the level of teaching responsibility assigned to the student.", "courseAttributes": "Terms: Aut, Win, Spr | Units: 1-10 | Repeatable for credit | Grading: Medical Satisfactory/No Credit", "courseLevel": "Graduate"}]}}
{"Moses Charikar": {"courses": [{"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)", "courseLevel": "Undergraduate"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)", "courseLevel": "Undergraduate"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)", "courseLevel": "Undergraduate"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)", "courseLevel": "Undergraduate"}]}}
{"Monica S. Lam": {"courses": [{"courseTitle": "Curricular Practical Training", "courseNumber": "CS 390A:", "courseDescription": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1 | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Curricular Practical Training", "courseNumber": "CS 390A:", "courseDescription": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1 | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Curricular Practical Training", "courseNumber": "CS 390A:", "courseDescription": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1 | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Curricular Practical Training", "courseNumber": "CS 390A:", "courseDescription": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1 | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Curricular Practical Training", "courseNumber": "CS 390A:", "courseDescription": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1 | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Curricular Practical Training", "courseNumber": "CS 390A:", "courseDescription": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1 | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Curricular Practical Training", "courseNumber": "CS 390A:", "courseDescription": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1 | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Curricular Practical Training", "courseNumber": "CS 390A:", "courseDescription": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1 | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Curricular Practical Training", "courseNumber": "CS 390A:", "courseDescription": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1 | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Curricular Practical Training", "courseNumber": "CS 390A:", "courseDescription": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1 | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Curricular Practical Training", "courseNumber": "CS 390A:", "courseDescription": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1 | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Curricular Practical Training", "courseNumber": "CS 390A:", "courseDescription": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1 | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Curricular Practical Training", "courseNumber": "CS 390A:", "courseDescription": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1 | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Curricular Practical Training", "courseNumber": "CS 390A:", "courseDescription": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1 | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Curricular Practical Training", "courseNumber": "CS 390A:", "courseDescription": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1 | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Curricular Practical Training", "courseNumber": "CS 390A:", "courseDescription": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1 | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Curricular Practical Training", "courseNumber": "CS 390A:", "courseDescription": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1 | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}]}}
{"Mehran Sahami": {"courses": [{"courseTitle": "Curricular Practical Training", "courseNumber": "CS 390A:", "courseDescription": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1 | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Curricular Practical Training", "courseNumber": "CS 390A:", "courseDescription": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1 | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Curricular Practical Training", "courseNumber": "CS 390A:", "courseDescription": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1 | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Curricular Practical Training", "courseNumber": "CS 390A:", "courseDescription": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1 | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Curricular Practical Training", "courseNumber": "CS 390A:", "courseDescription": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1 | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Curricular Practical Training", "courseNumber": "CS 390A:", "courseDescription": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1 | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Curricular Practical Training", "courseNumber": "CS 390A:", "courseDescription": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1 | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Curricular Practical Training", "courseNumber": "CS 390A:", "courseDescription": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1 | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Curricular Practical Training", "courseNumber": "CS 390A:", "courseDescription": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1 | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Curricular Practical Training", "courseNumber": "CS 390A:", "courseDescription": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1 | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Curricular Practical Training", "courseNumber": "CS 390A:", "courseDescription": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1 | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Curricular Practical Training", "courseNumber": "CS 390A:", "courseDescription": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1 | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Curricular Practical Training", "courseNumber": "CS 390A:", "courseDescription": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1 | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Curricular Practical Training", "courseNumber": "CS 390A:", "courseDescription": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1 | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Curricular Practical Training", "courseNumber": "CS 390A:", "courseDescription": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1 | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Curricular Practical Training", "courseNumber": "CS 390A:", "courseDescription": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1 | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Curricular Practical Training", "courseNumber": "CS 390A:", "courseDescription": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1 | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Curricular Practical Training", "courseNumber": "CS 390A:", "courseDescription": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1 | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Curricular Practical Training", "courseNumber": "CS 390A:", "courseDescription": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1 | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}]}}
{"Michael S. Bernstein": {"courses": [{"courseTitle": "Curricular Practical Training", "courseNumber": "CS 390A:", "courseDescription": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1 | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Curricular Practical Training", "courseNumber": "CS 390A:", "courseDescription": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1 | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Curricular Practical Training", "courseNumber": "CS 390A:", "courseDescription": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1 | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Curricular Practical Training", "courseNumber": "CS 390A:", "courseDescription": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1 | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Curricular Practical Training", "courseNumber": "CS 390A:", "courseDescription": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1 | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Curricular Practical Training", "courseNumber": "CS 390A:", "courseDescription": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1 | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Curricular Practical Training", "courseNumber": "CS 390A:", "courseDescription": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1 | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Curricular Practical Training", "courseNumber": "CS 390A:", "courseDescription": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1 | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Curricular Practical Training", "courseNumber": "CS 390A:", "courseDescription": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1 | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Curricular Practical Training", "courseNumber": "CS 390A:", "courseDescription": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1 | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Curricular Practical Training", "courseNumber": "CS 390A:", "courseDescription": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1 | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Curricular Practical Training", "courseNumber": "CS 390A:", "courseDescription": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1 | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Curricular Practical Training", "courseNumber": "CS 390A:", "courseDescription": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1 | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Curricular Practical Training", "courseNumber": "CS 390A:", "courseDescription": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1 | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Curricular Practical Training", "courseNumber": "CS 390A:", "courseDescription": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1 | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Curricular Practical Training", "courseNumber": "CS 390A:", "courseDescription": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1 | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Curricular Practical Training", "courseNumber": "CS 390A:", "courseDescription": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1 | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Curricular Practical Training", "courseNumber": "CS 390A:", "courseDescription": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1 | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Curricular Practical Training", "courseNumber": "CS 390A:", "courseDescription": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1 | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Curricular Practical Training", "courseNumber": "CS 390A:", "courseDescription": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1 | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}]}}
{"Noah D. Goodman": {"courses": [{"courseTitle": "Evolution", "courseNumber": "BIO 85:", "courseDescription": "Principles of evolution. Adaptation and natural selection. Darwin and the history of evolutionary thought. Population genetics, including genetic variation and mutation, and effects of migration, drift, linkage, and recombination. Evolutionary phenomena: developmental evolution, life history evolution, molecular evolution, sexual selection, social evolution, and speciation. Pattern and process in biological diversity. Case studies, including human evolution. Prerequisites: None. NOTE: Section enrollments will be handled on Canvas. Students will receive a message on how to sign up.", "courseAttributes": "Terms: Win | Units: 4 | Grading: Letter or Credit/No Credit", "courseLevel": "Undergraduate"}, {"courseTitle": "Evolution", "courseNumber": "BIO 85:", "courseDescription": "Principles of evolution. Adaptation and natural selection. Darwin and the history of evolutionary thought. Population genetics, including genetic variation and mutation, and effects of migration, drift, linkage, and recombination. Evolutionary phenomena: developmental evolution, life history evolution, molecular evolution, sexual selection, social evolution, and speciation. Pattern and process in biological diversity. Case studies, including human evolution. Prerequisites: None. NOTE: Section enrollments will be handled on Canvas. Students will receive a message on how to sign up.", "courseAttributes": "Terms: Win | Units: 4 | Grading: Letter or Credit/No Credit", "courseLevel": "Undergraduate"}, {"courseTitle": "Evolution", "courseNumber": "BIO 85:", "courseDescription": "Principles of evolution. Adaptation and natural selection. Darwin and the history of evolutionary thought. Population genetics, including genetic variation and mutation, and effects of migration, drift, linkage, and recombination. Evolutionary phenomena: developmental evolution, life history evolution, molecular evolution, sexual selection, social evolution, and speciation. Pattern and process in biological diversity. Case studies, including human evolution. Prerequisites: None. NOTE: Section enrollments will be handled on Canvas. Students will receive a message on how to sign up.", "courseAttributes": "Terms: Win | Units: 4 | Grading: Letter or Credit/No Credit", "courseLevel": "Undergraduate"}, {"courseTitle": "Evolution", "courseNumber": "BIO 85:", "courseDescription": "Principles of evolution. Adaptation and natural selection. Darwin and the history of evolutionary thought. Population genetics, including genetic variation and mutation, and effects of migration, drift, linkage, and recombination. Evolutionary phenomena: developmental evolution, life history evolution, molecular evolution, sexual selection, social evolution, and speciation. Pattern and process in biological diversity. Case studies, including human evolution. Prerequisites: None. NOTE: Section enrollments will be handled on Canvas. Students will receive a message on how to sign up.", "courseAttributes": "Terms: Win | Units: 4 | Grading: Letter or Credit/No Credit", "courseLevel": "Undergraduate"}, {"courseTitle": "Evolution", "courseNumber": "BIO 85:", "courseDescription": "Principles of evolution. Adaptation and natural selection. Darwin and the history of evolutionary thought. Population genetics, including genetic variation and mutation, and effects of migration, drift, linkage, and recombination. Evolutionary phenomena: developmental evolution, life history evolution, molecular evolution, sexual selection, social evolution, and speciation. Pattern and process in biological diversity. Case studies, including human evolution. Prerequisites: None. NOTE: Section enrollments will be handled on Canvas. Students will receive a message on how to sign up.", "courseAttributes": "Terms: Win | Units: 4 | Grading: Letter or Credit/No Credit", "courseLevel": "Undergraduate"}, {"courseTitle": "Evolution", "courseNumber": "BIO 85:", "courseDescription": "Principles of evolution. Adaptation and natural selection. Darwin and the history of evolutionary thought. Population genetics, including genetic variation and mutation, and effects of migration, drift, linkage, and recombination. Evolutionary phenomena: developmental evolution, life history evolution, molecular evolution, sexual selection, social evolution, and speciation. Pattern and process in biological diversity. Case studies, including human evolution. Prerequisites: None. NOTE: Section enrollments will be handled on Canvas. Students will receive a message on how to sign up.", "courseAttributes": "Terms: Win | Units: 4 | Grading: Letter or Credit/No Credit", "courseLevel": "Undergraduate"}]}}
{"Moses Charikar": {"courses": [{"courseTitle": "Artificial Intelligence: Principles and Techniques", "courseNumber": "CS 221:", "courseDescription": "Artificial intelligence (AI) has had a huge impact in many areas, including medical diagnosis, speech recognition, robotics, web search, advertising, and scheduling.  This course focuses on the foundational concepts that drive these applications.  In short, AI is the mathematics of making good decisions given incomplete information (hence the need for probability) and limited computation (hence the need for algorithms).  Specific topics include search, constraint satisfaction, game playing, Markov decision processes, graphical models, machine learning, and logic. Prerequisites: CS 103 or CS 103B/X, CS 106B or CS 106X, CS 107, and CS 109 (algorithms, probability, and programming experience).", "courseAttributes": "Terms: Aut, Spr, Sum | Units: 3-4 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Artificial Intelligence: Principles and Techniques", "courseNumber": "CS 221:", "courseDescription": "Artificial intelligence (AI) has had a huge impact in many areas, including medical diagnosis, speech recognition, robotics, web search, advertising, and scheduling.  This course focuses on the foundational concepts that drive these applications.  In short, AI is the mathematics of making good decisions given incomplete information (hence the need for probability) and limited computation (hence the need for algorithms).  Specific topics include search, constraint satisfaction, game playing, Markov decision processes, graphical models, machine learning, and logic. Prerequisites: CS 103 or CS 103B/X, CS 106B or CS 106X, CS 107, and CS 109 (algorithms, probability, and programming experience).", "courseAttributes": "Terms: Aut, Spr, Sum | Units: 3-4 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Artificial Intelligence: Principles and Techniques", "courseNumber": "CS 221:", "courseDescription": "Artificial intelligence (AI) has had a huge impact in many areas, including medical diagnosis, speech recognition, robotics, web search, advertising, and scheduling.  This course focuses on the foundational concepts that drive these applications.  In short, AI is the mathematics of making good decisions given incomplete information (hence the need for probability) and limited computation (hence the need for algorithms).  Specific topics include search, constraint satisfaction, game playing, Markov decision processes, graphical models, machine learning, and logic. Prerequisites: CS 103 or CS 103B/X, CS 106B or CS 106X, CS 107, and CS 109 (algorithms, probability, and programming experience).", "courseAttributes": "Terms: Aut, Spr, Sum | Units: 3-4 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Artificial Intelligence: Principles and Techniques", "courseNumber": "CS 221:", "courseDescription": "Artificial intelligence (AI) has had a huge impact in many areas, including medical diagnosis, speech recognition, robotics, web search, advertising, and scheduling.  This course focuses on the foundational concepts that drive these applications.  In short, AI is the mathematics of making good decisions given incomplete information (hence the need for probability) and limited computation (hence the need for algorithms).  Specific topics include search, constraint satisfaction, game playing, Markov decision processes, graphical models, machine learning, and logic. Prerequisites: CS 103 or CS 103B/X, CS 106B or CS 106X, CS 107, and CS 109 (algorithms, probability, and programming experience).", "courseAttributes": "Terms: Aut, Spr, Sum | Units: 3-4 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Artificial Intelligence: Principles and Techniques", "courseNumber": "CS 221:", "courseDescription": "Artificial intelligence (AI) has had a huge impact in many areas, including medical diagnosis, speech recognition, robotics, web search, advertising, and scheduling.  This course focuses on the foundational concepts that drive these applications.  In short, AI is the mathematics of making good decisions given incomplete information (hence the need for probability) and limited computation (hence the need for algorithms).  Specific topics include search, constraint satisfaction, game playing, Markov decision processes, graphical models, machine learning, and logic. Prerequisites: CS 103 or CS 103B/X, CS 106B or CS 106X, CS 107, and CS 109 (algorithms, probability, and programming experience).", "courseAttributes": "Terms: Aut, Spr, Sum | Units: 3-4 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Artificial Intelligence: Principles and Techniques", "courseNumber": "CS 221:", "courseDescription": "Artificial intelligence (AI) has had a huge impact in many areas, including medical diagnosis, speech recognition, robotics, web search, advertising, and scheduling.  This course focuses on the foundational concepts that drive these applications.  In short, AI is the mathematics of making good decisions given incomplete information (hence the need for probability) and limited computation (hence the need for algorithms).  Specific topics include search, constraint satisfaction, game playing, Markov decision processes, graphical models, machine learning, and logic. Prerequisites: CS 103 or CS 103B/X, CS 106B or CS 106X, CS 107, and CS 109 (algorithms, probability, and programming experience).", "courseAttributes": "Terms: Aut, Spr, Sum | Units: 3-4 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Artificial Intelligence: Principles and Techniques", "courseNumber": "CS 221:", "courseDescription": "Artificial intelligence (AI) has had a huge impact in many areas, including medical diagnosis, speech recognition, robotics, web search, advertising, and scheduling.  This course focuses on the foundational concepts that drive these applications.  In short, AI is the mathematics of making good decisions given incomplete information (hence the need for probability) and limited computation (hence the need for algorithms).  Specific topics include search, constraint satisfaction, game playing, Markov decision processes, graphical models, machine learning, and logic. Prerequisites: CS 103 or CS 103B/X, CS 106B or CS 106X, CS 107, and CS 109 (algorithms, probability, and programming experience).", "courseAttributes": "Terms: Aut, Spr, Sum | Units: 3-4 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Artificial Intelligence: Principles and Techniques", "courseNumber": "CS 221:", "courseDescription": "Artificial intelligence (AI) has had a huge impact in many areas, including medical diagnosis, speech recognition, robotics, web search, advertising, and scheduling.  This course focuses on the foundational concepts that drive these applications.  In short, AI is the mathematics of making good decisions given incomplete information (hence the need for probability) and limited computation (hence the need for algorithms).  Specific topics include search, constraint satisfaction, game playing, Markov decision processes, graphical models, machine learning, and logic. Prerequisites: CS 103 or CS 103B/X, CS 106B or CS 106X, CS 107, and CS 109 (algorithms, probability, and programming experience).", "courseAttributes": "Terms: Aut, Spr, Sum | Units: 3-4 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Artificial Intelligence: Principles and Techniques", "courseNumber": "CS 221:", "courseDescription": "Artificial intelligence (AI) has had a huge impact in many areas, including medical diagnosis, speech recognition, robotics, web search, advertising, and scheduling.  This course focuses on the foundational concepts that drive these applications.  In short, AI is the mathematics of making good decisions given incomplete information (hence the need for probability) and limited computation (hence the need for algorithms).  Specific topics include search, constraint satisfaction, game playing, Markov decision processes, graphical models, machine learning, and logic. Prerequisites: CS 103 or CS 103B/X, CS 106B or CS 106X, CS 107, and CS 109 (algorithms, probability, and programming experience).", "courseAttributes": "Terms: Aut, Spr, Sum | Units: 3-4 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Artificial Intelligence: Principles and Techniques", "courseNumber": "CS 221:", "courseDescription": "Artificial intelligence (AI) has had a huge impact in many areas, including medical diagnosis, speech recognition, robotics, web search, advertising, and scheduling.  This course focuses on the foundational concepts that drive these applications.  In short, AI is the mathematics of making good decisions given incomplete information (hence the need for probability) and limited computation (hence the need for algorithms).  Specific topics include search, constraint satisfaction, game playing, Markov decision processes, graphical models, machine learning, and logic. Prerequisites: CS 103 or CS 103B/X, CS 106B or CS 106X, CS 107, and CS 109 (algorithms, probability, and programming experience).", "courseAttributes": "Terms: Aut, Spr, Sum | Units: 3-4 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Artificial Intelligence: Principles and Techniques", "courseNumber": "CS 221:", "courseDescription": "Artificial intelligence (AI) has had a huge impact in many areas, including medical diagnosis, speech recognition, robotics, web search, advertising, and scheduling.  This course focuses on the foundational concepts that drive these applications.  In short, AI is the mathematics of making good decisions given incomplete information (hence the need for probability) and limited computation (hence the need for algorithms).  Specific topics include search, constraint satisfaction, game playing, Markov decision processes, graphical models, machine learning, and logic. Prerequisites: CS 103 or CS 103B/X, CS 106B or CS 106X, CS 107, and CS 109 (algorithms, probability, and programming experience).", "courseAttributes": "Terms: Aut, Spr, Sum | Units: 3-4 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Artificial Intelligence: Principles and Techniques", "courseNumber": "CS 221:", "courseDescription": "Artificial intelligence (AI) has had a huge impact in many areas, including medical diagnosis, speech recognition, robotics, web search, advertising, and scheduling.  This course focuses on the foundational concepts that drive these applications.  In short, AI is the mathematics of making good decisions given incomplete information (hence the need for probability) and limited computation (hence the need for algorithms).  Specific topics include search, constraint satisfaction, game playing, Markov decision processes, graphical models, machine learning, and logic. Prerequisites: CS 103 or CS 103B/X, CS 106B or CS 106X, CS 107, and CS 109 (algorithms, probability, and programming experience).", "courseAttributes": "Terms: Aut, Spr, Sum | Units: 3-4 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Artificial Intelligence: Principles and Techniques", "courseNumber": "CS 221:", "courseDescription": "Artificial intelligence (AI) has had a huge impact in many areas, including medical diagnosis, speech recognition, robotics, web search, advertising, and scheduling.  This course focuses on the foundational concepts that drive these applications.  In short, AI is the mathematics of making good decisions given incomplete information (hence the need for probability) and limited computation (hence the need for algorithms).  Specific topics include search, constraint satisfaction, game playing, Markov decision processes, graphical models, machine learning, and logic. Prerequisites: CS 103 or CS 103B/X, CS 106B or CS 106X, CS 107, and CS 109 (algorithms, probability, and programming experience).", "courseAttributes": "Terms: Aut, Spr, Sum | Units: 3-4 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Artificial Intelligence: Principles and Techniques", "courseNumber": "CS 221:", "courseDescription": "Artificial intelligence (AI) has had a huge impact in many areas, including medical diagnosis, speech recognition, robotics, web search, advertising, and scheduling.  This course focuses on the foundational concepts that drive these applications.  In short, AI is the mathematics of making good decisions given incomplete information (hence the need for probability) and limited computation (hence the need for algorithms).  Specific topics include search, constraint satisfaction, game playing, Markov decision processes, graphical models, machine learning, and logic. Prerequisites: CS 103 or CS 103B/X, CS 106B or CS 106X, CS 107, and CS 109 (algorithms, probability, and programming experience).", "courseAttributes": "Terms: Aut, Spr, Sum | Units: 3-4 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Artificial Intelligence: Principles and Techniques", "courseNumber": "CS 221:", "courseDescription": "Artificial intelligence (AI) has had a huge impact in many areas, including medical diagnosis, speech recognition, robotics, web search, advertising, and scheduling.  This course focuses on the foundational concepts that drive these applications.  In short, AI is the mathematics of making good decisions given incomplete information (hence the need for probability) and limited computation (hence the need for algorithms).  Specific topics include search, constraint satisfaction, game playing, Markov decision processes, graphical models, machine learning, and logic. Prerequisites: CS 103 or CS 103B/X, CS 106B or CS 106X, CS 107, and CS 109 (algorithms, probability, and programming experience).", "courseAttributes": "Terms: Aut, Spr, Sum | Units: 3-4 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}]}}
{"Omer Reingold": {"courses": [{"courseTitle": "Curricular Practical Training", "courseNumber": "CS 390A:", "courseDescription": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1 | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Curricular Practical Training", "courseNumber": "CS 390A:", "courseDescription": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1 | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Curricular Practical Training", "courseNumber": "CS 390A:", "courseDescription": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1 | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Curricular Practical Training", "courseNumber": "CS 390A:", "courseDescription": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1 | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Curricular Practical Training", "courseNumber": "CS 390A:", "courseDescription": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1 | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Curricular Practical Training", "courseNumber": "CS 390A:", "courseDescription": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1 | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Curricular Practical Training", "courseNumber": "CS 390A:", "courseDescription": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1 | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Curricular Practical Training", "courseNumber": "CS 390A:", "courseDescription": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1 | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}]}}
{"Noah D. Goodman": {"courses": [{"courseTitle": "Curricular Practical Training", "courseNumber": "CS 390A:", "courseDescription": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1 | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Curricular Practical Training", "courseNumber": "CS 390A:", "courseDescription": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1 | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Curricular Practical Training", "courseNumber": "CS 390A:", "courseDescription": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1 | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Curricular Practical Training", "courseNumber": "CS 390A:", "courseDescription": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1 | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Curricular Practical Training", "courseNumber": "CS 390A:", "courseDescription": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1 | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Curricular Practical Training", "courseNumber": "CS 390A:", "courseDescription": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1 | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Curricular Practical Training", "courseNumber": "CS 390A:", "courseDescription": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1 | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Curricular Practical Training", "courseNumber": "CS 390A:", "courseDescription": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1 | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Curricular Practical Training", "courseNumber": "CS 390A:", "courseDescription": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1 | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Curricular Practical Training", "courseNumber": "CS 390A:", "courseDescription": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1 | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Curricular Practical Training", "courseNumber": "CS 390A:", "courseDescription": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1 | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Curricular Practical Training", "courseNumber": "CS 390A:", "courseDescription": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1 | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Curricular Practical Training", "courseNumber": "CS 390A:", "courseDescription": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1 | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Curricular Practical Training", "courseNumber": "CS 390A:", "courseDescription": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1 | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Curricular Practical Training", "courseNumber": "CS 390A:", "courseDescription": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1 | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Curricular Practical Training", "courseNumber": "CS 390A:", "courseDescription": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1 | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Curricular Practical Training", "courseNumber": "CS 390A:", "courseDescription": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1 | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}]}}
{"Omer Reingold": {"courses": [{"courseTitle": "Playback Theater For Research", "courseNumber": "CS 83:", "courseDescription": "Playback combines elements of theater, community work and storytelling. In a playback show, a group of actors and musicians create an improvised performance based on the audience's personal stories. A playback show brings about a powerful listening and sharing experience. During the course, we will tell, listen, play together, and train in playback techniques. We will write diaries to process our experience in the context of education and research.  The course is aimed to strengthen listening abilities, creativity and the collaborative spirit, all integral parts of doing great science. In playback, as in research, we are always moving together, from the known, to the unknown, and back. There is limited enrollment for this class. Application is required.", "courseAttributes": "Terms: Win | Units: 3 | UG Reqs: WAY-CE | Grading: Letter or Credit/No Credit", "courseLevel": "Undergraduate"}, {"courseTitle": "Playback Theater For Research", "courseNumber": "CS 83:", "courseDescription": "Playback combines elements of theater, community work and storytelling. In a playback show, a group of actors and musicians create an improvised performance based on the audience's personal stories. A playback show brings about a powerful listening and sharing experience. During the course, we will tell, listen, play together, and train in playback techniques. We will write diaries to process our experience in the context of education and research.  The course is aimed to strengthen listening abilities, creativity and the collaborative spirit, all integral parts of doing great science. In playback, as in research, we are always moving together, from the known, to the unknown, and back. There is limited enrollment for this class. Application is required.", "courseAttributes": "Terms: Win | Units: 3 | UG Reqs: WAY-CE | Grading: Letter or Credit/No Credit", "courseLevel": "Undergraduate"}, {"courseTitle": "Playback Theater For Research", "courseNumber": "CS 83:", "courseDescription": "Playback combines elements of theater, community work and storytelling. In a playback show, a group of actors and musicians create an improvised performance based on the audience's personal stories. A playback show brings about a powerful listening and sharing experience. During the course, we will tell, listen, play together, and train in playback techniques. We will write diaries to process our experience in the context of education and research.  The course is aimed to strengthen listening abilities, creativity and the collaborative spirit, all integral parts of doing great science. In playback, as in research, we are always moving together, from the known, to the unknown, and back. There is limited enrollment for this class. Application is required.", "courseAttributes": "Terms: Win | Units: 3 | UG Reqs: WAY-CE | Grading: Letter or Credit/No Credit", "courseLevel": "Undergraduate"}, {"courseTitle": "Playback Theater For Research", "courseNumber": "CS 83:", "courseDescription": "Playback combines elements of theater, community work and storytelling. In a playback show, a group of actors and musicians create an improvised performance based on the audience's personal stories. A playback show brings about a powerful listening and sharing experience. During the course, we will tell, listen, play together, and train in playback techniques. We will write diaries to process our experience in the context of education and research.  The course is aimed to strengthen listening abilities, creativity and the collaborative spirit, all integral parts of doing great science. In playback, as in research, we are always moving together, from the known, to the unknown, and back. There is limited enrollment for this class. Application is required.", "courseAttributes": "Terms: Win | Units: 3 | UG Reqs: WAY-CE | Grading: Letter or Credit/No Credit", "courseLevel": "Undergraduate"}, {"courseTitle": "Playback Theater For Research", "courseNumber": "CS 83:", "courseDescription": "Playback combines elements of theater, community work and storytelling. In a playback show, a group of actors and musicians create an improvised performance based on the audience's personal stories. A playback show brings about a powerful listening and sharing experience. During the course, we will tell, listen, play together, and train in playback techniques. We will write diaries to process our experience in the context of education and research.  The course is aimed to strengthen listening abilities, creativity and the collaborative spirit, all integral parts of doing great science. In playback, as in research, we are always moving together, from the known, to the unknown, and back. There is limited enrollment for this class. Application is required.", "courseAttributes": "Terms: Win | Units: 3 | UG Reqs: WAY-CE | Grading: Letter or Credit/No Credit", "courseLevel": "Undergraduate"}, {"courseTitle": "Playback Theater For Research", "courseNumber": "CS 83:", "courseDescription": "Playback combines elements of theater, community work and storytelling. In a playback show, a group of actors and musicians create an improvised performance based on the audience's personal stories. A playback show brings about a powerful listening and sharing experience. During the course, we will tell, listen, play together, and train in playback techniques. We will write diaries to process our experience in the context of education and research.  The course is aimed to strengthen listening abilities, creativity and the collaborative spirit, all integral parts of doing great science. In playback, as in research, we are always moving together, from the known, to the unknown, and back. There is limited enrollment for this class. Application is required.", "courseAttributes": "Terms: Win | Units: 3 | UG Reqs: WAY-CE | Grading: Letter or Credit/No Credit", "courseLevel": "Undergraduate"}]}}
{"Percy Liang": {"courses": [{"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)", "courseLevel": "Undergraduate"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)", "courseLevel": "Undergraduate"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)", "courseLevel": "Undergraduate"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)", "courseLevel": "Undergraduate"}]}}
{"Pat Hanrahan": {"courses": [{"courseTitle": "Computer Systems from the Ground Up", "courseNumber": "CS 107E:", "courseDescription": "Introduction to the fundamental concepts of computer systems through bare metal programming on the Raspberry Pi. Explores how five concepts come together in computer systems: hardware, architecture, assembly code, the C language, and software development tools. Students do all programming with a Raspberry Pi kit and several add-ons (LEDs, buttons). Topics covered include: the C programming language, data representation, machine-level code, computer arithmetic, compilation, memory organization and management, debugging, hardware, and I/O. Prerequisite: 106B or X, and consent of instructor. There is a $75 required course fee.", "courseAttributes": "Terms: Aut, Win | Units: 3-5 | UG Reqs: WAY-FR | Grading: Letter or Credit/No Credit", "courseLevel": "Undergraduate"}, {"courseTitle": "Computer Systems from the Ground Up", "courseNumber": "CS 107E:", "courseDescription": "Introduction to the fundamental concepts of computer systems through bare metal programming on the Raspberry Pi. Explores how five concepts come together in computer systems: hardware, architecture, assembly code, the C language, and software development tools. Students do all programming with a Raspberry Pi kit and several add-ons (LEDs, buttons). Topics covered include: the C programming language, data representation, machine-level code, computer arithmetic, compilation, memory organization and management, debugging, hardware, and I/O. Prerequisite: 106B or X, and consent of instructor. There is a $75 required course fee.", "courseAttributes": "Terms: Aut, Win | Units: 3-5 | UG Reqs: WAY-FR | Grading: Letter or Credit/No Credit", "courseLevel": "Undergraduate"}, {"courseTitle": "Computer Systems from the Ground Up", "courseNumber": "CS 107E:", "courseDescription": "Introduction to the fundamental concepts of computer systems through bare metal programming on the Raspberry Pi. Explores how five concepts come together in computer systems: hardware, architecture, assembly code, the C language, and software development tools. Students do all programming with a Raspberry Pi kit and several add-ons (LEDs, buttons). Topics covered include: the C programming language, data representation, machine-level code, computer arithmetic, compilation, memory organization and management, debugging, hardware, and I/O. Prerequisite: 106B or X, and consent of instructor. There is a $75 required course fee.", "courseAttributes": "Terms: Aut, Win | Units: 3-5 | UG Reqs: WAY-FR | Grading: Letter or Credit/No Credit", "courseLevel": "Undergraduate"}, {"courseTitle": "Computer Systems from the Ground Up", "courseNumber": "CS 107E:", "courseDescription": "Introduction to the fundamental concepts of computer systems through bare metal programming on the Raspberry Pi. Explores how five concepts come together in computer systems: hardware, architecture, assembly code, the C language, and software development tools. Students do all programming with a Raspberry Pi kit and several add-ons (LEDs, buttons). Topics covered include: the C programming language, data representation, machine-level code, computer arithmetic, compilation, memory organization and management, debugging, hardware, and I/O. Prerequisite: 106B or X, and consent of instructor. There is a $75 required course fee.", "courseAttributes": "Terms: Aut, Win | Units: 3-5 | UG Reqs: WAY-FR | Grading: Letter or Credit/No Credit", "courseLevel": "Undergraduate"}, {"courseTitle": "Computer Systems from the Ground Up", "courseNumber": "CS 107E:", "courseDescription": "Introduction to the fundamental concepts of computer systems through bare metal programming on the Raspberry Pi. Explores how five concepts come together in computer systems: hardware, architecture, assembly code, the C language, and software development tools. Students do all programming with a Raspberry Pi kit and several add-ons (LEDs, buttons). Topics covered include: the C programming language, data representation, machine-level code, computer arithmetic, compilation, memory organization and management, debugging, hardware, and I/O. Prerequisite: 106B or X, and consent of instructor. There is a $75 required course fee.", "courseAttributes": "Terms: Aut, Win | Units: 3-5 | UG Reqs: WAY-FR | Grading: Letter or Credit/No Credit", "courseLevel": "Undergraduate"}, {"courseTitle": "Computer Systems from the Ground Up", "courseNumber": "CS 107E:", "courseDescription": "Introduction to the fundamental concepts of computer systems through bare metal programming on the Raspberry Pi. Explores how five concepts come together in computer systems: hardware, architecture, assembly code, the C language, and software development tools. Students do all programming with a Raspberry Pi kit and several add-ons (LEDs, buttons). Topics covered include: the C programming language, data representation, machine-level code, computer arithmetic, compilation, memory organization and management, debugging, hardware, and I/O. Prerequisite: 106B or X, and consent of instructor. There is a $75 required course fee.", "courseAttributes": "Terms: Aut, Win | Units: 3-5 | UG Reqs: WAY-FR | Grading: Letter or Credit/No Credit", "courseLevel": "Undergraduate"}, {"courseTitle": "Computer Systems from the Ground Up", "courseNumber": "CS 107E:", "courseDescription": "Introduction to the fundamental concepts of computer systems through bare metal programming on the Raspberry Pi. Explores how five concepts come together in computer systems: hardware, architecture, assembly code, the C language, and software development tools. Students do all programming with a Raspberry Pi kit and several add-ons (LEDs, buttons). Topics covered include: the C programming language, data representation, machine-level code, computer arithmetic, compilation, memory organization and management, debugging, hardware, and I/O. Prerequisite: 106B or X, and consent of instructor. There is a $75 required course fee.", "courseAttributes": "Terms: Aut, Win | Units: 3-5 | UG Reqs: WAY-FR | Grading: Letter or Credit/No Credit", "courseLevel": "Undergraduate"}, {"courseTitle": "Computer Systems from the Ground Up", "courseNumber": "CS 107E:", "courseDescription": "Introduction to the fundamental concepts of computer systems through bare metal programming on the Raspberry Pi. Explores how five concepts come together in computer systems: hardware, architecture, assembly code, the C language, and software development tools. Students do all programming with a Raspberry Pi kit and several add-ons (LEDs, buttons). Topics covered include: the C programming language, data representation, machine-level code, computer arithmetic, compilation, memory organization and management, debugging, hardware, and I/O. Prerequisite: 106B or X, and consent of instructor. There is a $75 required course fee.", "courseAttributes": "Terms: Aut, Win | Units: 3-5 | UG Reqs: WAY-FR | Grading: Letter or Credit/No Credit", "courseLevel": "Undergraduate"}, {"courseTitle": "Computer Systems from the Ground Up", "courseNumber": "CS 107E:", "courseDescription": "Introduction to the fundamental concepts of computer systems through bare metal programming on the Raspberry Pi. Explores how five concepts come together in computer systems: hardware, architecture, assembly code, the C language, and software development tools. Students do all programming with a Raspberry Pi kit and several add-ons (LEDs, buttons). Topics covered include: the C programming language, data representation, machine-level code, computer arithmetic, compilation, memory organization and management, debugging, hardware, and I/O. Prerequisite: 106B or X, and consent of instructor. There is a $75 required course fee.", "courseAttributes": "Terms: Aut, Win | Units: 3-5 | UG Reqs: WAY-FR | Grading: Letter or Credit/No Credit", "courseLevel": "Undergraduate"}]}}
{"Percy Liang": {"courses": [{"courseTitle": "Artificial Intelligence: Principles and Techniques", "courseNumber": "CS 221:", "courseDescription": "Artificial intelligence (AI) has had a huge impact in many areas, including medical diagnosis, speech recognition, robotics, web search, advertising, and scheduling.  This course focuses on the foundational concepts that drive these applications.  In short, AI is the mathematics of making good decisions given incomplete information (hence the need for probability) and limited computation (hence the need for algorithms).  Specific topics include search, constraint satisfaction, game playing, Markov decision processes, graphical models, machine learning, and logic. Prerequisites: CS 103 or CS 103B/X, CS 106B or CS 106X, CS 107, and CS 109 (algorithms, probability, and programming experience).", "courseAttributes": "Terms: Aut, Spr, Sum | Units: 3-4 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Artificial Intelligence: Principles and Techniques", "courseNumber": "CS 221:", "courseDescription": "Artificial intelligence (AI) has had a huge impact in many areas, including medical diagnosis, speech recognition, robotics, web search, advertising, and scheduling.  This course focuses on the foundational concepts that drive these applications.  In short, AI is the mathematics of making good decisions given incomplete information (hence the need for probability) and limited computation (hence the need for algorithms).  Specific topics include search, constraint satisfaction, game playing, Markov decision processes, graphical models, machine learning, and logic. Prerequisites: CS 103 or CS 103B/X, CS 106B or CS 106X, CS 107, and CS 109 (algorithms, probability, and programming experience).", "courseAttributes": "Terms: Aut, Spr, Sum | Units: 3-4 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Artificial Intelligence: Principles and Techniques", "courseNumber": "CS 221:", "courseDescription": "Artificial intelligence (AI) has had a huge impact in many areas, including medical diagnosis, speech recognition, robotics, web search, advertising, and scheduling.  This course focuses on the foundational concepts that drive these applications.  In short, AI is the mathematics of making good decisions given incomplete information (hence the need for probability) and limited computation (hence the need for algorithms).  Specific topics include search, constraint satisfaction, game playing, Markov decision processes, graphical models, machine learning, and logic. Prerequisites: CS 103 or CS 103B/X, CS 106B or CS 106X, CS 107, and CS 109 (algorithms, probability, and programming experience).", "courseAttributes": "Terms: Aut, Spr, Sum | Units: 3-4 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Artificial Intelligence: Principles and Techniques", "courseNumber": "CS 221:", "courseDescription": "Artificial intelligence (AI) has had a huge impact in many areas, including medical diagnosis, speech recognition, robotics, web search, advertising, and scheduling.  This course focuses on the foundational concepts that drive these applications.  In short, AI is the mathematics of making good decisions given incomplete information (hence the need for probability) and limited computation (hence the need for algorithms).  Specific topics include search, constraint satisfaction, game playing, Markov decision processes, graphical models, machine learning, and logic. Prerequisites: CS 103 or CS 103B/X, CS 106B or CS 106X, CS 107, and CS 109 (algorithms, probability, and programming experience).", "courseAttributes": "Terms: Aut, Spr, Sum | Units: 3-4 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Artificial Intelligence: Principles and Techniques", "courseNumber": "CS 221:", "courseDescription": "Artificial intelligence (AI) has had a huge impact in many areas, including medical diagnosis, speech recognition, robotics, web search, advertising, and scheduling.  This course focuses on the foundational concepts that drive these applications.  In short, AI is the mathematics of making good decisions given incomplete information (hence the need for probability) and limited computation (hence the need for algorithms).  Specific topics include search, constraint satisfaction, game playing, Markov decision processes, graphical models, machine learning, and logic. Prerequisites: CS 103 or CS 103B/X, CS 106B or CS 106X, CS 107, and CS 109 (algorithms, probability, and programming experience).", "courseAttributes": "Terms: Aut, Spr, Sum | Units: 3-4 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Artificial Intelligence: Principles and Techniques", "courseNumber": "CS 221:", "courseDescription": "Artificial intelligence (AI) has had a huge impact in many areas, including medical diagnosis, speech recognition, robotics, web search, advertising, and scheduling.  This course focuses on the foundational concepts that drive these applications.  In short, AI is the mathematics of making good decisions given incomplete information (hence the need for probability) and limited computation (hence the need for algorithms).  Specific topics include search, constraint satisfaction, game playing, Markov decision processes, graphical models, machine learning, and logic. Prerequisites: CS 103 or CS 103B/X, CS 106B or CS 106X, CS 107, and CS 109 (algorithms, probability, and programming experience).", "courseAttributes": "Terms: Aut, Spr, Sum | Units: 3-4 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Artificial Intelligence: Principles and Techniques", "courseNumber": "CS 221:", "courseDescription": "Artificial intelligence (AI) has had a huge impact in many areas, including medical diagnosis, speech recognition, robotics, web search, advertising, and scheduling.  This course focuses on the foundational concepts that drive these applications.  In short, AI is the mathematics of making good decisions given incomplete information (hence the need for probability) and limited computation (hence the need for algorithms).  Specific topics include search, constraint satisfaction, game playing, Markov decision processes, graphical models, machine learning, and logic. Prerequisites: CS 103 or CS 103B/X, CS 106B or CS 106X, CS 107, and CS 109 (algorithms, probability, and programming experience).", "courseAttributes": "Terms: Aut, Spr, Sum | Units: 3-4 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Artificial Intelligence: Principles and Techniques", "courseNumber": "CS 221:", "courseDescription": "Artificial intelligence (AI) has had a huge impact in many areas, including medical diagnosis, speech recognition, robotics, web search, advertising, and scheduling.  This course focuses on the foundational concepts that drive these applications.  In short, AI is the mathematics of making good decisions given incomplete information (hence the need for probability) and limited computation (hence the need for algorithms).  Specific topics include search, constraint satisfaction, game playing, Markov decision processes, graphical models, machine learning, and logic. Prerequisites: CS 103 or CS 103B/X, CS 106B or CS 106X, CS 107, and CS 109 (algorithms, probability, and programming experience).", "courseAttributes": "Terms: Aut, Spr, Sum | Units: 3-4 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Artificial Intelligence: Principles and Techniques", "courseNumber": "CS 221:", "courseDescription": "Artificial intelligence (AI) has had a huge impact in many areas, including medical diagnosis, speech recognition, robotics, web search, advertising, and scheduling.  This course focuses on the foundational concepts that drive these applications.  In short, AI is the mathematics of making good decisions given incomplete information (hence the need for probability) and limited computation (hence the need for algorithms).  Specific topics include search, constraint satisfaction, game playing, Markov decision processes, graphical models, machine learning, and logic. Prerequisites: CS 103 or CS 103B/X, CS 106B or CS 106X, CS 107, and CS 109 (algorithms, probability, and programming experience).", "courseAttributes": "Terms: Aut, Spr, Sum | Units: 3-4 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Artificial Intelligence: Principles and Techniques", "courseNumber": "CS 221:", "courseDescription": "Artificial intelligence (AI) has had a huge impact in many areas, including medical diagnosis, speech recognition, robotics, web search, advertising, and scheduling.  This course focuses on the foundational concepts that drive these applications.  In short, AI is the mathematics of making good decisions given incomplete information (hence the need for probability) and limited computation (hence the need for algorithms).  Specific topics include search, constraint satisfaction, game playing, Markov decision processes, graphical models, machine learning, and logic. Prerequisites: CS 103 or CS 103B/X, CS 106B or CS 106X, CS 107, and CS 109 (algorithms, probability, and programming experience).", "courseAttributes": "Terms: Aut, Spr, Sum | Units: 3-4 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Artificial Intelligence: Principles and Techniques", "courseNumber": "CS 221:", "courseDescription": "Artificial intelligence (AI) has had a huge impact in many areas, including medical diagnosis, speech recognition, robotics, web search, advertising, and scheduling.  This course focuses on the foundational concepts that drive these applications.  In short, AI is the mathematics of making good decisions given incomplete information (hence the need for probability) and limited computation (hence the need for algorithms).  Specific topics include search, constraint satisfaction, game playing, Markov decision processes, graphical models, machine learning, and logic. Prerequisites: CS 103 or CS 103B/X, CS 106B or CS 106X, CS 107, and CS 109 (algorithms, probability, and programming experience).", "courseAttributes": "Terms: Aut, Spr, Sum | Units: 3-4 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Artificial Intelligence: Principles and Techniques", "courseNumber": "CS 221:", "courseDescription": "Artificial intelligence (AI) has had a huge impact in many areas, including medical diagnosis, speech recognition, robotics, web search, advertising, and scheduling.  This course focuses on the foundational concepts that drive these applications.  In short, AI is the mathematics of making good decisions given incomplete information (hence the need for probability) and limited computation (hence the need for algorithms).  Specific topics include search, constraint satisfaction, game playing, Markov decision processes, graphical models, machine learning, and logic. Prerequisites: CS 103 or CS 103B/X, CS 106B or CS 106X, CS 107, and CS 109 (algorithms, probability, and programming experience).", "courseAttributes": "Terms: Aut, Spr, Sum | Units: 3-4 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Artificial Intelligence: Principles and Techniques", "courseNumber": "CS 221:", "courseDescription": "Artificial intelligence (AI) has had a huge impact in many areas, including medical diagnosis, speech recognition, robotics, web search, advertising, and scheduling.  This course focuses on the foundational concepts that drive these applications.  In short, AI is the mathematics of making good decisions given incomplete information (hence the need for probability) and limited computation (hence the need for algorithms).  Specific topics include search, constraint satisfaction, game playing, Markov decision processes, graphical models, machine learning, and logic. Prerequisites: CS 103 or CS 103B/X, CS 106B or CS 106X, CS 107, and CS 109 (algorithms, probability, and programming experience).", "courseAttributes": "Terms: Aut, Spr, Sum | Units: 3-4 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Artificial Intelligence: Principles and Techniques", "courseNumber": "CS 221:", "courseDescription": "Artificial intelligence (AI) has had a huge impact in many areas, including medical diagnosis, speech recognition, robotics, web search, advertising, and scheduling.  This course focuses on the foundational concepts that drive these applications.  In short, AI is the mathematics of making good decisions given incomplete information (hence the need for probability) and limited computation (hence the need for algorithms).  Specific topics include search, constraint satisfaction, game playing, Markov decision processes, graphical models, machine learning, and logic. Prerequisites: CS 103 or CS 103B/X, CS 106B or CS 106X, CS 107, and CS 109 (algorithms, probability, and programming experience).", "courseAttributes": "Terms: Aut, Spr, Sum | Units: 3-4 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Artificial Intelligence: Principles and Techniques", "courseNumber": "CS 221:", "courseDescription": "Artificial intelligence (AI) has had a huge impact in many areas, including medical diagnosis, speech recognition, robotics, web search, advertising, and scheduling.  This course focuses on the foundational concepts that drive these applications.  In short, AI is the mathematics of making good decisions given incomplete information (hence the need for probability) and limited computation (hence the need for algorithms).  Specific topics include search, constraint satisfaction, game playing, Markov decision processes, graphical models, machine learning, and logic. Prerequisites: CS 103 or CS 103B/X, CS 106B or CS 106X, CS 107, and CS 109 (algorithms, probability, and programming experience).", "courseAttributes": "Terms: Aut, Spr, Sum | Units: 3-4 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Artificial Intelligence: Principles and Techniques", "courseNumber": "CS 221:", "courseDescription": "Artificial intelligence (AI) has had a huge impact in many areas, including medical diagnosis, speech recognition, robotics, web search, advertising, and scheduling.  This course focuses on the foundational concepts that drive these applications.  In short, AI is the mathematics of making good decisions given incomplete information (hence the need for probability) and limited computation (hence the need for algorithms).  Specific topics include search, constraint satisfaction, game playing, Markov decision processes, graphical models, machine learning, and logic. Prerequisites: CS 103 or CS 103B/X, CS 106B or CS 106X, CS 107, and CS 109 (algorithms, probability, and programming experience).", "courseAttributes": "Terms: Aut, Spr, Sum | Units: 3-4 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Artificial Intelligence: Principles and Techniques", "courseNumber": "CS 221:", "courseDescription": "Artificial intelligence (AI) has had a huge impact in many areas, including medical diagnosis, speech recognition, robotics, web search, advertising, and scheduling.  This course focuses on the foundational concepts that drive these applications.  In short, AI is the mathematics of making good decisions given incomplete information (hence the need for probability) and limited computation (hence the need for algorithms).  Specific topics include search, constraint satisfaction, game playing, Markov decision processes, graphical models, machine learning, and logic. Prerequisites: CS 103 or CS 103B/X, CS 106B or CS 106X, CS 107, and CS 109 (algorithms, probability, and programming experience).", "courseAttributes": "Terms: Aut, Spr, Sum | Units: 3-4 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Artificial Intelligence: Principles and Techniques", "courseNumber": "CS 221:", "courseDescription": "Artificial intelligence (AI) has had a huge impact in many areas, including medical diagnosis, speech recognition, robotics, web search, advertising, and scheduling.  This course focuses on the foundational concepts that drive these applications.  In short, AI is the mathematics of making good decisions given incomplete information (hence the need for probability) and limited computation (hence the need for algorithms).  Specific topics include search, constraint satisfaction, game playing, Markov decision processes, graphical models, machine learning, and logic. Prerequisites: CS 103 or CS 103B/X, CS 106B or CS 106X, CS 107, and CS 109 (algorithms, probability, and programming experience).", "courseAttributes": "Terms: Aut, Spr, Sum | Units: 3-4 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}]}}
{"Serafim Batzoglou": {"courses": [{"courseTitle": "Bioengineering Problems and Experimental Investigation", "courseNumber": "BIOE 191:", "courseDescription": "Directed study and research for undergraduates on a subject of mutual interest to student and instructor. Prerequisites: consent of instructor and adviser. (Staff)", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-5 | Repeatable for credit | Grading: Letter or Credit/No Credit", "courseLevel": "Undergraduate"}, {"courseTitle": "Bioengineering Problems and Experimental Investigation", "courseNumber": "BIOE 191:", "courseDescription": "Directed study and research for undergraduates on a subject of mutual interest to student and instructor. Prerequisites: consent of instructor and adviser. (Staff)", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-5 | Repeatable for credit | Grading: Letter or Credit/No Credit", "courseLevel": "Undergraduate"}, {"courseTitle": "Bioengineering Problems and Experimental Investigation", "courseNumber": "BIOE 191:", "courseDescription": "Directed study and research for undergraduates on a subject of mutual interest to student and instructor. Prerequisites: consent of instructor and adviser. (Staff)", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-5 | Repeatable for credit | Grading: Letter or Credit/No Credit", "courseLevel": "Undergraduate"}, {"courseTitle": "Bioengineering Problems and Experimental Investigation", "courseNumber": "BIOE 191:", "courseDescription": "Directed study and research for undergraduates on a subject of mutual interest to student and instructor. Prerequisites: consent of instructor and adviser. (Staff)", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-5 | Repeatable for credit | Grading: Letter or Credit/No Credit", "courseLevel": "Undergraduate"}, {"courseTitle": "Bioengineering Problems and Experimental Investigation", "courseNumber": "BIOE 191:", "courseDescription": "Directed study and research for undergraduates on a subject of mutual interest to student and instructor. Prerequisites: consent of instructor and adviser. (Staff)", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-5 | Repeatable for credit | Grading: Letter or Credit/No Credit", "courseLevel": "Undergraduate"}, {"courseTitle": "Bioengineering Problems and Experimental Investigation", "courseNumber": "BIOE 191:", "courseDescription": "Directed study and research for undergraduates on a subject of mutual interest to student and instructor. Prerequisites: consent of instructor and adviser. (Staff)", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-5 | Repeatable for credit | Grading: Letter or Credit/No Credit", "courseLevel": "Undergraduate"}]}}
{"Sachin Katti": {"courses": [{"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)", "courseLevel": "Undergraduate"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)", "courseLevel": "Undergraduate"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)", "courseLevel": "Undergraduate"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)", "courseLevel": "Undergraduate"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)", "courseLevel": "Undergraduate"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)", "courseLevel": "Undergraduate"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)", "courseLevel": "Undergraduate"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)", "courseLevel": "Undergraduate"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)", "courseLevel": "Undergraduate"}]}}
{"Silvio Savarese": {"courses": [{"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)", "courseLevel": "Undergraduate"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)", "courseLevel": "Undergraduate"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)", "courseLevel": "Undergraduate"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)", "courseLevel": "Undergraduate"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)", "courseLevel": "Undergraduate"}]}}
{"Tengyu Ma": {"courses": [{"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)", "courseLevel": "Undergraduate"}]}}
{"William J. Dally": {"courses": []}}
{"William J. Dally": {"courses": []}}
{"Stefano Ermon": {"courses": [{"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)", "courseLevel": "Undergraduate"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)", "courseLevel": "Undergraduate"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)", "courseLevel": "Undergraduate"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)", "courseLevel": "Undergraduate"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)", "courseLevel": "Undergraduate"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)", "courseLevel": "Undergraduate"}]}}
{"Pat Hanrahan": {"courses": [{"courseTitle": "Computer Graphics: Image Synthesis Techniques", "courseNumber": "CS 348B:", "courseDescription": "Intermediate level, emphasizing high-quality image synthesis algorithms and systems issues in rendering. Topics include: Reyes and advanced rasterization, including motion blur and depth of field; ray tracing and physically based rendering; Monte Carlo algorithms for rendering, including direct illumination and global illumination; path tracing and photon mapping; surface reflection and light source models; volume rendering and subsurface scattering; SIMD and multi-core parallelism for rendering. Written assignments and programming projects. Prerequisite: 248 or equivalent. Recommended: Fourier analysis or digital signal processing.", "courseAttributes": "Terms: Spr | Units: 3-4 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Computer Graphics: Image Synthesis Techniques", "courseNumber": "CS 348B:", "courseDescription": "Intermediate level, emphasizing high-quality image synthesis algorithms and systems issues in rendering. Topics include: Reyes and advanced rasterization, including motion blur and depth of field; ray tracing and physically based rendering; Monte Carlo algorithms for rendering, including direct illumination and global illumination; path tracing and photon mapping; surface reflection and light source models; volume rendering and subsurface scattering; SIMD and multi-core parallelism for rendering. Written assignments and programming projects. Prerequisite: 248 or equivalent. Recommended: Fourier analysis or digital signal processing.", "courseAttributes": "Terms: Spr | Units: 3-4 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Computer Graphics: Image Synthesis Techniques", "courseNumber": "CS 348B:", "courseDescription": "Intermediate level, emphasizing high-quality image synthesis algorithms and systems issues in rendering. Topics include: Reyes and advanced rasterization, including motion blur and depth of field; ray tracing and physically based rendering; Monte Carlo algorithms for rendering, including direct illumination and global illumination; path tracing and photon mapping; surface reflection and light source models; volume rendering and subsurface scattering; SIMD and multi-core parallelism for rendering. Written assignments and programming projects. Prerequisite: 248 or equivalent. Recommended: Fourier analysis or digital signal processing.", "courseAttributes": "Terms: Spr | Units: 3-4 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Computer Graphics: Image Synthesis Techniques", "courseNumber": "CS 348B:", "courseDescription": "Intermediate level, emphasizing high-quality image synthesis algorithms and systems issues in rendering. Topics include: Reyes and advanced rasterization, including motion blur and depth of field; ray tracing and physically based rendering; Monte Carlo algorithms for rendering, including direct illumination and global illumination; path tracing and photon mapping; surface reflection and light source models; volume rendering and subsurface scattering; SIMD and multi-core parallelism for rendering. Written assignments and programming projects. Prerequisite: 248 or equivalent. Recommended: Fourier analysis or digital signal processing.", "courseAttributes": "Terms: Spr | Units: 3-4 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Computer Graphics: Image Synthesis Techniques", "courseNumber": "CS 348B:", "courseDescription": "Intermediate level, emphasizing high-quality image synthesis algorithms and systems issues in rendering. Topics include: Reyes and advanced rasterization, including motion blur and depth of field; ray tracing and physically based rendering; Monte Carlo algorithms for rendering, including direct illumination and global illumination; path tracing and photon mapping; surface reflection and light source models; volume rendering and subsurface scattering; SIMD and multi-core parallelism for rendering. Written assignments and programming projects. Prerequisite: 248 or equivalent. Recommended: Fourier analysis or digital signal processing.", "courseAttributes": "Terms: Spr | Units: 3-4 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Computer Graphics: Image Synthesis Techniques", "courseNumber": "CS 348B:", "courseDescription": "Intermediate level, emphasizing high-quality image synthesis algorithms and systems issues in rendering. Topics include: Reyes and advanced rasterization, including motion blur and depth of field; ray tracing and physically based rendering; Monte Carlo algorithms for rendering, including direct illumination and global illumination; path tracing and photon mapping; surface reflection and light source models; volume rendering and subsurface scattering; SIMD and multi-core parallelism for rendering. Written assignments and programming projects. Prerequisite: 248 or equivalent. Recommended: Fourier analysis or digital signal processing.", "courseAttributes": "Terms: Spr | Units: 3-4 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Computer Graphics: Image Synthesis Techniques", "courseNumber": "CS 348B:", "courseDescription": "Intermediate level, emphasizing high-quality image synthesis algorithms and systems issues in rendering. Topics include: Reyes and advanced rasterization, including motion blur and depth of field; ray tracing and physically based rendering; Monte Carlo algorithms for rendering, including direct illumination and global illumination; path tracing and photon mapping; surface reflection and light source models; volume rendering and subsurface scattering; SIMD and multi-core parallelism for rendering. Written assignments and programming projects. Prerequisite: 248 or equivalent. Recommended: Fourier analysis or digital signal processing.", "courseAttributes": "Terms: Spr | Units: 3-4 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Computer Graphics: Image Synthesis Techniques", "courseNumber": "CS 348B:", "courseDescription": "Intermediate level, emphasizing high-quality image synthesis algorithms and systems issues in rendering. Topics include: Reyes and advanced rasterization, including motion blur and depth of field; ray tracing and physically based rendering; Monte Carlo algorithms for rendering, including direct illumination and global illumination; path tracing and photon mapping; surface reflection and light source models; volume rendering and subsurface scattering; SIMD and multi-core parallelism for rendering. Written assignments and programming projects. Prerequisite: 248 or equivalent. Recommended: Fourier analysis or digital signal processing.", "courseAttributes": "Terms: Spr | Units: 3-4 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Computer Graphics: Image Synthesis Techniques", "courseNumber": "CS 348B:", "courseDescription": "Intermediate level, emphasizing high-quality image synthesis algorithms and systems issues in rendering. Topics include: Reyes and advanced rasterization, including motion blur and depth of field; ray tracing and physically based rendering; Monte Carlo algorithms for rendering, including direct illumination and global illumination; path tracing and photon mapping; surface reflection and light source models; volume rendering and subsurface scattering; SIMD and multi-core parallelism for rendering. Written assignments and programming projects. Prerequisite: 248 or equivalent. Recommended: Fourier analysis or digital signal processing.", "courseAttributes": "Terms: Spr | Units: 3-4 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Computer Graphics: Image Synthesis Techniques", "courseNumber": "CS 348B:", "courseDescription": "Intermediate level, emphasizing high-quality image synthesis algorithms and systems issues in rendering. Topics include: Reyes and advanced rasterization, including motion blur and depth of field; ray tracing and physically based rendering; Monte Carlo algorithms for rendering, including direct illumination and global illumination; path tracing and photon mapping; surface reflection and light source models; volume rendering and subsurface scattering; SIMD and multi-core parallelism for rendering. Written assignments and programming projects. Prerequisite: 248 or equivalent. Recommended: Fourier analysis or digital signal processing.", "courseAttributes": "Terms: Spr | Units: 3-4 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Computer Graphics: Image Synthesis Techniques", "courseNumber": "CS 348B:", "courseDescription": "Intermediate level, emphasizing high-quality image synthesis algorithms and systems issues in rendering. Topics include: Reyes and advanced rasterization, including motion blur and depth of field; ray tracing and physically based rendering; Monte Carlo algorithms for rendering, including direct illumination and global illumination; path tracing and photon mapping; surface reflection and light source models; volume rendering and subsurface scattering; SIMD and multi-core parallelism for rendering. Written assignments and programming projects. Prerequisite: 248 or equivalent. Recommended: Fourier analysis or digital signal processing.", "courseAttributes": "Terms: Spr | Units: 3-4 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Computer Graphics: Image Synthesis Techniques", "courseNumber": "CS 348B:", "courseDescription": "Intermediate level, emphasizing high-quality image synthesis algorithms and systems issues in rendering. Topics include: Reyes and advanced rasterization, including motion blur and depth of field; ray tracing and physically based rendering; Monte Carlo algorithms for rendering, including direct illumination and global illumination; path tracing and photon mapping; surface reflection and light source models; volume rendering and subsurface scattering; SIMD and multi-core parallelism for rendering. Written assignments and programming projects. Prerequisite: 248 or equivalent. Recommended: Fourier analysis or digital signal processing.", "courseAttributes": "Terms: Spr | Units: 3-4 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Computer Graphics: Image Synthesis Techniques", "courseNumber": "CS 348B:", "courseDescription": "Intermediate level, emphasizing high-quality image synthesis algorithms and systems issues in rendering. Topics include: Reyes and advanced rasterization, including motion blur and depth of field; ray tracing and physically based rendering; Monte Carlo algorithms for rendering, including direct illumination and global illumination; path tracing and photon mapping; surface reflection and light source models; volume rendering and subsurface scattering; SIMD and multi-core parallelism for rendering. Written assignments and programming projects. Prerequisite: 248 or equivalent. Recommended: Fourier analysis or digital signal processing.", "courseAttributes": "Terms: Spr | Units: 3-4 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Computer Graphics: Image Synthesis Techniques", "courseNumber": "CS 348B:", "courseDescription": "Intermediate level, emphasizing high-quality image synthesis algorithms and systems issues in rendering. Topics include: Reyes and advanced rasterization, including motion blur and depth of field; ray tracing and physically based rendering; Monte Carlo algorithms for rendering, including direct illumination and global illumination; path tracing and photon mapping; surface reflection and light source models; volume rendering and subsurface scattering; SIMD and multi-core parallelism for rendering. Written assignments and programming projects. Prerequisite: 248 or equivalent. Recommended: Fourier analysis or digital signal processing.", "courseAttributes": "Terms: Spr | Units: 3-4 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Computer Graphics: Image Synthesis Techniques", "courseNumber": "CS 348B:", "courseDescription": "Intermediate level, emphasizing high-quality image synthesis algorithms and systems issues in rendering. Topics include: Reyes and advanced rasterization, including motion blur and depth of field; ray tracing and physically based rendering; Monte Carlo algorithms for rendering, including direct illumination and global illumination; path tracing and photon mapping; surface reflection and light source models; volume rendering and subsurface scattering; SIMD and multi-core parallelism for rendering. Written assignments and programming projects. Prerequisite: 248 or equivalent. Recommended: Fourier analysis or digital signal processing.", "courseAttributes": "Terms: Spr | Units: 3-4 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Computer Graphics: Image Synthesis Techniques", "courseNumber": "CS 348B:", "courseDescription": "Intermediate level, emphasizing high-quality image synthesis algorithms and systems issues in rendering. Topics include: Reyes and advanced rasterization, including motion blur and depth of field; ray tracing and physically based rendering; Monte Carlo algorithms for rendering, including direct illumination and global illumination; path tracing and photon mapping; surface reflection and light source models; volume rendering and subsurface scattering; SIMD and multi-core parallelism for rendering. Written assignments and programming projects. Prerequisite: 248 or equivalent. Recommended: Fourier analysis or digital signal processing.", "courseAttributes": "Terms: Spr | Units: 3-4 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Computer Graphics: Image Synthesis Techniques", "courseNumber": "CS 348B:", "courseDescription": "Intermediate level, emphasizing high-quality image synthesis algorithms and systems issues in rendering. Topics include: Reyes and advanced rasterization, including motion blur and depth of field; ray tracing and physically based rendering; Monte Carlo algorithms for rendering, including direct illumination and global illumination; path tracing and photon mapping; surface reflection and light source models; volume rendering and subsurface scattering; SIMD and multi-core parallelism for rendering. Written assignments and programming projects. Prerequisite: 248 or equivalent. Recommended: Fourier analysis or digital signal processing.", "courseAttributes": "Terms: Spr | Units: 3-4 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Computer Graphics: Image Synthesis Techniques", "courseNumber": "CS 348B:", "courseDescription": "Intermediate level, emphasizing high-quality image synthesis algorithms and systems issues in rendering. Topics include: Reyes and advanced rasterization, including motion blur and depth of field; ray tracing and physically based rendering; Monte Carlo algorithms for rendering, including direct illumination and global illumination; path tracing and photon mapping; surface reflection and light source models; volume rendering and subsurface scattering; SIMD and multi-core parallelism for rendering. Written assignments and programming projects. Prerequisite: 248 or equivalent. Recommended: Fourier analysis or digital signal processing.", "courseAttributes": "Terms: Spr | Units: 3-4 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Computer Graphics: Image Synthesis Techniques", "courseNumber": "CS 348B:", "courseDescription": "Intermediate level, emphasizing high-quality image synthesis algorithms and systems issues in rendering. Topics include: Reyes and advanced rasterization, including motion blur and depth of field; ray tracing and physically based rendering; Monte Carlo algorithms for rendering, including direct illumination and global illumination; path tracing and photon mapping; surface reflection and light source models; volume rendering and subsurface scattering; SIMD and multi-core parallelism for rendering. Written assignments and programming projects. Prerequisite: 248 or equivalent. Recommended: Fourier analysis or digital signal processing.", "courseAttributes": "Terms: Spr | Units: 3-4 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Computer Graphics: Image Synthesis Techniques", "courseNumber": "CS 348B:", "courseDescription": "Intermediate level, emphasizing high-quality image synthesis algorithms and systems issues in rendering. Topics include: Reyes and advanced rasterization, including motion blur and depth of field; ray tracing and physically based rendering; Monte Carlo algorithms for rendering, including direct illumination and global illumination; path tracing and photon mapping; surface reflection and light source models; volume rendering and subsurface scattering; SIMD and multi-core parallelism for rendering. Written assignments and programming projects. Prerequisite: 248 or equivalent. Recommended: Fourier analysis or digital signal processing.", "courseAttributes": "Terms: Spr | Units: 3-4 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Computer Graphics: Image Synthesis Techniques", "courseNumber": "CS 348B:", "courseDescription": "Intermediate level, emphasizing high-quality image synthesis algorithms and systems issues in rendering. Topics include: Reyes and advanced rasterization, including motion blur and depth of field; ray tracing and physically based rendering; Monte Carlo algorithms for rendering, including direct illumination and global illumination; path tracing and photon mapping; surface reflection and light source models; volume rendering and subsurface scattering; SIMD and multi-core parallelism for rendering. Written assignments and programming projects. Prerequisite: 248 or equivalent. Recommended: Fourier analysis or digital signal processing.", "courseAttributes": "Terms: Spr | Units: 3-4 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Computer Graphics: Image Synthesis Techniques", "courseNumber": "CS 348B:", "courseDescription": "Intermediate level, emphasizing high-quality image synthesis algorithms and systems issues in rendering. Topics include: Reyes and advanced rasterization, including motion blur and depth of field; ray tracing and physically based rendering; Monte Carlo algorithms for rendering, including direct illumination and global illumination; path tracing and photon mapping; surface reflection and light source models; volume rendering and subsurface scattering; SIMD and multi-core parallelism for rendering. Written assignments and programming projects. Prerequisite: 248 or equivalent. Recommended: Fourier analysis or digital signal processing.", "courseAttributes": "Terms: Spr | Units: 3-4 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Computer Graphics: Image Synthesis Techniques", "courseNumber": "CS 348B:", "courseDescription": "Intermediate level, emphasizing high-quality image synthesis algorithms and systems issues in rendering. Topics include: Reyes and advanced rasterization, including motion blur and depth of field; ray tracing and physically based rendering; Monte Carlo algorithms for rendering, including direct illumination and global illumination; path tracing and photon mapping; surface reflection and light source models; volume rendering and subsurface scattering; SIMD and multi-core parallelism for rendering. Written assignments and programming projects. Prerequisite: 248 or equivalent. Recommended: Fourier analysis or digital signal processing.", "courseAttributes": "Terms: Spr | Units: 3-4 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Computer Graphics: Image Synthesis Techniques", "courseNumber": "CS 348B:", "courseDescription": "Intermediate level, emphasizing high-quality image synthesis algorithms and systems issues in rendering. Topics include: Reyes and advanced rasterization, including motion blur and depth of field; ray tracing and physically based rendering; Monte Carlo algorithms for rendering, including direct illumination and global illumination; path tracing and photon mapping; surface reflection and light source models; volume rendering and subsurface scattering; SIMD and multi-core parallelism for rendering. Written assignments and programming projects. Prerequisite: 248 or equivalent. Recommended: Fourier analysis or digital signal processing.", "courseAttributes": "Terms: Spr | Units: 3-4 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Computer Graphics: Image Synthesis Techniques", "courseNumber": "CS 348B:", "courseDescription": "Intermediate level, emphasizing high-quality image synthesis algorithms and systems issues in rendering. Topics include: Reyes and advanced rasterization, including motion blur and depth of field; ray tracing and physically based rendering; Monte Carlo algorithms for rendering, including direct illumination and global illumination; path tracing and photon mapping; surface reflection and light source models; volume rendering and subsurface scattering; SIMD and multi-core parallelism for rendering. Written assignments and programming projects. Prerequisite: 248 or equivalent. Recommended: Fourier analysis or digital signal processing.", "courseAttributes": "Terms: Spr | Units: 3-4 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Computer Graphics: Image Synthesis Techniques", "courseNumber": "CS 348B:", "courseDescription": "Intermediate level, emphasizing high-quality image synthesis algorithms and systems issues in rendering. Topics include: Reyes and advanced rasterization, including motion blur and depth of field; ray tracing and physically based rendering; Monte Carlo algorithms for rendering, including direct illumination and global illumination; path tracing and photon mapping; surface reflection and light source models; volume rendering and subsurface scattering; SIMD and multi-core parallelism for rendering. Written assignments and programming projects. Prerequisite: 248 or equivalent. Recommended: Fourier analysis or digital signal processing.", "courseAttributes": "Terms: Spr | Units: 3-4 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}]}}
{"Silvio Savarese": {"courses": [{"courseTitle": "Curricular Practical Training", "courseNumber": "CS 390A:", "courseDescription": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1 | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Curricular Practical Training", "courseNumber": "CS 390A:", "courseDescription": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1 | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Curricular Practical Training", "courseNumber": "CS 390A:", "courseDescription": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1 | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Curricular Practical Training", "courseNumber": "CS 390A:", "courseDescription": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1 | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Curricular Practical Training", "courseNumber": "CS 390A:", "courseDescription": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1 | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Curricular Practical Training", "courseNumber": "CS 390A:", "courseDescription": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1 | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Curricular Practical Training", "courseNumber": "CS 390A:", "courseDescription": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1 | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Curricular Practical Training", "courseNumber": "CS 390A:", "courseDescription": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1 | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Curricular Practical Training", "courseNumber": "CS 390A:", "courseDescription": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1 | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Curricular Practical Training", "courseNumber": "CS 390A:", "courseDescription": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1 | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Curricular Practical Training", "courseNumber": "CS 390A:", "courseDescription": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1 | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Curricular Practical Training", "courseNumber": "CS 390A:", "courseDescription": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1 | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Curricular Practical Training", "courseNumber": "CS 390A:", "courseDescription": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1 | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Curricular Practical Training", "courseNumber": "CS 390A:", "courseDescription": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1 | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}]}}
{"Sachin Katti": {"courses": [{"courseTitle": "Advanced Topics in Networking", "courseNumber": "CS 244:", "courseDescription": "Classic papers, new ideas, and research papers in networking. Architectural principles: why the Internet was designed this way? Congestion control. Wireless and mobility; software-defined networks (SDN) and network virtualization; content distribution networks; packet switching; data-center networks. Prerequisite: 144 or equivalent.", "courseAttributes": "Terms: Spr | Units: 3-4 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Advanced Topics in Networking", "courseNumber": "CS 244:", "courseDescription": "Classic papers, new ideas, and research papers in networking. Architectural principles: why the Internet was designed this way? Congestion control. Wireless and mobility; software-defined networks (SDN) and network virtualization; content distribution networks; packet switching; data-center networks. Prerequisite: 144 or equivalent.", "courseAttributes": "Terms: Spr | Units: 3-4 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Advanced Topics in Networking", "courseNumber": "CS 244:", "courseDescription": "Classic papers, new ideas, and research papers in networking. Architectural principles: why the Internet was designed this way? Congestion control. Wireless and mobility; software-defined networks (SDN) and network virtualization; content distribution networks; packet switching; data-center networks. Prerequisite: 144 or equivalent.", "courseAttributes": "Terms: Spr | Units: 3-4 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Advanced Topics in Networking", "courseNumber": "CS 244:", "courseDescription": "Classic papers, new ideas, and research papers in networking. Architectural principles: why the Internet was designed this way? Congestion control. Wireless and mobility; software-defined networks (SDN) and network virtualization; content distribution networks; packet switching; data-center networks. Prerequisite: 144 or equivalent.", "courseAttributes": "Terms: Spr | Units: 3-4 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Advanced Topics in Networking", "courseNumber": "CS 244:", "courseDescription": "Classic papers, new ideas, and research papers in networking. Architectural principles: why the Internet was designed this way? Congestion control. Wireless and mobility; software-defined networks (SDN) and network virtualization; content distribution networks; packet switching; data-center networks. Prerequisite: 144 or equivalent.", "courseAttributes": "Terms: Spr | Units: 3-4 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Advanced Topics in Networking", "courseNumber": "CS 244:", "courseDescription": "Classic papers, new ideas, and research papers in networking. Architectural principles: why the Internet was designed this way? Congestion control. Wireless and mobility; software-defined networks (SDN) and network virtualization; content distribution networks; packet switching; data-center networks. Prerequisite: 144 or equivalent.", "courseAttributes": "Terms: Spr | Units: 3-4 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Advanced Topics in Networking", "courseNumber": "CS 244:", "courseDescription": "Classic papers, new ideas, and research papers in networking. Architectural principles: why the Internet was designed this way? Congestion control. Wireless and mobility; software-defined networks (SDN) and network virtualization; content distribution networks; packet switching; data-center networks. Prerequisite: 144 or equivalent.", "courseAttributes": "Terms: Spr | Units: 3-4 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Advanced Topics in Networking", "courseNumber": "CS 244:", "courseDescription": "Classic papers, new ideas, and research papers in networking. Architectural principles: why the Internet was designed this way? Congestion control. Wireless and mobility; software-defined networks (SDN) and network virtualization; content distribution networks; packet switching; data-center networks. Prerequisite: 144 or equivalent.", "courseAttributes": "Terms: Spr | Units: 3-4 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Advanced Topics in Networking", "courseNumber": "CS 244:", "courseDescription": "Classic papers, new ideas, and research papers in networking. Architectural principles: why the Internet was designed this way? Congestion control. Wireless and mobility; software-defined networks (SDN) and network virtualization; content distribution networks; packet switching; data-center networks. Prerequisite: 144 or equivalent.", "courseAttributes": "Terms: Spr | Units: 3-4 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Advanced Topics in Networking", "courseNumber": "CS 244:", "courseDescription": "Classic papers, new ideas, and research papers in networking. Architectural principles: why the Internet was designed this way? Congestion control. Wireless and mobility; software-defined networks (SDN) and network virtualization; content distribution networks; packet switching; data-center networks. Prerequisite: 144 or equivalent.", "courseAttributes": "Terms: Spr | Units: 3-4 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Advanced Topics in Networking", "courseNumber": "CS 244:", "courseDescription": "Classic papers, new ideas, and research papers in networking. Architectural principles: why the Internet was designed this way? Congestion control. Wireless and mobility; software-defined networks (SDN) and network virtualization; content distribution networks; packet switching; data-center networks. Prerequisite: 144 or equivalent.", "courseAttributes": "Terms: Spr | Units: 3-4 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Advanced Topics in Networking", "courseNumber": "CS 244:", "courseDescription": "Classic papers, new ideas, and research papers in networking. Architectural principles: why the Internet was designed this way? Congestion control. Wireless and mobility; software-defined networks (SDN) and network virtualization; content distribution networks; packet switching; data-center networks. Prerequisite: 144 or equivalent.", "courseAttributes": "Terms: Spr | Units: 3-4 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Advanced Topics in Networking", "courseNumber": "CS 244:", "courseDescription": "Classic papers, new ideas, and research papers in networking. Architectural principles: why the Internet was designed this way? Congestion control. Wireless and mobility; software-defined networks (SDN) and network virtualization; content distribution networks; packet switching; data-center networks. Prerequisite: 144 or equivalent.", "courseAttributes": "Terms: Spr | Units: 3-4 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Advanced Topics in Networking", "courseNumber": "CS 244:", "courseDescription": "Classic papers, new ideas, and research papers in networking. Architectural principles: why the Internet was designed this way? Congestion control. Wireless and mobility; software-defined networks (SDN) and network virtualization; content distribution networks; packet switching; data-center networks. Prerequisite: 144 or equivalent.", "courseAttributes": "Terms: Spr | Units: 3-4 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Advanced Topics in Networking", "courseNumber": "CS 244:", "courseDescription": "Classic papers, new ideas, and research papers in networking. Architectural principles: why the Internet was designed this way? Congestion control. Wireless and mobility; software-defined networks (SDN) and network virtualization; content distribution networks; packet switching; data-center networks. Prerequisite: 144 or equivalent.", "courseAttributes": "Terms: Spr | Units: 3-4 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Advanced Topics in Networking", "courseNumber": "CS 244:", "courseDescription": "Classic papers, new ideas, and research papers in networking. Architectural principles: why the Internet was designed this way? Congestion control. Wireless and mobility; software-defined networks (SDN) and network virtualization; content distribution networks; packet switching; data-center networks. Prerequisite: 144 or equivalent.", "courseAttributes": "Terms: Spr | Units: 3-4 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Advanced Topics in Networking", "courseNumber": "CS 244:", "courseDescription": "Classic papers, new ideas, and research papers in networking. Architectural principles: why the Internet was designed this way? Congestion control. Wireless and mobility; software-defined networks (SDN) and network virtualization; content distribution networks; packet switching; data-center networks. Prerequisite: 144 or equivalent.", "courseAttributes": "Terms: Spr | Units: 3-4 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Advanced Topics in Networking", "courseNumber": "CS 244:", "courseDescription": "Classic papers, new ideas, and research papers in networking. Architectural principles: why the Internet was designed this way? Congestion control. Wireless and mobility; software-defined networks (SDN) and network virtualization; content distribution networks; packet switching; data-center networks. Prerequisite: 144 or equivalent.", "courseAttributes": "Terms: Spr | Units: 3-4 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Advanced Topics in Networking", "courseNumber": "CS 244:", "courseDescription": "Classic papers, new ideas, and research papers in networking. Architectural principles: why the Internet was designed this way? Congestion control. Wireless and mobility; software-defined networks (SDN) and network virtualization; content distribution networks; packet switching; data-center networks. Prerequisite: 144 or equivalent.", "courseAttributes": "Terms: Spr | Units: 3-4 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Advanced Topics in Networking", "courseNumber": "CS 244:", "courseDescription": "Classic papers, new ideas, and research papers in networking. Architectural principles: why the Internet was designed this way? Congestion control. Wireless and mobility; software-defined networks (SDN) and network virtualization; content distribution networks; packet switching; data-center networks. Prerequisite: 144 or equivalent.", "courseAttributes": "Terms: Spr | Units: 3-4 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Advanced Topics in Networking", "courseNumber": "CS 244:", "courseDescription": "Classic papers, new ideas, and research papers in networking. Architectural principles: why the Internet was designed this way? Congestion control. Wireless and mobility; software-defined networks (SDN) and network virtualization; content distribution networks; packet switching; data-center networks. Prerequisite: 144 or equivalent.", "courseAttributes": "Terms: Spr | Units: 3-4 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Advanced Topics in Networking", "courseNumber": "CS 244:", "courseDescription": "Classic papers, new ideas, and research papers in networking. Architectural principles: why the Internet was designed this way? Congestion control. Wireless and mobility; software-defined networks (SDN) and network virtualization; content distribution networks; packet switching; data-center networks. Prerequisite: 144 or equivalent.", "courseAttributes": "Terms: Spr | Units: 3-4 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Advanced Topics in Networking", "courseNumber": "CS 244:", "courseDescription": "Classic papers, new ideas, and research papers in networking. Architectural principles: why the Internet was designed this way? Congestion control. Wireless and mobility; software-defined networks (SDN) and network virtualization; content distribution networks; packet switching; data-center networks. Prerequisite: 144 or equivalent.", "courseAttributes": "Terms: Spr | Units: 3-4 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}]}}
{"Tengyu Ma": {"courses": [{"courseTitle": "Machine Learning (STATS 229)", "courseNumber": "CS 229:", "courseDescription": "Topics: statistical pattern recognition, linear and non-linear regression, non-parametric methods, exponential family, GLMs, support vector machines, kernel methods, model/feature selection, learning theory, VC dimension, clustering, density estimation, EM, dimensionality reduction, ICA, PCA, reinforcement learning and adaptive control, Markov decision processes, approximate dynamic programming, and policy search. Prerequisites: linear algebra, and basic probability and statistics.", "courseAttributes": "Terms: Aut, Spr, Sum | Units: 3-4 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Machine Learning (STATS 229)", "courseNumber": "CS 229:", "courseDescription": "Topics: statistical pattern recognition, linear and non-linear regression, non-parametric methods, exponential family, GLMs, support vector machines, kernel methods, model/feature selection, learning theory, VC dimension, clustering, density estimation, EM, dimensionality reduction, ICA, PCA, reinforcement learning and adaptive control, Markov decision processes, approximate dynamic programming, and policy search. Prerequisites: linear algebra, and basic probability and statistics.", "courseAttributes": "Terms: Aut, Spr, Sum | Units: 3-4 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Machine Learning (STATS 229)", "courseNumber": "CS 229:", "courseDescription": "Topics: statistical pattern recognition, linear and non-linear regression, non-parametric methods, exponential family, GLMs, support vector machines, kernel methods, model/feature selection, learning theory, VC dimension, clustering, density estimation, EM, dimensionality reduction, ICA, PCA, reinforcement learning and adaptive control, Markov decision processes, approximate dynamic programming, and policy search. Prerequisites: linear algebra, and basic probability and statistics.", "courseAttributes": "Terms: Aut, Spr, Sum | Units: 3-4 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Machine Learning (STATS 229)", "courseNumber": "CS 229:", "courseDescription": "Topics: statistical pattern recognition, linear and non-linear regression, non-parametric methods, exponential family, GLMs, support vector machines, kernel methods, model/feature selection, learning theory, VC dimension, clustering, density estimation, EM, dimensionality reduction, ICA, PCA, reinforcement learning and adaptive control, Markov decision processes, approximate dynamic programming, and policy search. Prerequisites: linear algebra, and basic probability and statistics.", "courseAttributes": "Terms: Aut, Spr, Sum | Units: 3-4 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Machine Learning (STATS 229)", "courseNumber": "CS 229:", "courseDescription": "Topics: statistical pattern recognition, linear and non-linear regression, non-parametric methods, exponential family, GLMs, support vector machines, kernel methods, model/feature selection, learning theory, VC dimension, clustering, density estimation, EM, dimensionality reduction, ICA, PCA, reinforcement learning and adaptive control, Markov decision processes, approximate dynamic programming, and policy search. Prerequisites: linear algebra, and basic probability and statistics.", "courseAttributes": "Terms: Aut, Spr, Sum | Units: 3-4 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Machine Learning (STATS 229)", "courseNumber": "CS 229:", "courseDescription": "Topics: statistical pattern recognition, linear and non-linear regression, non-parametric methods, exponential family, GLMs, support vector machines, kernel methods, model/feature selection, learning theory, VC dimension, clustering, density estimation, EM, dimensionality reduction, ICA, PCA, reinforcement learning and adaptive control, Markov decision processes, approximate dynamic programming, and policy search. Prerequisites: linear algebra, and basic probability and statistics.", "courseAttributes": "Terms: Aut, Spr, Sum | Units: 3-4 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Machine Learning (STATS 229)", "courseNumber": "CS 229:", "courseDescription": "Topics: statistical pattern recognition, linear and non-linear regression, non-parametric methods, exponential family, GLMs, support vector machines, kernel methods, model/feature selection, learning theory, VC dimension, clustering, density estimation, EM, dimensionality reduction, ICA, PCA, reinforcement learning and adaptive control, Markov decision processes, approximate dynamic programming, and policy search. Prerequisites: linear algebra, and basic probability and statistics.", "courseAttributes": "Terms: Aut, Spr, Sum | Units: 3-4 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Machine Learning (STATS 229)", "courseNumber": "CS 229:", "courseDescription": "Topics: statistical pattern recognition, linear and non-linear regression, non-parametric methods, exponential family, GLMs, support vector machines, kernel methods, model/feature selection, learning theory, VC dimension, clustering, density estimation, EM, dimensionality reduction, ICA, PCA, reinforcement learning and adaptive control, Markov decision processes, approximate dynamic programming, and policy search. Prerequisites: linear algebra, and basic probability and statistics.", "courseAttributes": "Terms: Aut, Spr, Sum | Units: 3-4 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Machine Learning (STATS 229)", "courseNumber": "CS 229:", "courseDescription": "Topics: statistical pattern recognition, linear and non-linear regression, non-parametric methods, exponential family, GLMs, support vector machines, kernel methods, model/feature selection, learning theory, VC dimension, clustering, density estimation, EM, dimensionality reduction, ICA, PCA, reinforcement learning and adaptive control, Markov decision processes, approximate dynamic programming, and policy search. Prerequisites: linear algebra, and basic probability and statistics.", "courseAttributes": "Terms: Aut, Spr, Sum | Units: 3-4 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Machine Learning (STATS 229)", "courseNumber": "CS 229:", "courseDescription": "Topics: statistical pattern recognition, linear and non-linear regression, non-parametric methods, exponential family, GLMs, support vector machines, kernel methods, model/feature selection, learning theory, VC dimension, clustering, density estimation, EM, dimensionality reduction, ICA, PCA, reinforcement learning and adaptive control, Markov decision processes, approximate dynamic programming, and policy search. Prerequisites: linear algebra, and basic probability and statistics.", "courseAttributes": "Terms: Aut, Spr, Sum | Units: 3-4 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Machine Learning (STATS 229)", "courseNumber": "CS 229:", "courseDescription": "Topics: statistical pattern recognition, linear and non-linear regression, non-parametric methods, exponential family, GLMs, support vector machines, kernel methods, model/feature selection, learning theory, VC dimension, clustering, density estimation, EM, dimensionality reduction, ICA, PCA, reinforcement learning and adaptive control, Markov decision processes, approximate dynamic programming, and policy search. Prerequisites: linear algebra, and basic probability and statistics.", "courseAttributes": "Terms: Aut, Spr, Sum | Units: 3-4 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Machine Learning (STATS 229)", "courseNumber": "CS 229:", "courseDescription": "Topics: statistical pattern recognition, linear and non-linear regression, non-parametric methods, exponential family, GLMs, support vector machines, kernel methods, model/feature selection, learning theory, VC dimension, clustering, density estimation, EM, dimensionality reduction, ICA, PCA, reinforcement learning and adaptive control, Markov decision processes, approximate dynamic programming, and policy search. Prerequisites: linear algebra, and basic probability and statistics.", "courseAttributes": "Terms: Aut, Spr, Sum | Units: 3-4 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}]}}
{"Yoav Shoham": {"courses": [{"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)", "courseLevel": "Undergraduate"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)", "courseLevel": "Undergraduate"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)", "courseLevel": "Undergraduate"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)", "courseLevel": "Undergraduate"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)", "courseLevel": "Undergraduate"}]}}
{"Zakir Durumeric": {"courses": [{"courseTitle": "Computer and Network Security", "courseNumber": "CS 155:", "courseDescription": "For seniors and first-year graduate students. Principles of computer systems security. Attack techniques and how to defend against them. Topics include: network attacks and defenses, operating system security, application security (web, apps, databases), malware, privacy, and security for mobile devices. Course projects focus on building reliable code. Prerequisite: 110. Recommended: basic Unix.", "courseAttributes": "Terms: Spr | Units: 3 | UG Reqs: GER:DB-EngrAppSci | Grading: Letter or Credit/No Credit", "courseLevel": "Undergraduate"}, {"courseTitle": "Computer and Network Security", "courseNumber": "CS 155:", "courseDescription": "For seniors and first-year graduate students. Principles of computer systems security. Attack techniques and how to defend against them. Topics include: network attacks and defenses, operating system security, application security (web, apps, databases), malware, privacy, and security for mobile devices. Course projects focus on building reliable code. Prerequisite: 110. Recommended: basic Unix.", "courseAttributes": "Terms: Spr | Units: 3 | UG Reqs: GER:DB-EngrAppSci | Grading: Letter or Credit/No Credit", "courseLevel": "Undergraduate"}, {"courseTitle": "Computer and Network Security", "courseNumber": "CS 155:", "courseDescription": "For seniors and first-year graduate students. Principles of computer systems security. Attack techniques and how to defend against them. Topics include: network attacks and defenses, operating system security, application security (web, apps, databases), malware, privacy, and security for mobile devices. Course projects focus on building reliable code. Prerequisite: 110. Recommended: basic Unix.", "courseAttributes": "Terms: Spr | Units: 3 | UG Reqs: GER:DB-EngrAppSci | Grading: Letter or Credit/No Credit", "courseLevel": "Undergraduate"}, {"courseTitle": "Computer and Network Security", "courseNumber": "CS 155:", "courseDescription": "For seniors and first-year graduate students. Principles of computer systems security. Attack techniques and how to defend against them. Topics include: network attacks and defenses, operating system security, application security (web, apps, databases), malware, privacy, and security for mobile devices. Course projects focus on building reliable code. Prerequisite: 110. Recommended: basic Unix.", "courseAttributes": "Terms: Spr | Units: 3 | UG Reqs: GER:DB-EngrAppSci | Grading: Letter or Credit/No Credit", "courseLevel": "Undergraduate"}, {"courseTitle": "Computer and Network Security", "courseNumber": "CS 155:", "courseDescription": "For seniors and first-year graduate students. Principles of computer systems security. Attack techniques and how to defend against them. Topics include: network attacks and defenses, operating system security, application security (web, apps, databases), malware, privacy, and security for mobile devices. Course projects focus on building reliable code. Prerequisite: 110. Recommended: basic Unix.", "courseAttributes": "Terms: Spr | Units: 3 | UG Reqs: GER:DB-EngrAppSci | Grading: Letter or Credit/No Credit", "courseLevel": "Undergraduate"}]}}
{"Zakir Durumeric": {"courses": [{"courseTitle": "Topics in Computer and Network Security", "courseNumber": "CS 356:", "courseDescription": "Research  seminar covering foundational work and current topics in computer and network security. Students will read and discuss published research papers as well as complete an original research project in small groups. Open to Ph.D. and masters students as well as advanced undergraduate students. Prerequisites: While the course has no official prerequisites, students need a mature understanding of software systems and networks to be successful. We strongly encourage students to first take CS155: Computer and Network Security.", "courseAttributes": "Terms: Aut | Units: 3 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Topics in Computer and Network Security", "courseNumber": "CS 356:", "courseDescription": "Research  seminar covering foundational work and current topics in computer and network security. Students will read and discuss published research papers as well as complete an original research project in small groups. Open to Ph.D. and masters students as well as advanced undergraduate students. Prerequisites: While the course has no official prerequisites, students need a mature understanding of software systems and networks to be successful. We strongly encourage students to first take CS155: Computer and Network Security.", "courseAttributes": "Terms: Aut | Units: 3 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Topics in Computer and Network Security", "courseNumber": "CS 356:", "courseDescription": "Research  seminar covering foundational work and current topics in computer and network security. Students will read and discuss published research papers as well as complete an original research project in small groups. Open to Ph.D. and masters students as well as advanced undergraduate students. Prerequisites: While the course has no official prerequisites, students need a mature understanding of software systems and networks to be successful. We strongly encourage students to first take CS155: Computer and Network Security.", "courseAttributes": "Terms: Aut | Units: 3 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Topics in Computer and Network Security", "courseNumber": "CS 356:", "courseDescription": "Research  seminar covering foundational work and current topics in computer and network security. Students will read and discuss published research papers as well as complete an original research project in small groups. Open to Ph.D. and masters students as well as advanced undergraduate students. Prerequisites: While the course has no official prerequisites, students need a mature understanding of software systems and networks to be successful. We strongly encourage students to first take CS155: Computer and Network Security.", "courseAttributes": "Terms: Aut | Units: 3 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Topics in Computer and Network Security", "courseNumber": "CS 356:", "courseDescription": "Research  seminar covering foundational work and current topics in computer and network security. Students will read and discuss published research papers as well as complete an original research project in small groups. Open to Ph.D. and masters students as well as advanced undergraduate students. Prerequisites: While the course has no official prerequisites, students need a mature understanding of software systems and networks to be successful. We strongly encourage students to first take CS155: Computer and Network Security.", "courseAttributes": "Terms: Aut | Units: 3 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Topics in Computer and Network Security", "courseNumber": "CS 356:", "courseDescription": "Research  seminar covering foundational work and current topics in computer and network security. Students will read and discuss published research papers as well as complete an original research project in small groups. Open to Ph.D. and masters students as well as advanced undergraduate students. Prerequisites: While the course has no official prerequisites, students need a mature understanding of software systems and networks to be successful. We strongly encourage students to first take CS155: Computer and Network Security.", "courseAttributes": "Terms: Aut | Units: 3 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}]}}
{"Serafim Batzoglou": {"courses": [{"courseTitle": "Directed Study", "courseNumber": "BIOE 391:", "courseDescription": "May be used to prepare for research during a later quarter in 392. Faculty sponsor required. May be repeated for credit.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Directed Study", "courseNumber": "BIOE 391:", "courseDescription": "May be used to prepare for research during a later quarter in 392. Faculty sponsor required. May be repeated for credit.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Directed Study", "courseNumber": "BIOE 391:", "courseDescription": "May be used to prepare for research during a later quarter in 392. Faculty sponsor required. May be repeated for credit.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Directed Study", "courseNumber": "BIOE 391:", "courseDescription": "May be used to prepare for research during a later quarter in 392. Faculty sponsor required. May be repeated for credit.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Directed Study", "courseNumber": "BIOE 391:", "courseDescription": "May be used to prepare for research during a later quarter in 392. Faculty sponsor required. May be repeated for credit.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Directed Study", "courseNumber": "BIOE 391:", "courseDescription": "May be used to prepare for research during a later quarter in 392. Faculty sponsor required. May be repeated for credit.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Directed Study", "courseNumber": "BIOE 391:", "courseDescription": "May be used to prepare for research during a later quarter in 392. Faculty sponsor required. May be repeated for credit.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Directed Study", "courseNumber": "BIOE 391:", "courseDescription": "May be used to prepare for research during a later quarter in 392. Faculty sponsor required. May be repeated for credit.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Directed Study", "courseNumber": "BIOE 391:", "courseDescription": "May be used to prepare for research during a later quarter in 392. Faculty sponsor required. May be repeated for credit.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Directed Study", "courseNumber": "BIOE 391:", "courseDescription": "May be used to prepare for research during a later quarter in 392. Faculty sponsor required. May be repeated for credit.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Directed Study", "courseNumber": "BIOE 391:", "courseDescription": "May be used to prepare for research during a later quarter in 392. Faculty sponsor required. May be repeated for credit.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Directed Study", "courseNumber": "BIOE 391:", "courseDescription": "May be used to prepare for research during a later quarter in 392. Faculty sponsor required. May be repeated for credit.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Directed Study", "courseNumber": "BIOE 391:", "courseDescription": "May be used to prepare for research during a later quarter in 392. Faculty sponsor required. May be repeated for credit.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Directed Study", "courseNumber": "BIOE 391:", "courseDescription": "May be used to prepare for research during a later quarter in 392. Faculty sponsor required. May be repeated for credit.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Directed Study", "courseNumber": "BIOE 391:", "courseDescription": "May be used to prepare for research during a later quarter in 392. Faculty sponsor required. May be repeated for credit.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Directed Study", "courseNumber": "BIOE 391:", "courseDescription": "May be used to prepare for research during a later quarter in 392. Faculty sponsor required. May be repeated for credit.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Directed Study", "courseNumber": "BIOE 391:", "courseDescription": "May be used to prepare for research during a later quarter in 392. Faculty sponsor required. May be repeated for credit.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Directed Study", "courseNumber": "BIOE 391:", "courseDescription": "May be used to prepare for research during a later quarter in 392. Faculty sponsor required. May be repeated for credit.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Directed Study", "courseNumber": "BIOE 391:", "courseDescription": "May be used to prepare for research during a later quarter in 392. Faculty sponsor required. May be repeated for credit.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Directed Study", "courseNumber": "BIOE 391:", "courseDescription": "May be used to prepare for research during a later quarter in 392. Faculty sponsor required. May be repeated for credit.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Directed Study", "courseNumber": "BIOE 391:", "courseDescription": "May be used to prepare for research during a later quarter in 392. Faculty sponsor required. May be repeated for credit.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Directed Study", "courseNumber": "BIOE 391:", "courseDescription": "May be used to prepare for research during a later quarter in 392. Faculty sponsor required. May be repeated for credit.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Directed Study", "courseNumber": "BIOE 391:", "courseDescription": "May be used to prepare for research during a later quarter in 392. Faculty sponsor required. May be repeated for credit.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Directed Study", "courseNumber": "BIOE 391:", "courseDescription": "May be used to prepare for research during a later quarter in 392. Faculty sponsor required. May be repeated for credit.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Directed Study", "courseNumber": "BIOE 391:", "courseDescription": "May be used to prepare for research during a later quarter in 392. Faculty sponsor required. May be repeated for credit.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Directed Study", "courseNumber": "BIOE 391:", "courseDescription": "May be used to prepare for research during a later quarter in 392. Faculty sponsor required. May be repeated for credit.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}]}}
{"Stefano Ermon": {"courses": [{"courseTitle": "Probabilistic Graphical Models: Principles and Techniques", "courseNumber": "CS 228:", "courseDescription": "Probabilistic graphical modeling languages for representing complex domains, algorithms for reasoning using these representations, and learning these representations from data. Topics include: Bayesian and Markov networks, extensions to temporal modeling such as hidden Markov models and dynamic Bayesian networks, exact and approximate probabilistic inference algorithms, and methods for learning models from data. Also included are sample applications to various domains including speech recognition, biological modeling and discovery, medical diagnosis, message encoding, vision, and robot motion planning. Prerequisites: basic probability theory and algorithm design and analysis.", "courseAttributes": "Terms: Win | Units: 3-4 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Probabilistic Graphical Models: Principles and Techniques", "courseNumber": "CS 228:", "courseDescription": "Probabilistic graphical modeling languages for representing complex domains, algorithms for reasoning using these representations, and learning these representations from data. Topics include: Bayesian and Markov networks, extensions to temporal modeling such as hidden Markov models and dynamic Bayesian networks, exact and approximate probabilistic inference algorithms, and methods for learning models from data. Also included are sample applications to various domains including speech recognition, biological modeling and discovery, medical diagnosis, message encoding, vision, and robot motion planning. Prerequisites: basic probability theory and algorithm design and analysis.", "courseAttributes": "Terms: Win | Units: 3-4 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Probabilistic Graphical Models: Principles and Techniques", "courseNumber": "CS 228:", "courseDescription": "Probabilistic graphical modeling languages for representing complex domains, algorithms for reasoning using these representations, and learning these representations from data. Topics include: Bayesian and Markov networks, extensions to temporal modeling such as hidden Markov models and dynamic Bayesian networks, exact and approximate probabilistic inference algorithms, and methods for learning models from data. Also included are sample applications to various domains including speech recognition, biological modeling and discovery, medical diagnosis, message encoding, vision, and robot motion planning. Prerequisites: basic probability theory and algorithm design and analysis.", "courseAttributes": "Terms: Win | Units: 3-4 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Probabilistic Graphical Models: Principles and Techniques", "courseNumber": "CS 228:", "courseDescription": "Probabilistic graphical modeling languages for representing complex domains, algorithms for reasoning using these representations, and learning these representations from data. Topics include: Bayesian and Markov networks, extensions to temporal modeling such as hidden Markov models and dynamic Bayesian networks, exact and approximate probabilistic inference algorithms, and methods for learning models from data. Also included are sample applications to various domains including speech recognition, biological modeling and discovery, medical diagnosis, message encoding, vision, and robot motion planning. Prerequisites: basic probability theory and algorithm design and analysis.", "courseAttributes": "Terms: Win | Units: 3-4 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Probabilistic Graphical Models: Principles and Techniques", "courseNumber": "CS 228:", "courseDescription": "Probabilistic graphical modeling languages for representing complex domains, algorithms for reasoning using these representations, and learning these representations from data. Topics include: Bayesian and Markov networks, extensions to temporal modeling such as hidden Markov models and dynamic Bayesian networks, exact and approximate probabilistic inference algorithms, and methods for learning models from data. Also included are sample applications to various domains including speech recognition, biological modeling and discovery, medical diagnosis, message encoding, vision, and robot motion planning. Prerequisites: basic probability theory and algorithm design and analysis.", "courseAttributes": "Terms: Win | Units: 3-4 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Probabilistic Graphical Models: Principles and Techniques", "courseNumber": "CS 228:", "courseDescription": "Probabilistic graphical modeling languages for representing complex domains, algorithms for reasoning using these representations, and learning these representations from data. Topics include: Bayesian and Markov networks, extensions to temporal modeling such as hidden Markov models and dynamic Bayesian networks, exact and approximate probabilistic inference algorithms, and methods for learning models from data. Also included are sample applications to various domains including speech recognition, biological modeling and discovery, medical diagnosis, message encoding, vision, and robot motion planning. Prerequisites: basic probability theory and algorithm design and analysis.", "courseAttributes": "Terms: Win | Units: 3-4 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Probabilistic Graphical Models: Principles and Techniques", "courseNumber": "CS 228:", "courseDescription": "Probabilistic graphical modeling languages for representing complex domains, algorithms for reasoning using these representations, and learning these representations from data. Topics include: Bayesian and Markov networks, extensions to temporal modeling such as hidden Markov models and dynamic Bayesian networks, exact and approximate probabilistic inference algorithms, and methods for learning models from data. Also included are sample applications to various domains including speech recognition, biological modeling and discovery, medical diagnosis, message encoding, vision, and robot motion planning. Prerequisites: basic probability theory and algorithm design and analysis.", "courseAttributes": "Terms: Win | Units: 3-4 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Probabilistic Graphical Models: Principles and Techniques", "courseNumber": "CS 228:", "courseDescription": "Probabilistic graphical modeling languages for representing complex domains, algorithms for reasoning using these representations, and learning these representations from data. Topics include: Bayesian and Markov networks, extensions to temporal modeling such as hidden Markov models and dynamic Bayesian networks, exact and approximate probabilistic inference algorithms, and methods for learning models from data. Also included are sample applications to various domains including speech recognition, biological modeling and discovery, medical diagnosis, message encoding, vision, and robot motion planning. Prerequisites: basic probability theory and algorithm design and analysis.", "courseAttributes": "Terms: Win | Units: 3-4 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Probabilistic Graphical Models: Principles and Techniques", "courseNumber": "CS 228:", "courseDescription": "Probabilistic graphical modeling languages for representing complex domains, algorithms for reasoning using these representations, and learning these representations from data. Topics include: Bayesian and Markov networks, extensions to temporal modeling such as hidden Markov models and dynamic Bayesian networks, exact and approximate probabilistic inference algorithms, and methods for learning models from data. Also included are sample applications to various domains including speech recognition, biological modeling and discovery, medical diagnosis, message encoding, vision, and robot motion planning. Prerequisites: basic probability theory and algorithm design and analysis.", "courseAttributes": "Terms: Win | Units: 3-4 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Probabilistic Graphical Models: Principles and Techniques", "courseNumber": "CS 228:", "courseDescription": "Probabilistic graphical modeling languages for representing complex domains, algorithms for reasoning using these representations, and learning these representations from data. Topics include: Bayesian and Markov networks, extensions to temporal modeling such as hidden Markov models and dynamic Bayesian networks, exact and approximate probabilistic inference algorithms, and methods for learning models from data. Also included are sample applications to various domains including speech recognition, biological modeling and discovery, medical diagnosis, message encoding, vision, and robot motion planning. Prerequisites: basic probability theory and algorithm design and analysis.", "courseAttributes": "Terms: Win | Units: 3-4 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Probabilistic Graphical Models: Principles and Techniques", "courseNumber": "CS 228:", "courseDescription": "Probabilistic graphical modeling languages for representing complex domains, algorithms for reasoning using these representations, and learning these representations from data. Topics include: Bayesian and Markov networks, extensions to temporal modeling such as hidden Markov models and dynamic Bayesian networks, exact and approximate probabilistic inference algorithms, and methods for learning models from data. Also included are sample applications to various domains including speech recognition, biological modeling and discovery, medical diagnosis, message encoding, vision, and robot motion planning. Prerequisites: basic probability theory and algorithm design and analysis.", "courseAttributes": "Terms: Win | Units: 3-4 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Probabilistic Graphical Models: Principles and Techniques", "courseNumber": "CS 228:", "courseDescription": "Probabilistic graphical modeling languages for representing complex domains, algorithms for reasoning using these representations, and learning these representations from data. Topics include: Bayesian and Markov networks, extensions to temporal modeling such as hidden Markov models and dynamic Bayesian networks, exact and approximate probabilistic inference algorithms, and methods for learning models from data. Also included are sample applications to various domains including speech recognition, biological modeling and discovery, medical diagnosis, message encoding, vision, and robot motion planning. Prerequisites: basic probability theory and algorithm design and analysis.", "courseAttributes": "Terms: Win | Units: 3-4 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Probabilistic Graphical Models: Principles and Techniques", "courseNumber": "CS 228:", "courseDescription": "Probabilistic graphical modeling languages for representing complex domains, algorithms for reasoning using these representations, and learning these representations from data. Topics include: Bayesian and Markov networks, extensions to temporal modeling such as hidden Markov models and dynamic Bayesian networks, exact and approximate probabilistic inference algorithms, and methods for learning models from data. Also included are sample applications to various domains including speech recognition, biological modeling and discovery, medical diagnosis, message encoding, vision, and robot motion planning. Prerequisites: basic probability theory and algorithm design and analysis.", "courseAttributes": "Terms: Win | Units: 3-4 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Probabilistic Graphical Models: Principles and Techniques", "courseNumber": "CS 228:", "courseDescription": "Probabilistic graphical modeling languages for representing complex domains, algorithms for reasoning using these representations, and learning these representations from data. Topics include: Bayesian and Markov networks, extensions to temporal modeling such as hidden Markov models and dynamic Bayesian networks, exact and approximate probabilistic inference algorithms, and methods for learning models from data. Also included are sample applications to various domains including speech recognition, biological modeling and discovery, medical diagnosis, message encoding, vision, and robot motion planning. Prerequisites: basic probability theory and algorithm design and analysis.", "courseAttributes": "Terms: Win | Units: 3-4 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Probabilistic Graphical Models: Principles and Techniques", "courseNumber": "CS 228:", "courseDescription": "Probabilistic graphical modeling languages for representing complex domains, algorithms for reasoning using these representations, and learning these representations from data. Topics include: Bayesian and Markov networks, extensions to temporal modeling such as hidden Markov models and dynamic Bayesian networks, exact and approximate probabilistic inference algorithms, and methods for learning models from data. Also included are sample applications to various domains including speech recognition, biological modeling and discovery, medical diagnosis, message encoding, vision, and robot motion planning. Prerequisites: basic probability theory and algorithm design and analysis.", "courseAttributes": "Terms: Win | Units: 3-4 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Probabilistic Graphical Models: Principles and Techniques", "courseNumber": "CS 228:", "courseDescription": "Probabilistic graphical modeling languages for representing complex domains, algorithms for reasoning using these representations, and learning these representations from data. Topics include: Bayesian and Markov networks, extensions to temporal modeling such as hidden Markov models and dynamic Bayesian networks, exact and approximate probabilistic inference algorithms, and methods for learning models from data. Also included are sample applications to various domains including speech recognition, biological modeling and discovery, medical diagnosis, message encoding, vision, and robot motion planning. Prerequisites: basic probability theory and algorithm design and analysis.", "courseAttributes": "Terms: Win | Units: 3-4 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Probabilistic Graphical Models: Principles and Techniques", "courseNumber": "CS 228:", "courseDescription": "Probabilistic graphical modeling languages for representing complex domains, algorithms for reasoning using these representations, and learning these representations from data. Topics include: Bayesian and Markov networks, extensions to temporal modeling such as hidden Markov models and dynamic Bayesian networks, exact and approximate probabilistic inference algorithms, and methods for learning models from data. Also included are sample applications to various domains including speech recognition, biological modeling and discovery, medical diagnosis, message encoding, vision, and robot motion planning. Prerequisites: basic probability theory and algorithm design and analysis.", "courseAttributes": "Terms: Win | Units: 3-4 | Grading: Letter or Credit/No Credit", "courseLevel": "Graduate"}]}}
{"Yoav Shoham": {"courses": [{"courseTitle": "Curricular Practical Training", "courseNumber": "CS 390A:", "courseDescription": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1 | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Curricular Practical Training", "courseNumber": "CS 390A:", "courseDescription": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1 | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Curricular Practical Training", "courseNumber": "CS 390A:", "courseDescription": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1 | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Curricular Practical Training", "courseNumber": "CS 390A:", "courseDescription": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1 | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Curricular Practical Training", "courseNumber": "CS 390A:", "courseDescription": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1 | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Curricular Practical Training", "courseNumber": "CS 390A:", "courseDescription": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1 | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Curricular Practical Training", "courseNumber": "CS 390A:", "courseDescription": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1 | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Curricular Practical Training", "courseNumber": "CS 390A:", "courseDescription": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1 | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Curricular Practical Training", "courseNumber": "CS 390A:", "courseDescription": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1 | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Curricular Practical Training", "courseNumber": "CS 390A:", "courseDescription": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1 | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Curricular Practical Training", "courseNumber": "CS 390A:", "courseDescription": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1 | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Curricular Practical Training", "courseNumber": "CS 390A:", "courseDescription": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1 | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Curricular Practical Training", "courseNumber": "CS 390A:", "courseDescription": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1 | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Curricular Practical Training", "courseNumber": "CS 390A:", "courseDescription": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1 | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Curricular Practical Training", "courseNumber": "CS 390A:", "courseDescription": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1 | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Curricular Practical Training", "courseNumber": "CS 390A:", "courseDescription": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1 | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}, {"courseTitle": "Curricular Practical Training", "courseNumber": "CS 390A:", "courseDescription": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1 | Grading: Satisfactory/No Credit", "courseLevel": "Graduate"}]}}
