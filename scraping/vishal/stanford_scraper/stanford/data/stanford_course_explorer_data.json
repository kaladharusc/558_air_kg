{"Christoforos E. Kozyrakis": {"courses": []}}
{"Alexander Aiken": {"courses": []}}
{"Christopher R\u00e9": {"courses": []}}
{"Aaron Sidford": {"courses": [{"courseTitle": "Discrete Mathematics and Algorithms (MS&E 316)", "courseNumber": "CME 305:", "courseDescription": "Topics: Basic Algebraic Graph Theory, Matroids and Minimum Spanning Trees, Submodularity and Maximum Flow, NP-Hardness, Approximation Algorithms, Randomized Algorithms, The Probabilistic Method, and Spectral Sparsification using Effective Resistances. Topics will be illustrated with applications from Distributed Computing, Machine Learning, and large-scale Optimization. Prerequisites: CS 261 is highly recommended, although not required.", "courseAttributes": "Terms: Win | Units: 3 | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Discrete Mathematics and Algorithms (MS&E 316)", "courseNumber": "CME 305:", "courseDescription": "Topics: Basic Algebraic Graph Theory, Matroids and Minimum Spanning Trees, Submodularity and Maximum Flow, NP-Hardness, Approximation Algorithms, Randomized Algorithms, The Probabilistic Method, and Spectral Sparsification using Effective Resistances. Topics will be illustrated with applications from Distributed Computing, Machine Learning, and large-scale Optimization. Prerequisites: CS 261 is highly recommended, although not required.", "courseAttributes": "Terms: Win | Units: 3 | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Discrete Mathematics and Algorithms (MS&E 316)", "courseNumber": "CME 305:", "courseDescription": "Topics: Basic Algebraic Graph Theory, Matroids and Minimum Spanning Trees, Submodularity and Maximum Flow, NP-Hardness, Approximation Algorithms, Randomized Algorithms, The Probabilistic Method, and Spectral Sparsification using Effective Resistances. Topics will be illustrated with applications from Distributed Computing, Machine Learning, and large-scale Optimization. Prerequisites: CS 261 is highly recommended, although not required.", "courseAttributes": "Terms: Win | Units: 3 | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Discrete Mathematics and Algorithms (MS&E 316)", "courseNumber": "CME 305:", "courseDescription": "Topics: Basic Algebraic Graph Theory, Matroids and Minimum Spanning Trees, Submodularity and Maximum Flow, NP-Hardness, Approximation Algorithms, Randomized Algorithms, The Probabilistic Method, and Spectral Sparsification using Effective Resistances. Topics will be illustrated with applications from Distributed Computing, Machine Learning, and large-scale Optimization. Prerequisites: CS 261 is highly recommended, although not required.", "courseAttributes": "Terms: Win | Units: 3 | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Discrete Mathematics and Algorithms (MS&E 316)", "courseNumber": "CME 305:", "courseDescription": "Topics: Basic Algebraic Graph Theory, Matroids and Minimum Spanning Trees, Submodularity and Maximum Flow, NP-Hardness, Approximation Algorithms, Randomized Algorithms, The Probabilistic Method, and Spectral Sparsification using Effective Resistances. Topics will be illustrated with applications from Distributed Computing, Machine Learning, and large-scale Optimization. Prerequisites: CS 261 is highly recommended, although not required.", "courseAttributes": "Terms: Win | Units: 3 | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Discrete Mathematics and Algorithms (MS&E 316)", "courseNumber": "CME 305:", "courseDescription": "Topics: Basic Algebraic Graph Theory, Matroids and Minimum Spanning Trees, Submodularity and Maximum Flow, NP-Hardness, Approximation Algorithms, Randomized Algorithms, The Probabilistic Method, and Spectral Sparsification using Effective Resistances. Topics will be illustrated with applications from Distributed Computing, Machine Learning, and large-scale Optimization. Prerequisites: CS 261 is highly recommended, although not required.", "courseAttributes": "Terms: Win | Units: 3 | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Discrete Mathematics and Algorithms (MS&E 316)", "courseNumber": "CME 305:", "courseDescription": "Topics: Basic Algebraic Graph Theory, Matroids and Minimum Spanning Trees, Submodularity and Maximum Flow, NP-Hardness, Approximation Algorithms, Randomized Algorithms, The Probabilistic Method, and Spectral Sparsification using Effective Resistances. Topics will be illustrated with applications from Distributed Computing, Machine Learning, and large-scale Optimization. Prerequisites: CS 261 is highly recommended, although not required.", "courseAttributes": "Terms: Win | Units: 3 | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Discrete Mathematics and Algorithms (MS&E 316)", "courseNumber": "CME 305:", "courseDescription": "Topics: Basic Algebraic Graph Theory, Matroids and Minimum Spanning Trees, Submodularity and Maximum Flow, NP-Hardness, Approximation Algorithms, Randomized Algorithms, The Probabilistic Method, and Spectral Sparsification using Effective Resistances. Topics will be illustrated with applications from Distributed Computing, Machine Learning, and large-scale Optimization. Prerequisites: CS 261 is highly recommended, although not required.", "courseAttributes": "Terms: Win | Units: 3 | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Discrete Mathematics and Algorithms (MS&E 316)", "courseNumber": "CME 305:", "courseDescription": "Topics: Basic Algebraic Graph Theory, Matroids and Minimum Spanning Trees, Submodularity and Maximum Flow, NP-Hardness, Approximation Algorithms, Randomized Algorithms, The Probabilistic Method, and Spectral Sparsification using Effective Resistances. Topics will be illustrated with applications from Distributed Computing, Machine Learning, and large-scale Optimization. Prerequisites: CS 261 is highly recommended, although not required.", "courseAttributes": "Terms: Win | Units: 3 | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Discrete Mathematics and Algorithms (MS&E 316)", "courseNumber": "CME 305:", "courseDescription": "Topics: Basic Algebraic Graph Theory, Matroids and Minimum Spanning Trees, Submodularity and Maximum Flow, NP-Hardness, Approximation Algorithms, Randomized Algorithms, The Probabilistic Method, and Spectral Sparsification using Effective Resistances. Topics will be illustrated with applications from Distributed Computing, Machine Learning, and large-scale Optimization. Prerequisites: CS 261 is highly recommended, although not required.", "courseAttributes": "Terms: Win | Units: 3 | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Discrete Mathematics and Algorithms (MS&E 316)", "courseNumber": "CME 305:", "courseDescription": "Topics: Basic Algebraic Graph Theory, Matroids and Minimum Spanning Trees, Submodularity and Maximum Flow, NP-Hardness, Approximation Algorithms, Randomized Algorithms, The Probabilistic Method, and Spectral Sparsification using Effective Resistances. Topics will be illustrated with applications from Distributed Computing, Machine Learning, and large-scale Optimization. Prerequisites: CS 261 is highly recommended, although not required.", "courseAttributes": "Terms: Win | Units: 3 | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Discrete Mathematics and Algorithms (MS&E 316)", "courseNumber": "CME 305:", "courseDescription": "Topics: Basic Algebraic Graph Theory, Matroids and Minimum Spanning Trees, Submodularity and Maximum Flow, NP-Hardness, Approximation Algorithms, Randomized Algorithms, The Probabilistic Method, and Spectral Sparsification using Effective Resistances. Topics will be illustrated with applications from Distributed Computing, Machine Learning, and large-scale Optimization. Prerequisites: CS 261 is highly recommended, although not required.", "courseAttributes": "Terms: Win | Units: 3 | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Discrete Mathematics and Algorithms (MS&E 316)", "courseNumber": "CME 305:", "courseDescription": "Topics: Basic Algebraic Graph Theory, Matroids and Minimum Spanning Trees, Submodularity and Maximum Flow, NP-Hardness, Approximation Algorithms, Randomized Algorithms, The Probabilistic Method, and Spectral Sparsification using Effective Resistances. Topics will be illustrated with applications from Distributed Computing, Machine Learning, and large-scale Optimization. Prerequisites: CS 261 is highly recommended, although not required.", "courseAttributes": "Terms: Win | Units: 3 | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Discrete Mathematics and Algorithms (MS&E 316)", "courseNumber": "CME 305:", "courseDescription": "Topics: Basic Algebraic Graph Theory, Matroids and Minimum Spanning Trees, Submodularity and Maximum Flow, NP-Hardness, Approximation Algorithms, Randomized Algorithms, The Probabilistic Method, and Spectral Sparsification using Effective Resistances. Topics will be illustrated with applications from Distributed Computing, Machine Learning, and large-scale Optimization. Prerequisites: CS 261 is highly recommended, although not required.", "courseAttributes": "Terms: Win | Units: 3 | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Discrete Mathematics and Algorithms (MS&E 316)", "courseNumber": "CME 305:", "courseDescription": "Topics: Basic Algebraic Graph Theory, Matroids and Minimum Spanning Trees, Submodularity and Maximum Flow, NP-Hardness, Approximation Algorithms, Randomized Algorithms, The Probabilistic Method, and Spectral Sparsification using Effective Resistances. Topics will be illustrated with applications from Distributed Computing, Machine Learning, and large-scale Optimization. Prerequisites: CS 261 is highly recommended, although not required.", "courseAttributes": "Terms: Win | Units: 3 | Grading: Letter or Credit/No Credit"}]}}
{"Daniel Jurafsky": {"courses": [{"courseTitle": "TGR Project", "courseNumber": "EASTASN 801:", "courseDescription": "Mentored research project for first-year graduate students in linguistics.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 0 | Repeatable for credit | Grading: TGR"}, {"courseTitle": "TGR Project", "courseNumber": "EASTASN 801:", "courseDescription": "Mentored research project for first-year graduate students in linguistics.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 0 | Repeatable for credit | Grading: TGR"}, {"courseTitle": "TGR Project", "courseNumber": "EASTASN 801:", "courseDescription": "Mentored research project for first-year graduate students in linguistics.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 0 | Repeatable for credit | Grading: TGR"}, {"courseTitle": "TGR Project", "courseNumber": "EASTASN 801:", "courseDescription": "Mentored research project for first-year graduate students in linguistics.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 0 | Repeatable for credit | Grading: TGR"}, {"courseTitle": "TGR Project", "courseNumber": "EASTASN 801:", "courseDescription": "Mentored research project for first-year graduate students in linguistics.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 0 | Repeatable for credit | Grading: TGR"}, {"courseTitle": "TGR Project", "courseNumber": "EASTASN 801:", "courseDescription": "Mentored research project for first-year graduate students in linguistics.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 0 | Repeatable for credit | Grading: TGR"}, {"courseTitle": "TGR Project", "courseNumber": "EASTASN 801:", "courseDescription": "Mentored research project for first-year graduate students in linguistics.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 0 | Repeatable for credit | Grading: TGR"}, {"courseTitle": "TGR Project", "courseNumber": "EASTASN 801:", "courseDescription": "Mentored research project for first-year graduate students in linguistics.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 0 | Repeatable for credit | Grading: TGR"}, {"courseTitle": "TGR Project", "courseNumber": "EASTASN 801:", "courseDescription": "Mentored research project for first-year graduate students in linguistics.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 0 | Repeatable for credit | Grading: TGR"}]}}
{"Aviad Rubinstein": {"courses": [{"courseTitle": "Design and Analysis of Algorithms", "courseNumber": "CS 161:", "courseDescription": "Worst and average case analysis. Recurrences and asymptotics. Efficient algorithms for sorting, searching, and selection. Data structures: binary search trees, heaps, hash tables. Algorithm design techniques: divide-and-conquer, dynamic programming, greedy algorithms, amortized analysis, randomization. Algorithms for fundamental graph problems: minimum-cost spanning tree, connected components, topological sort, and shortest paths. Possible additional topics: network flow, string searching. Prerequisite: 103 or 103B; 109 or STATS 116.", "courseAttributes": "Terms: Aut, Win, Sum | Units: 3-5 | UG Reqs: GER:DB-EngrAppSci, WAY-FR | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Design and Analysis of Algorithms", "courseNumber": "CS 161:", "courseDescription": "Worst and average case analysis. Recurrences and asymptotics. Efficient algorithms for sorting, searching, and selection. Data structures: binary search trees, heaps, hash tables. Algorithm design techniques: divide-and-conquer, dynamic programming, greedy algorithms, amortized analysis, randomization. Algorithms for fundamental graph problems: minimum-cost spanning tree, connected components, topological sort, and shortest paths. Possible additional topics: network flow, string searching. Prerequisite: 103 or 103B; 109 or STATS 116.", "courseAttributes": "Terms: Aut, Win, Sum | Units: 3-5 | UG Reqs: GER:DB-EngrAppSci, WAY-FR | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Design and Analysis of Algorithms", "courseNumber": "CS 161:", "courseDescription": "Worst and average case analysis. Recurrences and asymptotics. Efficient algorithms for sorting, searching, and selection. Data structures: binary search trees, heaps, hash tables. Algorithm design techniques: divide-and-conquer, dynamic programming, greedy algorithms, amortized analysis, randomization. Algorithms for fundamental graph problems: minimum-cost spanning tree, connected components, topological sort, and shortest paths. Possible additional topics: network flow, string searching. Prerequisite: 103 or 103B; 109 or STATS 116.", "courseAttributes": "Terms: Aut, Win, Sum | Units: 3-5 | UG Reqs: GER:DB-EngrAppSci, WAY-FR | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Design and Analysis of Algorithms", "courseNumber": "CS 161:", "courseDescription": "Worst and average case analysis. Recurrences and asymptotics. Efficient algorithms for sorting, searching, and selection. Data structures: binary search trees, heaps, hash tables. Algorithm design techniques: divide-and-conquer, dynamic programming, greedy algorithms, amortized analysis, randomization. Algorithms for fundamental graph problems: minimum-cost spanning tree, connected components, topological sort, and shortest paths. Possible additional topics: network flow, string searching. Prerequisite: 103 or 103B; 109 or STATS 116.", "courseAttributes": "Terms: Aut, Win, Sum | Units: 3-5 | UG Reqs: GER:DB-EngrAppSci, WAY-FR | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Design and Analysis of Algorithms", "courseNumber": "CS 161:", "courseDescription": "Worst and average case analysis. Recurrences and asymptotics. Efficient algorithms for sorting, searching, and selection. Data structures: binary search trees, heaps, hash tables. Algorithm design techniques: divide-and-conquer, dynamic programming, greedy algorithms, amortized analysis, randomization. Algorithms for fundamental graph problems: minimum-cost spanning tree, connected components, topological sort, and shortest paths. Possible additional topics: network flow, string searching. Prerequisite: 103 or 103B; 109 or STATS 116.", "courseAttributes": "Terms: Aut, Win, Sum | Units: 3-5 | UG Reqs: GER:DB-EngrAppSci, WAY-FR | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Design and Analysis of Algorithms", "courseNumber": "CS 161:", "courseDescription": "Worst and average case analysis. Recurrences and asymptotics. Efficient algorithms for sorting, searching, and selection. Data structures: binary search trees, heaps, hash tables. Algorithm design techniques: divide-and-conquer, dynamic programming, greedy algorithms, amortized analysis, randomization. Algorithms for fundamental graph problems: minimum-cost spanning tree, connected components, topological sort, and shortest paths. Possible additional topics: network flow, string searching. Prerequisite: 103 or 103B; 109 or STATS 116.", "courseAttributes": "Terms: Aut, Win, Sum | Units: 3-5 | UG Reqs: GER:DB-EngrAppSci, WAY-FR | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Design and Analysis of Algorithms", "courseNumber": "CS 161:", "courseDescription": "Worst and average case analysis. Recurrences and asymptotics. Efficient algorithms for sorting, searching, and selection. Data structures: binary search trees, heaps, hash tables. Algorithm design techniques: divide-and-conquer, dynamic programming, greedy algorithms, amortized analysis, randomization. Algorithms for fundamental graph problems: minimum-cost spanning tree, connected components, topological sort, and shortest paths. Possible additional topics: network flow, string searching. Prerequisite: 103 or 103B; 109 or STATS 116.", "courseAttributes": "Terms: Aut, Win, Sum | Units: 3-5 | UG Reqs: GER:DB-EngrAppSci, WAY-FR | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Design and Analysis of Algorithms", "courseNumber": "CS 161:", "courseDescription": "Worst and average case analysis. Recurrences and asymptotics. Efficient algorithms for sorting, searching, and selection. Data structures: binary search trees, heaps, hash tables. Algorithm design techniques: divide-and-conquer, dynamic programming, greedy algorithms, amortized analysis, randomization. Algorithms for fundamental graph problems: minimum-cost spanning tree, connected components, topological sort, and shortest paths. Possible additional topics: network flow, string searching. Prerequisite: 103 or 103B; 109 or STATS 116.", "courseAttributes": "Terms: Aut, Win, Sum | Units: 3-5 | UG Reqs: GER:DB-EngrAppSci, WAY-FR | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Design and Analysis of Algorithms", "courseNumber": "CS 161:", "courseDescription": "Worst and average case analysis. Recurrences and asymptotics. Efficient algorithms for sorting, searching, and selection. Data structures: binary search trees, heaps, hash tables. Algorithm design techniques: divide-and-conquer, dynamic programming, greedy algorithms, amortized analysis, randomization. Algorithms for fundamental graph problems: minimum-cost spanning tree, connected components, topological sort, and shortest paths. Possible additional topics: network flow, string searching. Prerequisite: 103 or 103B; 109 or STATS 116.", "courseAttributes": "Terms: Aut, Win, Sum | Units: 3-5 | UG Reqs: GER:DB-EngrAppSci, WAY-FR | Grading: Letter or Credit/No Credit"}]}}
{"Chris Piec": {"courses": [{"courseTitle": "AI for Social Good", "courseNumber": "CS 21SI:", "courseDescription": "Students will learn about and apply cutting-edge artificial intelligence techniques to real-world social good spaces (such as healthcare, government, education, and environment). Taught jointly by CS+Social Good and the Stanford AI Group, the aim of the class is to empower students to apply these techniques outside of the classroom. The class will focus on techniques from machine learning and deep learning, including regression, support vector machines (SVMs), neural networks, convolutional neural networks (CNNs), and recurrent neural networks (RNNs). The course alternates between lectures on machine learning theory and discussions with invited speakers, who will challenge students to apply techniques in their social good domains. Students complete weekly coding assignments reinforcing machine learning concepts and applications. Prerequisites: programming experience at the level of CS107, mathematical fluency at the level of CS103, comfort with probability at the level of CS109 (or equivalent). Application required for enrollment.", "courseAttributes": "Terms: Spr | Units: 2 | Grading: Satisfactory/No Credit"}, {"courseTitle": "AI for Social Good", "courseNumber": "CS 21SI:", "courseDescription": "Students will learn about and apply cutting-edge artificial intelligence techniques to real-world social good spaces (such as healthcare, government, education, and environment). Taught jointly by CS+Social Good and the Stanford AI Group, the aim of the class is to empower students to apply these techniques outside of the classroom. The class will focus on techniques from machine learning and deep learning, including regression, support vector machines (SVMs), neural networks, convolutional neural networks (CNNs), and recurrent neural networks (RNNs). The course alternates between lectures on machine learning theory and discussions with invited speakers, who will challenge students to apply techniques in their social good domains. Students complete weekly coding assignments reinforcing machine learning concepts and applications. Prerequisites: programming experience at the level of CS107, mathematical fluency at the level of CS103, comfort with probability at the level of CS109 (or equivalent). Application required for enrollment.", "courseAttributes": "Terms: Spr | Units: 2 | Grading: Satisfactory/No Credit"}, {"courseTitle": "AI for Social Good", "courseNumber": "CS 21SI:", "courseDescription": "Students will learn about and apply cutting-edge artificial intelligence techniques to real-world social good spaces (such as healthcare, government, education, and environment). Taught jointly by CS+Social Good and the Stanford AI Group, the aim of the class is to empower students to apply these techniques outside of the classroom. The class will focus on techniques from machine learning and deep learning, including regression, support vector machines (SVMs), neural networks, convolutional neural networks (CNNs), and recurrent neural networks (RNNs). The course alternates between lectures on machine learning theory and discussions with invited speakers, who will challenge students to apply techniques in their social good domains. Students complete weekly coding assignments reinforcing machine learning concepts and applications. Prerequisites: programming experience at the level of CS107, mathematical fluency at the level of CS103, comfort with probability at the level of CS109 (or equivalent). Application required for enrollment.", "courseAttributes": "Terms: Spr | Units: 2 | Grading: Satisfactory/No Credit"}, {"courseTitle": "AI for Social Good", "courseNumber": "CS 21SI:", "courseDescription": "Students will learn about and apply cutting-edge artificial intelligence techniques to real-world social good spaces (such as healthcare, government, education, and environment). Taught jointly by CS+Social Good and the Stanford AI Group, the aim of the class is to empower students to apply these techniques outside of the classroom. The class will focus on techniques from machine learning and deep learning, including regression, support vector machines (SVMs), neural networks, convolutional neural networks (CNNs), and recurrent neural networks (RNNs). The course alternates between lectures on machine learning theory and discussions with invited speakers, who will challenge students to apply techniques in their social good domains. Students complete weekly coding assignments reinforcing machine learning concepts and applications. Prerequisites: programming experience at the level of CS107, mathematical fluency at the level of CS103, comfort with probability at the level of CS109 (or equivalent). Application required for enrollment.", "courseAttributes": "Terms: Spr | Units: 2 | Grading: Satisfactory/No Credit"}, {"courseTitle": "AI for Social Good", "courseNumber": "CS 21SI:", "courseDescription": "Students will learn about and apply cutting-edge artificial intelligence techniques to real-world social good spaces (such as healthcare, government, education, and environment). Taught jointly by CS+Social Good and the Stanford AI Group, the aim of the class is to empower students to apply these techniques outside of the classroom. The class will focus on techniques from machine learning and deep learning, including regression, support vector machines (SVMs), neural networks, convolutional neural networks (CNNs), and recurrent neural networks (RNNs). The course alternates between lectures on machine learning theory and discussions with invited speakers, who will challenge students to apply techniques in their social good domains. Students complete weekly coding assignments reinforcing machine learning concepts and applications. Prerequisites: programming experience at the level of CS107, mathematical fluency at the level of CS103, comfort with probability at the level of CS109 (or equivalent). Application required for enrollment.", "courseAttributes": "Terms: Spr | Units: 2 | Grading: Satisfactory/No Credit"}, {"courseTitle": "AI for Social Good", "courseNumber": "CS 21SI:", "courseDescription": "Students will learn about and apply cutting-edge artificial intelligence techniques to real-world social good spaces (such as healthcare, government, education, and environment). Taught jointly by CS+Social Good and the Stanford AI Group, the aim of the class is to empower students to apply these techniques outside of the classroom. The class will focus on techniques from machine learning and deep learning, including regression, support vector machines (SVMs), neural networks, convolutional neural networks (CNNs), and recurrent neural networks (RNNs). The course alternates between lectures on machine learning theory and discussions with invited speakers, who will challenge students to apply techniques in their social good domains. Students complete weekly coding assignments reinforcing machine learning concepts and applications. Prerequisites: programming experience at the level of CS107, mathematical fluency at the level of CS103, comfort with probability at the level of CS109 (or equivalent). Application required for enrollment.", "courseAttributes": "Terms: Spr | Units: 2 | Grading: Satisfactory/No Credit"}, {"courseTitle": "AI for Social Good", "courseNumber": "CS 21SI:", "courseDescription": "Students will learn about and apply cutting-edge artificial intelligence techniques to real-world social good spaces (such as healthcare, government, education, and environment). Taught jointly by CS+Social Good and the Stanford AI Group, the aim of the class is to empower students to apply these techniques outside of the classroom. The class will focus on techniques from machine learning and deep learning, including regression, support vector machines (SVMs), neural networks, convolutional neural networks (CNNs), and recurrent neural networks (RNNs). The course alternates between lectures on machine learning theory and discussions with invited speakers, who will challenge students to apply techniques in their social good domains. Students complete weekly coding assignments reinforcing machine learning concepts and applications. Prerequisites: programming experience at the level of CS107, mathematical fluency at the level of CS103, comfort with probability at the level of CS109 (or equivalent). Application required for enrollment.", "courseAttributes": "Terms: Spr | Units: 2 | Grading: Satisfactory/No Credit"}, {"courseTitle": "AI for Social Good", "courseNumber": "CS 21SI:", "courseDescription": "Students will learn about and apply cutting-edge artificial intelligence techniques to real-world social good spaces (such as healthcare, government, education, and environment). Taught jointly by CS+Social Good and the Stanford AI Group, the aim of the class is to empower students to apply these techniques outside of the classroom. The class will focus on techniques from machine learning and deep learning, including regression, support vector machines (SVMs), neural networks, convolutional neural networks (CNNs), and recurrent neural networks (RNNs). The course alternates between lectures on machine learning theory and discussions with invited speakers, who will challenge students to apply techniques in their social good domains. Students complete weekly coding assignments reinforcing machine learning concepts and applications. Prerequisites: programming experience at the level of CS107, mathematical fluency at the level of CS103, comfort with probability at the level of CS109 (or equivalent). Application required for enrollment.", "courseAttributes": "Terms: Spr | Units: 2 | Grading: Satisfactory/No Credit"}, {"courseTitle": "AI for Social Good", "courseNumber": "CS 21SI:", "courseDescription": "Students will learn about and apply cutting-edge artificial intelligence techniques to real-world social good spaces (such as healthcare, government, education, and environment). Taught jointly by CS+Social Good and the Stanford AI Group, the aim of the class is to empower students to apply these techniques outside of the classroom. The class will focus on techniques from machine learning and deep learning, including regression, support vector machines (SVMs), neural networks, convolutional neural networks (CNNs), and recurrent neural networks (RNNs). The course alternates between lectures on machine learning theory and discussions with invited speakers, who will challenge students to apply techniques in their social good domains. Students complete weekly coding assignments reinforcing machine learning concepts and applications. Prerequisites: programming experience at the level of CS107, mathematical fluency at the level of CS103, comfort with probability at the level of CS109 (or equivalent). Application required for enrollment.", "courseAttributes": "Terms: Spr | Units: 2 | Grading: Satisfactory/No Credit"}, {"courseTitle": "AI for Social Good", "courseNumber": "CS 21SI:", "courseDescription": "Students will learn about and apply cutting-edge artificial intelligence techniques to real-world social good spaces (such as healthcare, government, education, and environment). Taught jointly by CS+Social Good and the Stanford AI Group, the aim of the class is to empower students to apply these techniques outside of the classroom. The class will focus on techniques from machine learning and deep learning, including regression, support vector machines (SVMs), neural networks, convolutional neural networks (CNNs), and recurrent neural networks (RNNs). The course alternates between lectures on machine learning theory and discussions with invited speakers, who will challenge students to apply techniques in their social good domains. Students complete weekly coding assignments reinforcing machine learning concepts and applications. Prerequisites: programming experience at the level of CS107, mathematical fluency at the level of CS103, comfort with probability at the level of CS109 (or equivalent). Application required for enrollment.", "courseAttributes": "Terms: Spr | Units: 2 | Grading: Satisfactory/No Credit"}, {"courseTitle": "AI for Social Good", "courseNumber": "CS 21SI:", "courseDescription": "Students will learn about and apply cutting-edge artificial intelligence techniques to real-world social good spaces (such as healthcare, government, education, and environment). Taught jointly by CS+Social Good and the Stanford AI Group, the aim of the class is to empower students to apply these techniques outside of the classroom. The class will focus on techniques from machine learning and deep learning, including regression, support vector machines (SVMs), neural networks, convolutional neural networks (CNNs), and recurrent neural networks (RNNs). The course alternates between lectures on machine learning theory and discussions with invited speakers, who will challenge students to apply techniques in their social good domains. Students complete weekly coding assignments reinforcing machine learning concepts and applications. Prerequisites: programming experience at the level of CS107, mathematical fluency at the level of CS103, comfort with probability at the level of CS109 (or equivalent). Application required for enrollment.", "courseAttributes": "Terms: Spr | Units: 2 | Grading: Satisfactory/No Credit"}, {"courseTitle": "AI for Social Good", "courseNumber": "CS 21SI:", "courseDescription": "Students will learn about and apply cutting-edge artificial intelligence techniques to real-world social good spaces (such as healthcare, government, education, and environment). Taught jointly by CS+Social Good and the Stanford AI Group, the aim of the class is to empower students to apply these techniques outside of the classroom. The class will focus on techniques from machine learning and deep learning, including regression, support vector machines (SVMs), neural networks, convolutional neural networks (CNNs), and recurrent neural networks (RNNs). The course alternates between lectures on machine learning theory and discussions with invited speakers, who will challenge students to apply techniques in their social good domains. Students complete weekly coding assignments reinforcing machine learning concepts and applications. Prerequisites: programming experience at the level of CS107, mathematical fluency at the level of CS103, comfort with probability at the level of CS109 (or equivalent). Application required for enrollment.", "courseAttributes": "Terms: Spr | Units: 2 | Grading: Satisfactory/No Credit"}, {"courseTitle": "AI for Social Good", "courseNumber": "CS 21SI:", "courseDescription": "Students will learn about and apply cutting-edge artificial intelligence techniques to real-world social good spaces (such as healthcare, government, education, and environment). Taught jointly by CS+Social Good and the Stanford AI Group, the aim of the class is to empower students to apply these techniques outside of the classroom. The class will focus on techniques from machine learning and deep learning, including regression, support vector machines (SVMs), neural networks, convolutional neural networks (CNNs), and recurrent neural networks (RNNs). The course alternates between lectures on machine learning theory and discussions with invited speakers, who will challenge students to apply techniques in their social good domains. Students complete weekly coding assignments reinforcing machine learning concepts and applications. Prerequisites: programming experience at the level of CS107, mathematical fluency at the level of CS103, comfort with probability at the level of CS109 (or equivalent). Application required for enrollment.", "courseAttributes": "Terms: Spr | Units: 2 | Grading: Satisfactory/No Credit"}, {"courseTitle": "AI for Social Good", "courseNumber": "CS 21SI:", "courseDescription": "Students will learn about and apply cutting-edge artificial intelligence techniques to real-world social good spaces (such as healthcare, government, education, and environment). Taught jointly by CS+Social Good and the Stanford AI Group, the aim of the class is to empower students to apply these techniques outside of the classroom. The class will focus on techniques from machine learning and deep learning, including regression, support vector machines (SVMs), neural networks, convolutional neural networks (CNNs), and recurrent neural networks (RNNs). The course alternates between lectures on machine learning theory and discussions with invited speakers, who will challenge students to apply techniques in their social good domains. Students complete weekly coding assignments reinforcing machine learning concepts and applications. Prerequisites: programming experience at the level of CS107, mathematical fluency at the level of CS103, comfort with probability at the level of CS109 (or equivalent). Application required for enrollment.", "courseAttributes": "Terms: Spr | Units: 2 | Grading: Satisfactory/No Credit"}]}}
{"Dorsa Sadig": {"courses": [{"courseTitle": "Independent Work", "courseNumber": "CS 199:", "courseDescription": "Special study under faculty direction, usually leading to a written report. Letter grade; if not appropriate, enroll in 199P.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Independent Work", "courseNumber": "CS 199:", "courseDescription": "Special study under faculty direction, usually leading to a written report. Letter grade; if not appropriate, enroll in 199P.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Independent Work", "courseNumber": "CS 199:", "courseDescription": "Special study under faculty direction, usually leading to a written report. Letter grade; if not appropriate, enroll in 199P.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Independent Work", "courseNumber": "CS 199:", "courseDescription": "Special study under faculty direction, usually leading to a written report. Letter grade; if not appropriate, enroll in 199P.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Independent Work", "courseNumber": "CS 199:", "courseDescription": "Special study under faculty direction, usually leading to a written report. Letter grade; if not appropriate, enroll in 199P.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Independent Work", "courseNumber": "CS 199:", "courseDescription": "Special study under faculty direction, usually leading to a written report. Letter grade; if not appropriate, enroll in 199P.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Independent Work", "courseNumber": "CS 199:", "courseDescription": "Special study under faculty direction, usually leading to a written report. Letter grade; if not appropriate, enroll in 199P.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Independent Work", "courseNumber": "CS 199:", "courseDescription": "Special study under faculty direction, usually leading to a written report. Letter grade; if not appropriate, enroll in 199P.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Independent Work", "courseNumber": "CS 199:", "courseDescription": "Special study under faculty direction, usually leading to a written report. Letter grade; if not appropriate, enroll in 199P.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Independent Work", "courseNumber": "CS 199:", "courseDescription": "Special study under faculty direction, usually leading to a written report. Letter grade; if not appropriate, enroll in 199P.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}]}}
{"Emma Brunskill": {"courses": [{"courseTitle": "Writing Intensive Senior Project (WIM)", "courseNumber": "CS 191W:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Writing-intensive version of CS191. Register using the section number of an Academic Council member. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr | Units: 3-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Writing Intensive Senior Project (WIM)", "courseNumber": "CS 191W:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Writing-intensive version of CS191. Register using the section number of an Academic Council member. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr | Units: 3-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Writing Intensive Senior Project (WIM)", "courseNumber": "CS 191W:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Writing-intensive version of CS191. Register using the section number of an Academic Council member. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr | Units: 3-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Writing Intensive Senior Project (WIM)", "courseNumber": "CS 191W:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Writing-intensive version of CS191. Register using the section number of an Academic Council member. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr | Units: 3-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Writing Intensive Senior Project (WIM)", "courseNumber": "CS 191W:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Writing-intensive version of CS191. Register using the section number of an Academic Council member. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr | Units: 3-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Writing Intensive Senior Project (WIM)", "courseNumber": "CS 191W:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Writing-intensive version of CS191. Register using the section number of an Academic Council member. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr | Units: 3-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Writing Intensive Senior Project (WIM)", "courseNumber": "CS 191W:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Writing-intensive version of CS191. Register using the section number of an Academic Council member. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr | Units: 3-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Writing Intensive Senior Project (WIM)", "courseNumber": "CS 191W:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Writing-intensive version of CS191. Register using the section number of an Academic Council member. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr | Units: 3-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Writing Intensive Senior Project (WIM)", "courseNumber": "CS 191W:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Writing-intensive version of CS191. Register using the section number of an Academic Council member. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr | Units: 3-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Writing Intensive Senior Project (WIM)", "courseNumber": "CS 191W:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Writing-intensive version of CS191. Register using the section number of an Academic Council member. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr | Units: 3-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Writing Intensive Senior Project (WIM)", "courseNumber": "CS 191W:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Writing-intensive version of CS191. Register using the section number of an Academic Council member. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr | Units: 3-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Writing Intensive Senior Project (WIM)", "courseNumber": "CS 191W:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Writing-intensive version of CS191. Register using the section number of an Academic Council member. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr | Units: 3-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}]}}
{"Ashish Goel": {"courses": [{"courseTitle": "Master's Research", "courseNumber": "CME 291:", "courseDescription": "Students require faculty sponsor. (Staff)", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Master's Research", "courseNumber": "CME 291:", "courseDescription": "Students require faculty sponsor. (Staff)", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Master's Research", "courseNumber": "CME 291:", "courseDescription": "Students require faculty sponsor. (Staff)", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Master's Research", "courseNumber": "CME 291:", "courseDescription": "Students require faculty sponsor. (Staff)", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Master's Research", "courseNumber": "CME 291:", "courseDescription": "Students require faculty sponsor. (Staff)", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Master's Research", "courseNumber": "CME 291:", "courseDescription": "Students require faculty sponsor. (Staff)", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Master's Research", "courseNumber": "CME 291:", "courseDescription": "Students require faculty sponsor. (Staff)", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Master's Research", "courseNumber": "CME 291:", "courseDescription": "Students require faculty sponsor. (Staff)", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Master's Research", "courseNumber": "CME 291:", "courseDescription": "Students require faculty sponsor. (Staff)", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Master's Research", "courseNumber": "CME 291:", "courseDescription": "Students require faculty sponsor. (Staff)", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Master's Research", "courseNumber": "CME 291:", "courseDescription": "Students require faculty sponsor. (Staff)", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Master's Research", "courseNumber": "CME 291:", "courseDescription": "Students require faculty sponsor. (Staff)", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Master's Research", "courseNumber": "CME 291:", "courseDescription": "Students require faculty sponsor. (Staff)", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Master's Research", "courseNumber": "CME 291:", "courseDescription": "Students require faculty sponsor. (Staff)", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Master's Research", "courseNumber": "CME 291:", "courseDescription": "Students require faculty sponsor. (Staff)", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Master's Research", "courseNumber": "CME 291:", "courseDescription": "Students require faculty sponsor. (Staff)", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Master's Research", "courseNumber": "CME 291:", "courseDescription": "Students require faculty sponsor. (Staff)", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Master's Research", "courseNumber": "CME 291:", "courseDescription": "Students require faculty sponsor. (Staff)", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Master's Research", "courseNumber": "CME 291:", "courseDescription": "Students require faculty sponsor. (Staff)", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Master's Research", "courseNumber": "CME 291:", "courseDescription": "Students require faculty sponsor. (Staff)", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Master's Research", "courseNumber": "CME 291:", "courseDescription": "Students require faculty sponsor. (Staff)", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Master's Research", "courseNumber": "CME 291:", "courseDescription": "Students require faculty sponsor. (Staff)", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Master's Research", "courseNumber": "CME 291:", "courseDescription": "Students require faculty sponsor. (Staff)", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Master's Research", "courseNumber": "CME 291:", "courseDescription": "Students require faculty sponsor. (Staff)", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Master's Research", "courseNumber": "CME 291:", "courseDescription": "Students require faculty sponsor. (Staff)", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Master's Research", "courseNumber": "CME 291:", "courseDescription": "Students require faculty sponsor. (Staff)", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Master's Research", "courseNumber": "CME 291:", "courseDescription": "Students require faculty sponsor. (Staff)", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Master's Research", "courseNumber": "CME 291:", "courseDescription": "Students require faculty sponsor. (Staff)", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Master's Research", "courseNumber": "CME 291:", "courseDescription": "Students require faculty sponsor. (Staff)", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Master's Research", "courseNumber": "CME 291:", "courseDescription": "Students require faculty sponsor. (Staff)", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Master's Research", "courseNumber": "CME 291:", "courseDescription": "Students require faculty sponsor. (Staff)", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Master's Research", "courseNumber": "CME 291:", "courseDescription": "Students require faculty sponsor. (Staff)", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Master's Research", "courseNumber": "CME 291:", "courseDescription": "Students require faculty sponsor. (Staff)", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter or Credit/No Credit"}]}}
{"Balaji Prabhakar": {"courses": [{"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}]}}
{"Anshul Kundaje": {"courses": [{"courseTitle": "Deep Learning in Genomics and Biomedicine (BIOMEDIN 273B, CS 273B, GENE 236)", "courseNumber": "BIODS 237:", "courseDescription": "Recent breakthroughs in high-throughput genomic and biomedical data are transforming biological sciences into \"big data\" disciplines. In parallel, progress in deep neural networks are revolutionizing fields such as image recognition, natural language processing and, more broadly, AI. This course explores the exciting intersection between these two advances. The course will start with an introduction to deep learning and overview the relevant background in genomics and high-throughput biotechnology, focusing on the available data and their relevance. It will then cover the ongoing developments in deep learning (supervised, unsupervised and generative models) with the focus on the applications of these methods to biomedical data, which are beginning to produced dramatic results. In addition to predictive modeling, the course emphasizes how to visualize and extract interpretable, biological insights from such models. Recent papers from the literature will be presented and discussed. Students will be introduced to and work with popular deep learning software frameworks. Students will work in groups on a final class project using real world datasets. Prerequisites: College calculus, linear algebra, basic probability and statistics such as CS109, and basic machine learning such as CS229. No prior knowledge of genomics is necessary.", "courseAttributes": "Terms: Aut | Units: 3 | Grading: Medical Option (Med-Ltr-CR/NC)"}, {"courseTitle": "Deep Learning in Genomics and Biomedicine (BIOMEDIN 273B, CS 273B, GENE 236)", "courseNumber": "BIODS 237:", "courseDescription": "Recent breakthroughs in high-throughput genomic and biomedical data are transforming biological sciences into \"big data\" disciplines. In parallel, progress in deep neural networks are revolutionizing fields such as image recognition, natural language processing and, more broadly, AI. This course explores the exciting intersection between these two advances. The course will start with an introduction to deep learning and overview the relevant background in genomics and high-throughput biotechnology, focusing on the available data and their relevance. It will then cover the ongoing developments in deep learning (supervised, unsupervised and generative models) with the focus on the applications of these methods to biomedical data, which are beginning to produced dramatic results. In addition to predictive modeling, the course emphasizes how to visualize and extract interpretable, biological insights from such models. Recent papers from the literature will be presented and discussed. Students will be introduced to and work with popular deep learning software frameworks. Students will work in groups on a final class project using real world datasets. Prerequisites: College calculus, linear algebra, basic probability and statistics such as CS109, and basic machine learning such as CS229. No prior knowledge of genomics is necessary.", "courseAttributes": "Terms: Aut | Units: 3 | Grading: Medical Option (Med-Ltr-CR/NC)"}, {"courseTitle": "Deep Learning in Genomics and Biomedicine (BIOMEDIN 273B, CS 273B, GENE 236)", "courseNumber": "BIODS 237:", "courseDescription": "Recent breakthroughs in high-throughput genomic and biomedical data are transforming biological sciences into \"big data\" disciplines. In parallel, progress in deep neural networks are revolutionizing fields such as image recognition, natural language processing and, more broadly, AI. This course explores the exciting intersection between these two advances. The course will start with an introduction to deep learning and overview the relevant background in genomics and high-throughput biotechnology, focusing on the available data and their relevance. It will then cover the ongoing developments in deep learning (supervised, unsupervised and generative models) with the focus on the applications of these methods to biomedical data, which are beginning to produced dramatic results. In addition to predictive modeling, the course emphasizes how to visualize and extract interpretable, biological insights from such models. Recent papers from the literature will be presented and discussed. Students will be introduced to and work with popular deep learning software frameworks. Students will work in groups on a final class project using real world datasets. Prerequisites: College calculus, linear algebra, basic probability and statistics such as CS109, and basic machine learning such as CS229. No prior knowledge of genomics is necessary.", "courseAttributes": "Terms: Aut | Units: 3 | Grading: Medical Option (Med-Ltr-CR/NC)"}, {"courseTitle": "Deep Learning in Genomics and Biomedicine (BIOMEDIN 273B, CS 273B, GENE 236)", "courseNumber": "BIODS 237:", "courseDescription": "Recent breakthroughs in high-throughput genomic and biomedical data are transforming biological sciences into \"big data\" disciplines. In parallel, progress in deep neural networks are revolutionizing fields such as image recognition, natural language processing and, more broadly, AI. This course explores the exciting intersection between these two advances. The course will start with an introduction to deep learning and overview the relevant background in genomics and high-throughput biotechnology, focusing on the available data and their relevance. It will then cover the ongoing developments in deep learning (supervised, unsupervised and generative models) with the focus on the applications of these methods to biomedical data, which are beginning to produced dramatic results. In addition to predictive modeling, the course emphasizes how to visualize and extract interpretable, biological insights from such models. Recent papers from the literature will be presented and discussed. Students will be introduced to and work with popular deep learning software frameworks. Students will work in groups on a final class project using real world datasets. Prerequisites: College calculus, linear algebra, basic probability and statistics such as CS109, and basic machine learning such as CS229. No prior knowledge of genomics is necessary.", "courseAttributes": "Terms: Aut | Units: 3 | Grading: Medical Option (Med-Ltr-CR/NC)"}, {"courseTitle": "Deep Learning in Genomics and Biomedicine (BIOMEDIN 273B, CS 273B, GENE 236)", "courseNumber": "BIODS 237:", "courseDescription": "Recent breakthroughs in high-throughput genomic and biomedical data are transforming biological sciences into \"big data\" disciplines. In parallel, progress in deep neural networks are revolutionizing fields such as image recognition, natural language processing and, more broadly, AI. This course explores the exciting intersection between these two advances. The course will start with an introduction to deep learning and overview the relevant background in genomics and high-throughput biotechnology, focusing on the available data and their relevance. It will then cover the ongoing developments in deep learning (supervised, unsupervised and generative models) with the focus on the applications of these methods to biomedical data, which are beginning to produced dramatic results. In addition to predictive modeling, the course emphasizes how to visualize and extract interpretable, biological insights from such models. Recent papers from the literature will be presented and discussed. Students will be introduced to and work with popular deep learning software frameworks. Students will work in groups on a final class project using real world datasets. Prerequisites: College calculus, linear algebra, basic probability and statistics such as CS109, and basic machine learning such as CS229. No prior knowledge of genomics is necessary.", "courseAttributes": "Terms: Aut | Units: 3 | Grading: Medical Option (Med-Ltr-CR/NC)"}, {"courseTitle": "Deep Learning in Genomics and Biomedicine (BIOMEDIN 273B, CS 273B, GENE 236)", "courseNumber": "BIODS 237:", "courseDescription": "Recent breakthroughs in high-throughput genomic and biomedical data are transforming biological sciences into \"big data\" disciplines. In parallel, progress in deep neural networks are revolutionizing fields such as image recognition, natural language processing and, more broadly, AI. This course explores the exciting intersection between these two advances. The course will start with an introduction to deep learning and overview the relevant background in genomics and high-throughput biotechnology, focusing on the available data and their relevance. It will then cover the ongoing developments in deep learning (supervised, unsupervised and generative models) with the focus on the applications of these methods to biomedical data, which are beginning to produced dramatic results. In addition to predictive modeling, the course emphasizes how to visualize and extract interpretable, biological insights from such models. Recent papers from the literature will be presented and discussed. Students will be introduced to and work with popular deep learning software frameworks. Students will work in groups on a final class project using real world datasets. Prerequisites: College calculus, linear algebra, basic probability and statistics such as CS109, and basic machine learning such as CS229. No prior knowledge of genomics is necessary.", "courseAttributes": "Terms: Aut | Units: 3 | Grading: Medical Option (Med-Ltr-CR/NC)"}, {"courseTitle": "Deep Learning in Genomics and Biomedicine (BIOMEDIN 273B, CS 273B, GENE 236)", "courseNumber": "BIODS 237:", "courseDescription": "Recent breakthroughs in high-throughput genomic and biomedical data are transforming biological sciences into \"big data\" disciplines. In parallel, progress in deep neural networks are revolutionizing fields such as image recognition, natural language processing and, more broadly, AI. This course explores the exciting intersection between these two advances. The course will start with an introduction to deep learning and overview the relevant background in genomics and high-throughput biotechnology, focusing on the available data and their relevance. It will then cover the ongoing developments in deep learning (supervised, unsupervised and generative models) with the focus on the applications of these methods to biomedical data, which are beginning to produced dramatic results. In addition to predictive modeling, the course emphasizes how to visualize and extract interpretable, biological insights from such models. Recent papers from the literature will be presented and discussed. Students will be introduced to and work with popular deep learning software frameworks. Students will work in groups on a final class project using real world datasets. Prerequisites: College calculus, linear algebra, basic probability and statistics such as CS109, and basic machine learning such as CS229. No prior knowledge of genomics is necessary.", "courseAttributes": "Terms: Aut | Units: 3 | Grading: Medical Option (Med-Ltr-CR/NC)"}, {"courseTitle": "Deep Learning in Genomics and Biomedicine (BIOMEDIN 273B, CS 273B, GENE 236)", "courseNumber": "BIODS 237:", "courseDescription": "Recent breakthroughs in high-throughput genomic and biomedical data are transforming biological sciences into \"big data\" disciplines. In parallel, progress in deep neural networks are revolutionizing fields such as image recognition, natural language processing and, more broadly, AI. This course explores the exciting intersection between these two advances. The course will start with an introduction to deep learning and overview the relevant background in genomics and high-throughput biotechnology, focusing on the available data and their relevance. It will then cover the ongoing developments in deep learning (supervised, unsupervised and generative models) with the focus on the applications of these methods to biomedical data, which are beginning to produced dramatic results. In addition to predictive modeling, the course emphasizes how to visualize and extract interpretable, biological insights from such models. Recent papers from the literature will be presented and discussed. Students will be introduced to and work with popular deep learning software frameworks. Students will work in groups on a final class project using real world datasets. Prerequisites: College calculus, linear algebra, basic probability and statistics such as CS109, and basic machine learning such as CS229. No prior knowledge of genomics is necessary.", "courseAttributes": "Terms: Aut | Units: 3 | Grading: Medical Option (Med-Ltr-CR/NC)"}, {"courseTitle": "Deep Learning in Genomics and Biomedicine (BIOMEDIN 273B, CS 273B, GENE 236)", "courseNumber": "BIODS 237:", "courseDescription": "Recent breakthroughs in high-throughput genomic and biomedical data are transforming biological sciences into \"big data\" disciplines. In parallel, progress in deep neural networks are revolutionizing fields such as image recognition, natural language processing and, more broadly, AI. This course explores the exciting intersection between these two advances. The course will start with an introduction to deep learning and overview the relevant background in genomics and high-throughput biotechnology, focusing on the available data and their relevance. It will then cover the ongoing developments in deep learning (supervised, unsupervised and generative models) with the focus on the applications of these methods to biomedical data, which are beginning to produced dramatic results. In addition to predictive modeling, the course emphasizes how to visualize and extract interpretable, biological insights from such models. Recent papers from the literature will be presented and discussed. Students will be introduced to and work with popular deep learning software frameworks. Students will work in groups on a final class project using real world datasets. Prerequisites: College calculus, linear algebra, basic probability and statistics such as CS109, and basic machine learning such as CS229. No prior knowledge of genomics is necessary.", "courseAttributes": "Terms: Aut | Units: 3 | Grading: Medical Option (Med-Ltr-CR/NC)"}, {"courseTitle": "Deep Learning in Genomics and Biomedicine (BIOMEDIN 273B, CS 273B, GENE 236)", "courseNumber": "BIODS 237:", "courseDescription": "Recent breakthroughs in high-throughput genomic and biomedical data are transforming biological sciences into \"big data\" disciplines. In parallel, progress in deep neural networks are revolutionizing fields such as image recognition, natural language processing and, more broadly, AI. This course explores the exciting intersection between these two advances. The course will start with an introduction to deep learning and overview the relevant background in genomics and high-throughput biotechnology, focusing on the available data and their relevance. It will then cover the ongoing developments in deep learning (supervised, unsupervised and generative models) with the focus on the applications of these methods to biomedical data, which are beginning to produced dramatic results. In addition to predictive modeling, the course emphasizes how to visualize and extract interpretable, biological insights from such models. Recent papers from the literature will be presented and discussed. Students will be introduced to and work with popular deep learning software frameworks. Students will work in groups on a final class project using real world datasets. Prerequisites: College calculus, linear algebra, basic probability and statistics such as CS109, and basic machine learning such as CS229. No prior knowledge of genomics is necessary.", "courseAttributes": "Terms: Aut | Units: 3 | Grading: Medical Option (Med-Ltr-CR/NC)"}, {"courseTitle": "Deep Learning in Genomics and Biomedicine (BIOMEDIN 273B, CS 273B, GENE 236)", "courseNumber": "BIODS 237:", "courseDescription": "Recent breakthroughs in high-throughput genomic and biomedical data are transforming biological sciences into \"big data\" disciplines. In parallel, progress in deep neural networks are revolutionizing fields such as image recognition, natural language processing and, more broadly, AI. This course explores the exciting intersection between these two advances. The course will start with an introduction to deep learning and overview the relevant background in genomics and high-throughput biotechnology, focusing on the available data and their relevance. It will then cover the ongoing developments in deep learning (supervised, unsupervised and generative models) with the focus on the applications of these methods to biomedical data, which are beginning to produced dramatic results. In addition to predictive modeling, the course emphasizes how to visualize and extract interpretable, biological insights from such models. Recent papers from the literature will be presented and discussed. Students will be introduced to and work with popular deep learning software frameworks. Students will work in groups on a final class project using real world datasets. Prerequisites: College calculus, linear algebra, basic probability and statistics such as CS109, and basic machine learning such as CS229. No prior knowledge of genomics is necessary.", "courseAttributes": "Terms: Aut | Units: 3 | Grading: Medical Option (Med-Ltr-CR/NC)"}, {"courseTitle": "Deep Learning in Genomics and Biomedicine (BIOMEDIN 273B, CS 273B, GENE 236)", "courseNumber": "BIODS 237:", "courseDescription": "Recent breakthroughs in high-throughput genomic and biomedical data are transforming biological sciences into \"big data\" disciplines. In parallel, progress in deep neural networks are revolutionizing fields such as image recognition, natural language processing and, more broadly, AI. This course explores the exciting intersection between these two advances. The course will start with an introduction to deep learning and overview the relevant background in genomics and high-throughput biotechnology, focusing on the available data and their relevance. It will then cover the ongoing developments in deep learning (supervised, unsupervised and generative models) with the focus on the applications of these methods to biomedical data, which are beginning to produced dramatic results. In addition to predictive modeling, the course emphasizes how to visualize and extract interpretable, biological insights from such models. Recent papers from the literature will be presented and discussed. Students will be introduced to and work with popular deep learning software frameworks. Students will work in groups on a final class project using real world datasets. Prerequisites: College calculus, linear algebra, basic probability and statistics such as CS109, and basic machine learning such as CS229. No prior knowledge of genomics is necessary.", "courseAttributes": "Terms: Aut | Units: 3 | Grading: Medical Option (Med-Ltr-CR/NC)"}, {"courseTitle": "Deep Learning in Genomics and Biomedicine (BIOMEDIN 273B, CS 273B, GENE 236)", "courseNumber": "BIODS 237:", "courseDescription": "Recent breakthroughs in high-throughput genomic and biomedical data are transforming biological sciences into \"big data\" disciplines. In parallel, progress in deep neural networks are revolutionizing fields such as image recognition, natural language processing and, more broadly, AI. This course explores the exciting intersection between these two advances. The course will start with an introduction to deep learning and overview the relevant background in genomics and high-throughput biotechnology, focusing on the available data and their relevance. It will then cover the ongoing developments in deep learning (supervised, unsupervised and generative models) with the focus on the applications of these methods to biomedical data, which are beginning to produced dramatic results. In addition to predictive modeling, the course emphasizes how to visualize and extract interpretable, biological insights from such models. Recent papers from the literature will be presented and discussed. Students will be introduced to and work with popular deep learning software frameworks. Students will work in groups on a final class project using real world datasets. Prerequisites: College calculus, linear algebra, basic probability and statistics such as CS109, and basic machine learning such as CS229. No prior knowledge of genomics is necessary.", "courseAttributes": "Terms: Aut | Units: 3 | Grading: Medical Option (Med-Ltr-CR/NC)"}, {"courseTitle": "Deep Learning in Genomics and Biomedicine (BIOMEDIN 273B, CS 273B, GENE 236)", "courseNumber": "BIODS 237:", "courseDescription": "Recent breakthroughs in high-throughput genomic and biomedical data are transforming biological sciences into \"big data\" disciplines. In parallel, progress in deep neural networks are revolutionizing fields such as image recognition, natural language processing and, more broadly, AI. This course explores the exciting intersection between these two advances. The course will start with an introduction to deep learning and overview the relevant background in genomics and high-throughput biotechnology, focusing on the available data and their relevance. It will then cover the ongoing developments in deep learning (supervised, unsupervised and generative models) with the focus on the applications of these methods to biomedical data, which are beginning to produced dramatic results. In addition to predictive modeling, the course emphasizes how to visualize and extract interpretable, biological insights from such models. Recent papers from the literature will be presented and discussed. Students will be introduced to and work with popular deep learning software frameworks. Students will work in groups on a final class project using real world datasets. Prerequisites: College calculus, linear algebra, basic probability and statistics such as CS109, and basic machine learning such as CS229. No prior knowledge of genomics is necessary.", "courseAttributes": "Terms: Aut | Units: 3 | Grading: Medical Option (Med-Ltr-CR/NC)"}, {"courseTitle": "Deep Learning in Genomics and Biomedicine (BIOMEDIN 273B, CS 273B, GENE 236)", "courseNumber": "BIODS 237:", "courseDescription": "Recent breakthroughs in high-throughput genomic and biomedical data are transforming biological sciences into \"big data\" disciplines. In parallel, progress in deep neural networks are revolutionizing fields such as image recognition, natural language processing and, more broadly, AI. This course explores the exciting intersection between these two advances. The course will start with an introduction to deep learning and overview the relevant background in genomics and high-throughput biotechnology, focusing on the available data and their relevance. It will then cover the ongoing developments in deep learning (supervised, unsupervised and generative models) with the focus on the applications of these methods to biomedical data, which are beginning to produced dramatic results. In addition to predictive modeling, the course emphasizes how to visualize and extract interpretable, biological insights from such models. Recent papers from the literature will be presented and discussed. Students will be introduced to and work with popular deep learning software frameworks. Students will work in groups on a final class project using real world datasets. Prerequisites: College calculus, linear algebra, basic probability and statistics such as CS109, and basic machine learning such as CS229. No prior knowledge of genomics is necessary.", "courseAttributes": "Terms: Aut | Units: 3 | Grading: Medical Option (Med-Ltr-CR/NC)"}, {"courseTitle": "Deep Learning in Genomics and Biomedicine (BIOMEDIN 273B, CS 273B, GENE 236)", "courseNumber": "BIODS 237:", "courseDescription": "Recent breakthroughs in high-throughput genomic and biomedical data are transforming biological sciences into \"big data\" disciplines. In parallel, progress in deep neural networks are revolutionizing fields such as image recognition, natural language processing and, more broadly, AI. This course explores the exciting intersection between these two advances. The course will start with an introduction to deep learning and overview the relevant background in genomics and high-throughput biotechnology, focusing on the available data and their relevance. It will then cover the ongoing developments in deep learning (supervised, unsupervised and generative models) with the focus on the applications of these methods to biomedical data, which are beginning to produced dramatic results. In addition to predictive modeling, the course emphasizes how to visualize and extract interpretable, biological insights from such models. Recent papers from the literature will be presented and discussed. Students will be introduced to and work with popular deep learning software frameworks. Students will work in groups on a final class project using real world datasets. Prerequisites: College calculus, linear algebra, basic probability and statistics such as CS109, and basic machine learning such as CS229. No prior knowledge of genomics is necessary.", "courseAttributes": "Terms: Aut | Units: 3 | Grading: Medical Option (Med-Ltr-CR/NC)"}, {"courseTitle": "Deep Learning in Genomics and Biomedicine (BIOMEDIN 273B, CS 273B, GENE 236)", "courseNumber": "BIODS 237:", "courseDescription": "Recent breakthroughs in high-throughput genomic and biomedical data are transforming biological sciences into \"big data\" disciplines. In parallel, progress in deep neural networks are revolutionizing fields such as image recognition, natural language processing and, more broadly, AI. This course explores the exciting intersection between these two advances. The course will start with an introduction to deep learning and overview the relevant background in genomics and high-throughput biotechnology, focusing on the available data and their relevance. It will then cover the ongoing developments in deep learning (supervised, unsupervised and generative models) with the focus on the applications of these methods to biomedical data, which are beginning to produced dramatic results. In addition to predictive modeling, the course emphasizes how to visualize and extract interpretable, biological insights from such models. Recent papers from the literature will be presented and discussed. Students will be introduced to and work with popular deep learning software frameworks. Students will work in groups on a final class project using real world datasets. Prerequisites: College calculus, linear algebra, basic probability and statistics such as CS109, and basic machine learning such as CS229. No prior knowledge of genomics is necessary.", "courseAttributes": "Terms: Aut | Units: 3 | Grading: Medical Option (Med-Ltr-CR/NC)"}, {"courseTitle": "Deep Learning in Genomics and Biomedicine (BIOMEDIN 273B, CS 273B, GENE 236)", "courseNumber": "BIODS 237:", "courseDescription": "Recent breakthroughs in high-throughput genomic and biomedical data are transforming biological sciences into \"big data\" disciplines. In parallel, progress in deep neural networks are revolutionizing fields such as image recognition, natural language processing and, more broadly, AI. This course explores the exciting intersection between these two advances. The course will start with an introduction to deep learning and overview the relevant background in genomics and high-throughput biotechnology, focusing on the available data and their relevance. It will then cover the ongoing developments in deep learning (supervised, unsupervised and generative models) with the focus on the applications of these methods to biomedical data, which are beginning to produced dramatic results. In addition to predictive modeling, the course emphasizes how to visualize and extract interpretable, biological insights from such models. Recent papers from the literature will be presented and discussed. Students will be introduced to and work with popular deep learning software frameworks. Students will work in groups on a final class project using real world datasets. Prerequisites: College calculus, linear algebra, basic probability and statistics such as CS109, and basic machine learning such as CS229. No prior knowledge of genomics is necessary.", "courseAttributes": "Terms: Aut | Units: 3 | Grading: Medical Option (Med-Ltr-CR/NC)"}, {"courseTitle": "Deep Learning in Genomics and Biomedicine (BIOMEDIN 273B, CS 273B, GENE 236)", "courseNumber": "BIODS 237:", "courseDescription": "Recent breakthroughs in high-throughput genomic and biomedical data are transforming biological sciences into \"big data\" disciplines. In parallel, progress in deep neural networks are revolutionizing fields such as image recognition, natural language processing and, more broadly, AI. This course explores the exciting intersection between these two advances. The course will start with an introduction to deep learning and overview the relevant background in genomics and high-throughput biotechnology, focusing on the available data and their relevance. It will then cover the ongoing developments in deep learning (supervised, unsupervised and generative models) with the focus on the applications of these methods to biomedical data, which are beginning to produced dramatic results. In addition to predictive modeling, the course emphasizes how to visualize and extract interpretable, biological insights from such models. Recent papers from the literature will be presented and discussed. Students will be introduced to and work with popular deep learning software frameworks. Students will work in groups on a final class project using real world datasets. Prerequisites: College calculus, linear algebra, basic probability and statistics such as CS109, and basic machine learning such as CS229. No prior knowledge of genomics is necessary.", "courseAttributes": "Terms: Aut | Units: 3 | Grading: Medical Option (Med-Ltr-CR/NC)"}, {"courseTitle": "Deep Learning in Genomics and Biomedicine (BIOMEDIN 273B, CS 273B, GENE 236)", "courseNumber": "BIODS 237:", "courseDescription": "Recent breakthroughs in high-throughput genomic and biomedical data are transforming biological sciences into \"big data\" disciplines. In parallel, progress in deep neural networks are revolutionizing fields such as image recognition, natural language processing and, more broadly, AI. This course explores the exciting intersection between these two advances. The course will start with an introduction to deep learning and overview the relevant background in genomics and high-throughput biotechnology, focusing on the available data and their relevance. It will then cover the ongoing developments in deep learning (supervised, unsupervised and generative models) with the focus on the applications of these methods to biomedical data, which are beginning to produced dramatic results. In addition to predictive modeling, the course emphasizes how to visualize and extract interpretable, biological insights from such models. Recent papers from the literature will be presented and discussed. Students will be introduced to and work with popular deep learning software frameworks. Students will work in groups on a final class project using real world datasets. Prerequisites: College calculus, linear algebra, basic probability and statistics such as CS109, and basic machine learning such as CS229. No prior knowledge of genomics is necessary.", "courseAttributes": "Terms: Aut | Units: 3 | Grading: Medical Option (Med-Ltr-CR/NC)"}, {"courseTitle": "Deep Learning in Genomics and Biomedicine (BIOMEDIN 273B, CS 273B, GENE 236)", "courseNumber": "BIODS 237:", "courseDescription": "Recent breakthroughs in high-throughput genomic and biomedical data are transforming biological sciences into \"big data\" disciplines. In parallel, progress in deep neural networks are revolutionizing fields such as image recognition, natural language processing and, more broadly, AI. This course explores the exciting intersection between these two advances. The course will start with an introduction to deep learning and overview the relevant background in genomics and high-throughput biotechnology, focusing on the available data and their relevance. It will then cover the ongoing developments in deep learning (supervised, unsupervised and generative models) with the focus on the applications of these methods to biomedical data, which are beginning to produced dramatic results. In addition to predictive modeling, the course emphasizes how to visualize and extract interpretable, biological insights from such models. Recent papers from the literature will be presented and discussed. Students will be introduced to and work with popular deep learning software frameworks. Students will work in groups on a final class project using real world datasets. Prerequisites: College calculus, linear algebra, basic probability and statistics such as CS109, and basic machine learning such as CS229. No prior knowledge of genomics is necessary.", "courseAttributes": "Terms: Aut | Units: 3 | Grading: Medical Option (Med-Ltr-CR/NC)"}, {"courseTitle": "Deep Learning in Genomics and Biomedicine (BIOMEDIN 273B, CS 273B, GENE 236)", "courseNumber": "BIODS 237:", "courseDescription": "Recent breakthroughs in high-throughput genomic and biomedical data are transforming biological sciences into \"big data\" disciplines. In parallel, progress in deep neural networks are revolutionizing fields such as image recognition, natural language processing and, more broadly, AI. This course explores the exciting intersection between these two advances. The course will start with an introduction to deep learning and overview the relevant background in genomics and high-throughput biotechnology, focusing on the available data and their relevance. It will then cover the ongoing developments in deep learning (supervised, unsupervised and generative models) with the focus on the applications of these methods to biomedical data, which are beginning to produced dramatic results. In addition to predictive modeling, the course emphasizes how to visualize and extract interpretable, biological insights from such models. Recent papers from the literature will be presented and discussed. Students will be introduced to and work with popular deep learning software frameworks. Students will work in groups on a final class project using real world datasets. Prerequisites: College calculus, linear algebra, basic probability and statistics such as CS109, and basic machine learning such as CS229. No prior knowledge of genomics is necessary.", "courseAttributes": "Terms: Aut | Units: 3 | Grading: Medical Option (Med-Ltr-CR/NC)"}, {"courseTitle": "Deep Learning in Genomics and Biomedicine (BIOMEDIN 273B, CS 273B, GENE 236)", "courseNumber": "BIODS 237:", "courseDescription": "Recent breakthroughs in high-throughput genomic and biomedical data are transforming biological sciences into \"big data\" disciplines. In parallel, progress in deep neural networks are revolutionizing fields such as image recognition, natural language processing and, more broadly, AI. This course explores the exciting intersection between these two advances. The course will start with an introduction to deep learning and overview the relevant background in genomics and high-throughput biotechnology, focusing on the available data and their relevance. It will then cover the ongoing developments in deep learning (supervised, unsupervised and generative models) with the focus on the applications of these methods to biomedical data, which are beginning to produced dramatic results. In addition to predictive modeling, the course emphasizes how to visualize and extract interpretable, biological insights from such models. Recent papers from the literature will be presented and discussed. Students will be introduced to and work with popular deep learning software frameworks. Students will work in groups on a final class project using real world datasets. Prerequisites: College calculus, linear algebra, basic probability and statistics such as CS109, and basic machine learning such as CS229. No prior knowledge of genomics is necessary.", "courseAttributes": "Terms: Aut | Units: 3 | Grading: Medical Option (Med-Ltr-CR/NC)"}, {"courseTitle": "Deep Learning in Genomics and Biomedicine (BIOMEDIN 273B, CS 273B, GENE 236)", "courseNumber": "BIODS 237:", "courseDescription": "Recent breakthroughs in high-throughput genomic and biomedical data are transforming biological sciences into \"big data\" disciplines. In parallel, progress in deep neural networks are revolutionizing fields such as image recognition, natural language processing and, more broadly, AI. This course explores the exciting intersection between these two advances. The course will start with an introduction to deep learning and overview the relevant background in genomics and high-throughput biotechnology, focusing on the available data and their relevance. It will then cover the ongoing developments in deep learning (supervised, unsupervised and generative models) with the focus on the applications of these methods to biomedical data, which are beginning to produced dramatic results. In addition to predictive modeling, the course emphasizes how to visualize and extract interpretable, biological insights from such models. Recent papers from the literature will be presented and discussed. Students will be introduced to and work with popular deep learning software frameworks. Students will work in groups on a final class project using real world datasets. Prerequisites: College calculus, linear algebra, basic probability and statistics such as CS109, and basic machine learning such as CS229. No prior knowledge of genomics is necessary.", "courseAttributes": "Terms: Aut | Units: 3 | Grading: Medical Option (Med-Ltr-CR/NC)"}, {"courseTitle": "Deep Learning in Genomics and Biomedicine (BIOMEDIN 273B, CS 273B, GENE 236)", "courseNumber": "BIODS 237:", "courseDescription": "Recent breakthroughs in high-throughput genomic and biomedical data are transforming biological sciences into \"big data\" disciplines. In parallel, progress in deep neural networks are revolutionizing fields such as image recognition, natural language processing and, more broadly, AI. This course explores the exciting intersection between these two advances. The course will start with an introduction to deep learning and overview the relevant background in genomics and high-throughput biotechnology, focusing on the available data and their relevance. It will then cover the ongoing developments in deep learning (supervised, unsupervised and generative models) with the focus on the applications of these methods to biomedical data, which are beginning to produced dramatic results. In addition to predictive modeling, the course emphasizes how to visualize and extract interpretable, biological insights from such models. Recent papers from the literature will be presented and discussed. Students will be introduced to and work with popular deep learning software frameworks. Students will work in groups on a final class project using real world datasets. Prerequisites: College calculus, linear algebra, basic probability and statistics such as CS109, and basic machine learning such as CS229. No prior knowledge of genomics is necessary.", "courseAttributes": "Terms: Aut | Units: 3 | Grading: Medical Option (Med-Ltr-CR/NC)"}, {"courseTitle": "Deep Learning in Genomics and Biomedicine (BIOMEDIN 273B, CS 273B, GENE 236)", "courseNumber": "BIODS 237:", "courseDescription": "Recent breakthroughs in high-throughput genomic and biomedical data are transforming biological sciences into \"big data\" disciplines. In parallel, progress in deep neural networks are revolutionizing fields such as image recognition, natural language processing and, more broadly, AI. This course explores the exciting intersection between these two advances. The course will start with an introduction to deep learning and overview the relevant background in genomics and high-throughput biotechnology, focusing on the available data and their relevance. It will then cover the ongoing developments in deep learning (supervised, unsupervised and generative models) with the focus on the applications of these methods to biomedical data, which are beginning to produced dramatic results. In addition to predictive modeling, the course emphasizes how to visualize and extract interpretable, biological insights from such models. Recent papers from the literature will be presented and discussed. Students will be introduced to and work with popular deep learning software frameworks. Students will work in groups on a final class project using real world datasets. Prerequisites: College calculus, linear algebra, basic probability and statistics such as CS109, and basic machine learning such as CS229. No prior knowledge of genomics is necessary.", "courseAttributes": "Terms: Aut | Units: 3 | Grading: Medical Option (Med-Ltr-CR/NC)"}, {"courseTitle": "Deep Learning in Genomics and Biomedicine (BIOMEDIN 273B, CS 273B, GENE 236)", "courseNumber": "BIODS 237:", "courseDescription": "Recent breakthroughs in high-throughput genomic and biomedical data are transforming biological sciences into \"big data\" disciplines. In parallel, progress in deep neural networks are revolutionizing fields such as image recognition, natural language processing and, more broadly, AI. This course explores the exciting intersection between these two advances. The course will start with an introduction to deep learning and overview the relevant background in genomics and high-throughput biotechnology, focusing on the available data and their relevance. It will then cover the ongoing developments in deep learning (supervised, unsupervised and generative models) with the focus on the applications of these methods to biomedical data, which are beginning to produced dramatic results. In addition to predictive modeling, the course emphasizes how to visualize and extract interpretable, biological insights from such models. Recent papers from the literature will be presented and discussed. Students will be introduced to and work with popular deep learning software frameworks. Students will work in groups on a final class project using real world datasets. Prerequisites: College calculus, linear algebra, basic probability and statistics such as CS109, and basic machine learning such as CS229. No prior knowledge of genomics is necessary.", "courseAttributes": "Terms: Aut | Units: 3 | Grading: Medical Option (Med-Ltr-CR/NC)"}, {"courseTitle": "Deep Learning in Genomics and Biomedicine (BIOMEDIN 273B, CS 273B, GENE 236)", "courseNumber": "BIODS 237:", "courseDescription": "Recent breakthroughs in high-throughput genomic and biomedical data are transforming biological sciences into \"big data\" disciplines. In parallel, progress in deep neural networks are revolutionizing fields such as image recognition, natural language processing and, more broadly, AI. This course explores the exciting intersection between these two advances. The course will start with an introduction to deep learning and overview the relevant background in genomics and high-throughput biotechnology, focusing on the available data and their relevance. It will then cover the ongoing developments in deep learning (supervised, unsupervised and generative models) with the focus on the applications of these methods to biomedical data, which are beginning to produced dramatic results. In addition to predictive modeling, the course emphasizes how to visualize and extract interpretable, biological insights from such models. Recent papers from the literature will be presented and discussed. Students will be introduced to and work with popular deep learning software frameworks. Students will work in groups on a final class project using real world datasets. Prerequisites: College calculus, linear algebra, basic probability and statistics such as CS109, and basic machine learning such as CS229. No prior knowledge of genomics is necessary.", "courseAttributes": "Terms: Aut | Units: 3 | Grading: Medical Option (Med-Ltr-CR/NC)"}, {"courseTitle": "Deep Learning in Genomics and Biomedicine (BIOMEDIN 273B, CS 273B, GENE 236)", "courseNumber": "BIODS 237:", "courseDescription": "Recent breakthroughs in high-throughput genomic and biomedical data are transforming biological sciences into \"big data\" disciplines. In parallel, progress in deep neural networks are revolutionizing fields such as image recognition, natural language processing and, more broadly, AI. This course explores the exciting intersection between these two advances. The course will start with an introduction to deep learning and overview the relevant background in genomics and high-throughput biotechnology, focusing on the available data and their relevance. It will then cover the ongoing developments in deep learning (supervised, unsupervised and generative models) with the focus on the applications of these methods to biomedical data, which are beginning to produced dramatic results. In addition to predictive modeling, the course emphasizes how to visualize and extract interpretable, biological insights from such models. Recent papers from the literature will be presented and discussed. Students will be introduced to and work with popular deep learning software frameworks. Students will work in groups on a final class project using real world datasets. Prerequisites: College calculus, linear algebra, basic probability and statistics such as CS109, and basic machine learning such as CS229. No prior knowledge of genomics is necessary.", "courseAttributes": "Terms: Aut | Units: 3 | Grading: Medical Option (Med-Ltr-CR/NC)"}, {"courseTitle": "Deep Learning in Genomics and Biomedicine (BIOMEDIN 273B, CS 273B, GENE 236)", "courseNumber": "BIODS 237:", "courseDescription": "Recent breakthroughs in high-throughput genomic and biomedical data are transforming biological sciences into \"big data\" disciplines. In parallel, progress in deep neural networks are revolutionizing fields such as image recognition, natural language processing and, more broadly, AI. This course explores the exciting intersection between these two advances. The course will start with an introduction to deep learning and overview the relevant background in genomics and high-throughput biotechnology, focusing on the available data and their relevance. It will then cover the ongoing developments in deep learning (supervised, unsupervised and generative models) with the focus on the applications of these methods to biomedical data, which are beginning to produced dramatic results. In addition to predictive modeling, the course emphasizes how to visualize and extract interpretable, biological insights from such models. Recent papers from the literature will be presented and discussed. Students will be introduced to and work with popular deep learning software frameworks. Students will work in groups on a final class project using real world datasets. Prerequisites: College calculus, linear algebra, basic probability and statistics such as CS109, and basic machine learning such as CS229. No prior knowledge of genomics is necessary.", "courseAttributes": "Terms: Aut | Units: 3 | Grading: Medical Option (Med-Ltr-CR/NC)"}, {"courseTitle": "Deep Learning in Genomics and Biomedicine (BIOMEDIN 273B, CS 273B, GENE 236)", "courseNumber": "BIODS 237:", "courseDescription": "Recent breakthroughs in high-throughput genomic and biomedical data are transforming biological sciences into \"big data\" disciplines. In parallel, progress in deep neural networks are revolutionizing fields such as image recognition, natural language processing and, more broadly, AI. This course explores the exciting intersection between these two advances. The course will start with an introduction to deep learning and overview the relevant background in genomics and high-throughput biotechnology, focusing on the available data and their relevance. It will then cover the ongoing developments in deep learning (supervised, unsupervised and generative models) with the focus on the applications of these methods to biomedical data, which are beginning to produced dramatic results. In addition to predictive modeling, the course emphasizes how to visualize and extract interpretable, biological insights from such models. Recent papers from the literature will be presented and discussed. Students will be introduced to and work with popular deep learning software frameworks. Students will work in groups on a final class project using real world datasets. Prerequisites: College calculus, linear algebra, basic probability and statistics such as CS109, and basic machine learning such as CS229. No prior knowledge of genomics is necessary.", "courseAttributes": "Terms: Aut | Units: 3 | Grading: Medical Option (Med-Ltr-CR/NC)"}, {"courseTitle": "Deep Learning in Genomics and Biomedicine (BIOMEDIN 273B, CS 273B, GENE 236)", "courseNumber": "BIODS 237:", "courseDescription": "Recent breakthroughs in high-throughput genomic and biomedical data are transforming biological sciences into \"big data\" disciplines. In parallel, progress in deep neural networks are revolutionizing fields such as image recognition, natural language processing and, more broadly, AI. This course explores the exciting intersection between these two advances. The course will start with an introduction to deep learning and overview the relevant background in genomics and high-throughput biotechnology, focusing on the available data and their relevance. It will then cover the ongoing developments in deep learning (supervised, unsupervised and generative models) with the focus on the applications of these methods to biomedical data, which are beginning to produced dramatic results. In addition to predictive modeling, the course emphasizes how to visualize and extract interpretable, biological insights from such models. Recent papers from the literature will be presented and discussed. Students will be introduced to and work with popular deep learning software frameworks. Students will work in groups on a final class project using real world datasets. Prerequisites: College calculus, linear algebra, basic probability and statistics such as CS109, and basic machine learning such as CS229. No prior knowledge of genomics is necessary.", "courseAttributes": "Terms: Aut | Units: 3 | Grading: Medical Option (Med-Ltr-CR/NC)"}, {"courseTitle": "Deep Learning in Genomics and Biomedicine (BIOMEDIN 273B, CS 273B, GENE 236)", "courseNumber": "BIODS 237:", "courseDescription": "Recent breakthroughs in high-throughput genomic and biomedical data are transforming biological sciences into \"big data\" disciplines. In parallel, progress in deep neural networks are revolutionizing fields such as image recognition, natural language processing and, more broadly, AI. This course explores the exciting intersection between these two advances. The course will start with an introduction to deep learning and overview the relevant background in genomics and high-throughput biotechnology, focusing on the available data and their relevance. It will then cover the ongoing developments in deep learning (supervised, unsupervised and generative models) with the focus on the applications of these methods to biomedical data, which are beginning to produced dramatic results. In addition to predictive modeling, the course emphasizes how to visualize and extract interpretable, biological insights from such models. Recent papers from the literature will be presented and discussed. Students will be introduced to and work with popular deep learning software frameworks. Students will work in groups on a final class project using real world datasets. Prerequisites: College calculus, linear algebra, basic probability and statistics such as CS109, and basic machine learning such as CS229. No prior knowledge of genomics is necessary.", "courseAttributes": "Terms: Aut | Units: 3 | Grading: Medical Option (Med-Ltr-CR/NC)"}, {"courseTitle": "Deep Learning in Genomics and Biomedicine (BIOMEDIN 273B, CS 273B, GENE 236)", "courseNumber": "BIODS 237:", "courseDescription": "Recent breakthroughs in high-throughput genomic and biomedical data are transforming biological sciences into \"big data\" disciplines. In parallel, progress in deep neural networks are revolutionizing fields such as image recognition, natural language processing and, more broadly, AI. This course explores the exciting intersection between these two advances. The course will start with an introduction to deep learning and overview the relevant background in genomics and high-throughput biotechnology, focusing on the available data and their relevance. It will then cover the ongoing developments in deep learning (supervised, unsupervised and generative models) with the focus on the applications of these methods to biomedical data, which are beginning to produced dramatic results. In addition to predictive modeling, the course emphasizes how to visualize and extract interpretable, biological insights from such models. Recent papers from the literature will be presented and discussed. Students will be introduced to and work with popular deep learning software frameworks. Students will work in groups on a final class project using real world datasets. Prerequisites: College calculus, linear algebra, basic probability and statistics such as CS109, and basic machine learning such as CS229. No prior knowledge of genomics is necessary.", "courseAttributes": "Terms: Aut | Units: 3 | Grading: Medical Option (Med-Ltr-CR/NC)"}, {"courseTitle": "Deep Learning in Genomics and Biomedicine (BIOMEDIN 273B, CS 273B, GENE 236)", "courseNumber": "BIODS 237:", "courseDescription": "Recent breakthroughs in high-throughput genomic and biomedical data are transforming biological sciences into \"big data\" disciplines. In parallel, progress in deep neural networks are revolutionizing fields such as image recognition, natural language processing and, more broadly, AI. This course explores the exciting intersection between these two advances. The course will start with an introduction to deep learning and overview the relevant background in genomics and high-throughput biotechnology, focusing on the available data and their relevance. It will then cover the ongoing developments in deep learning (supervised, unsupervised and generative models) with the focus on the applications of these methods to biomedical data, which are beginning to produced dramatic results. In addition to predictive modeling, the course emphasizes how to visualize and extract interpretable, biological insights from such models. Recent papers from the literature will be presented and discussed. Students will be introduced to and work with popular deep learning software frameworks. Students will work in groups on a final class project using real world datasets. Prerequisites: College calculus, linear algebra, basic probability and statistics such as CS109, and basic machine learning such as CS229. No prior knowledge of genomics is necessary.", "courseAttributes": "Terms: Aut | Units: 3 | Grading: Medical Option (Med-Ltr-CR/NC)"}, {"courseTitle": "Deep Learning in Genomics and Biomedicine (BIOMEDIN 273B, CS 273B, GENE 236)", "courseNumber": "BIODS 237:", "courseDescription": "Recent breakthroughs in high-throughput genomic and biomedical data are transforming biological sciences into \"big data\" disciplines. In parallel, progress in deep neural networks are revolutionizing fields such as image recognition, natural language processing and, more broadly, AI. This course explores the exciting intersection between these two advances. The course will start with an introduction to deep learning and overview the relevant background in genomics and high-throughput biotechnology, focusing on the available data and their relevance. It will then cover the ongoing developments in deep learning (supervised, unsupervised and generative models) with the focus on the applications of these methods to biomedical data, which are beginning to produced dramatic results. In addition to predictive modeling, the course emphasizes how to visualize and extract interpretable, biological insights from such models. Recent papers from the literature will be presented and discussed. Students will be introduced to and work with popular deep learning software frameworks. Students will work in groups on a final class project using real world datasets. Prerequisites: College calculus, linear algebra, basic probability and statistics such as CS109, and basic machine learning such as CS229. No prior knowledge of genomics is necessary.", "courseAttributes": "Terms: Aut | Units: 3 | Grading: Medical Option (Med-Ltr-CR/NC)"}, {"courseTitle": "Deep Learning in Genomics and Biomedicine (BIOMEDIN 273B, CS 273B, GENE 236)", "courseNumber": "BIODS 237:", "courseDescription": "Recent breakthroughs in high-throughput genomic and biomedical data are transforming biological sciences into \"big data\" disciplines. In parallel, progress in deep neural networks are revolutionizing fields such as image recognition, natural language processing and, more broadly, AI. This course explores the exciting intersection between these two advances. The course will start with an introduction to deep learning and overview the relevant background in genomics and high-throughput biotechnology, focusing on the available data and their relevance. It will then cover the ongoing developments in deep learning (supervised, unsupervised and generative models) with the focus on the applications of these methods to biomedical data, which are beginning to produced dramatic results. In addition to predictive modeling, the course emphasizes how to visualize and extract interpretable, biological insights from such models. Recent papers from the literature will be presented and discussed. Students will be introduced to and work with popular deep learning software frameworks. Students will work in groups on a final class project using real world datasets. Prerequisites: College calculus, linear algebra, basic probability and statistics such as CS109, and basic machine learning such as CS229. No prior knowledge of genomics is necessary.", "courseAttributes": "Terms: Aut | Units: 3 | Grading: Medical Option (Med-Ltr-CR/NC)"}, {"courseTitle": "Deep Learning in Genomics and Biomedicine (BIOMEDIN 273B, CS 273B, GENE 236)", "courseNumber": "BIODS 237:", "courseDescription": "Recent breakthroughs in high-throughput genomic and biomedical data are transforming biological sciences into \"big data\" disciplines. In parallel, progress in deep neural networks are revolutionizing fields such as image recognition, natural language processing and, more broadly, AI. This course explores the exciting intersection between these two advances. The course will start with an introduction to deep learning and overview the relevant background in genomics and high-throughput biotechnology, focusing on the available data and their relevance. It will then cover the ongoing developments in deep learning (supervised, unsupervised and generative models) with the focus on the applications of these methods to biomedical data, which are beginning to produced dramatic results. In addition to predictive modeling, the course emphasizes how to visualize and extract interpretable, biological insights from such models. Recent papers from the literature will be presented and discussed. Students will be introduced to and work with popular deep learning software frameworks. Students will work in groups on a final class project using real world datasets. Prerequisites: College calculus, linear algebra, basic probability and statistics such as CS109, and basic machine learning such as CS229. No prior knowledge of genomics is necessary.", "courseAttributes": "Terms: Aut | Units: 3 | Grading: Medical Option (Med-Ltr-CR/NC)"}, {"courseTitle": "Deep Learning in Genomics and Biomedicine (BIOMEDIN 273B, CS 273B, GENE 236)", "courseNumber": "BIODS 237:", "courseDescription": "Recent breakthroughs in high-throughput genomic and biomedical data are transforming biological sciences into \"big data\" disciplines. In parallel, progress in deep neural networks are revolutionizing fields such as image recognition, natural language processing and, more broadly, AI. This course explores the exciting intersection between these two advances. The course will start with an introduction to deep learning and overview the relevant background in genomics and high-throughput biotechnology, focusing on the available data and their relevance. It will then cover the ongoing developments in deep learning (supervised, unsupervised and generative models) with the focus on the applications of these methods to biomedical data, which are beginning to produced dramatic results. In addition to predictive modeling, the course emphasizes how to visualize and extract interpretable, biological insights from such models. Recent papers from the literature will be presented and discussed. Students will be introduced to and work with popular deep learning software frameworks. Students will work in groups on a final class project using real world datasets. Prerequisites: College calculus, linear algebra, basic probability and statistics such as CS109, and basic machine learning such as CS229. No prior knowledge of genomics is necessary.", "courseAttributes": "Terms: Aut | Units: 3 | Grading: Medical Option (Med-Ltr-CR/NC)"}, {"courseTitle": "Deep Learning in Genomics and Biomedicine (BIOMEDIN 273B, CS 273B, GENE 236)", "courseNumber": "BIODS 237:", "courseDescription": "Recent breakthroughs in high-throughput genomic and biomedical data are transforming biological sciences into \"big data\" disciplines. In parallel, progress in deep neural networks are revolutionizing fields such as image recognition, natural language processing and, more broadly, AI. This course explores the exciting intersection between these two advances. The course will start with an introduction to deep learning and overview the relevant background in genomics and high-throughput biotechnology, focusing on the available data and their relevance. It will then cover the ongoing developments in deep learning (supervised, unsupervised and generative models) with the focus on the applications of these methods to biomedical data, which are beginning to produced dramatic results. In addition to predictive modeling, the course emphasizes how to visualize and extract interpretable, biological insights from such models. Recent papers from the literature will be presented and discussed. Students will be introduced to and work with popular deep learning software frameworks. Students will work in groups on a final class project using real world datasets. Prerequisites: College calculus, linear algebra, basic probability and statistics such as CS109, and basic machine learning such as CS229. No prior knowledge of genomics is necessary.", "courseAttributes": "Terms: Aut | Units: 3 | Grading: Medical Option (Med-Ltr-CR/NC)"}, {"courseTitle": "Deep Learning in Genomics and Biomedicine (BIOMEDIN 273B, CS 273B, GENE 236)", "courseNumber": "BIODS 237:", "courseDescription": "Recent breakthroughs in high-throughput genomic and biomedical data are transforming biological sciences into \"big data\" disciplines. In parallel, progress in deep neural networks are revolutionizing fields such as image recognition, natural language processing and, more broadly, AI. This course explores the exciting intersection between these two advances. The course will start with an introduction to deep learning and overview the relevant background in genomics and high-throughput biotechnology, focusing on the available data and their relevance. It will then cover the ongoing developments in deep learning (supervised, unsupervised and generative models) with the focus on the applications of these methods to biomedical data, which are beginning to produced dramatic results. In addition to predictive modeling, the course emphasizes how to visualize and extract interpretable, biological insights from such models. Recent papers from the literature will be presented and discussed. Students will be introduced to and work with popular deep learning software frameworks. Students will work in groups on a final class project using real world datasets. Prerequisites: College calculus, linear algebra, basic probability and statistics such as CS109, and basic machine learning such as CS229. No prior knowledge of genomics is necessary.", "courseAttributes": "Terms: Aut | Units: 3 | Grading: Medical Option (Med-Ltr-CR/NC)"}]}}
{"Dan Bone": {"courses": [{"courseTitle": "Computer and Network Security", "courseNumber": "CS 155:", "courseDescription": "For seniors and first-year graduate students. Principles of computer systems security. Attack techniques and how to defend against them. Topics include: network attacks and defenses, operating system security, application security (web, apps, databases), malware, privacy, and security for mobile devices. Course projects focus on building reliable code. Prerequisite: 110. Recommended: basic Unix.", "courseAttributes": "Terms: Spr | Units: 3 | UG Reqs: GER:DB-EngrAppSci | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Computer and Network Security", "courseNumber": "CS 155:", "courseDescription": "For seniors and first-year graduate students. Principles of computer systems security. Attack techniques and how to defend against them. Topics include: network attacks and defenses, operating system security, application security (web, apps, databases), malware, privacy, and security for mobile devices. Course projects focus on building reliable code. Prerequisite: 110. Recommended: basic Unix.", "courseAttributes": "Terms: Spr | Units: 3 | UG Reqs: GER:DB-EngrAppSci | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Computer and Network Security", "courseNumber": "CS 155:", "courseDescription": "For seniors and first-year graduate students. Principles of computer systems security. Attack techniques and how to defend against them. Topics include: network attacks and defenses, operating system security, application security (web, apps, databases), malware, privacy, and security for mobile devices. Course projects focus on building reliable code. Prerequisite: 110. Recommended: basic Unix.", "courseAttributes": "Terms: Spr | Units: 3 | UG Reqs: GER:DB-EngrAppSci | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Computer and Network Security", "courseNumber": "CS 155:", "courseDescription": "For seniors and first-year graduate students. Principles of computer systems security. Attack techniques and how to defend against them. Topics include: network attacks and defenses, operating system security, application security (web, apps, databases), malware, privacy, and security for mobile devices. Course projects focus on building reliable code. Prerequisite: 110. Recommended: basic Unix.", "courseAttributes": "Terms: Spr | Units: 3 | UG Reqs: GER:DB-EngrAppSci | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Computer and Network Security", "courseNumber": "CS 155:", "courseDescription": "For seniors and first-year graduate students. Principles of computer systems security. Attack techniques and how to defend against them. Topics include: network attacks and defenses, operating system security, application security (web, apps, databases), malware, privacy, and security for mobile devices. Course projects focus on building reliable code. Prerequisite: 110. Recommended: basic Unix.", "courseAttributes": "Terms: Spr | Units: 3 | UG Reqs: GER:DB-EngrAppSci | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Computer and Network Security", "courseNumber": "CS 155:", "courseDescription": "For seniors and first-year graduate students. Principles of computer systems security. Attack techniques and how to defend against them. Topics include: network attacks and defenses, operating system security, application security (web, apps, databases), malware, privacy, and security for mobile devices. Course projects focus on building reliable code. Prerequisite: 110. Recommended: basic Unix.", "courseAttributes": "Terms: Spr | Units: 3 | UG Reqs: GER:DB-EngrAppSci | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Computer and Network Security", "courseNumber": "CS 155:", "courseDescription": "For seniors and first-year graduate students. Principles of computer systems security. Attack techniques and how to defend against them. Topics include: network attacks and defenses, operating system security, application security (web, apps, databases), malware, privacy, and security for mobile devices. Course projects focus on building reliable code. Prerequisite: 110. Recommended: basic Unix.", "courseAttributes": "Terms: Spr | Units: 3 | UG Reqs: GER:DB-EngrAppSci | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Computer and Network Security", "courseNumber": "CS 155:", "courseDescription": "For seniors and first-year graduate students. Principles of computer systems security. Attack techniques and how to defend against them. Topics include: network attacks and defenses, operating system security, application security (web, apps, databases), malware, privacy, and security for mobile devices. Course projects focus on building reliable code. Prerequisite: 110. Recommended: basic Unix.", "courseAttributes": "Terms: Spr | Units: 3 | UG Reqs: GER:DB-EngrAppSci | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Computer and Network Security", "courseNumber": "CS 155:", "courseDescription": "For seniors and first-year graduate students. Principles of computer systems security. Attack techniques and how to defend against them. Topics include: network attacks and defenses, operating system security, application security (web, apps, databases), malware, privacy, and security for mobile devices. Course projects focus on building reliable code. Prerequisite: 110. Recommended: basic Unix.", "courseAttributes": "Terms: Spr | Units: 3 | UG Reqs: GER:DB-EngrAppSci | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Computer and Network Security", "courseNumber": "CS 155:", "courseDescription": "For seniors and first-year graduate students. Principles of computer systems security. Attack techniques and how to defend against them. Topics include: network attacks and defenses, operating system security, application security (web, apps, databases), malware, privacy, and security for mobile devices. Course projects focus on building reliable code. Prerequisite: 110. Recommended: basic Unix.", "courseAttributes": "Terms: Spr | Units: 3 | UG Reqs: GER:DB-EngrAppSci | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Computer and Network Security", "courseNumber": "CS 155:", "courseDescription": "For seniors and first-year graduate students. Principles of computer systems security. Attack techniques and how to defend against them. Topics include: network attacks and defenses, operating system security, application security (web, apps, databases), malware, privacy, and security for mobile devices. Course projects focus on building reliable code. Prerequisite: 110. Recommended: basic Unix.", "courseAttributes": "Terms: Spr | Units: 3 | UG Reqs: GER:DB-EngrAppSci | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Computer and Network Security", "courseNumber": "CS 155:", "courseDescription": "For seniors and first-year graduate students. Principles of computer systems security. Attack techniques and how to defend against them. Topics include: network attacks and defenses, operating system security, application security (web, apps, databases), malware, privacy, and security for mobile devices. Course projects focus on building reliable code. Prerequisite: 110. Recommended: basic Unix.", "courseAttributes": "Terms: Spr | Units: 3 | UG Reqs: GER:DB-EngrAppSci | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Computer and Network Security", "courseNumber": "CS 155:", "courseDescription": "For seniors and first-year graduate students. Principles of computer systems security. Attack techniques and how to defend against them. Topics include: network attacks and defenses, operating system security, application security (web, apps, databases), malware, privacy, and security for mobile devices. Course projects focus on building reliable code. Prerequisite: 110. Recommended: basic Unix.", "courseAttributes": "Terms: Spr | Units: 3 | UG Reqs: GER:DB-EngrAppSci | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Computer and Network Security", "courseNumber": "CS 155:", "courseDescription": "For seniors and first-year graduate students. Principles of computer systems security. Attack techniques and how to defend against them. Topics include: network attacks and defenses, operating system security, application security (web, apps, databases), malware, privacy, and security for mobile devices. Course projects focus on building reliable code. Prerequisite: 110. Recommended: basic Unix.", "courseAttributes": "Terms: Spr | Units: 3 | UG Reqs: GER:DB-EngrAppSci | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Computer and Network Security", "courseNumber": "CS 155:", "courseDescription": "For seniors and first-year graduate students. Principles of computer systems security. Attack techniques and how to defend against them. Topics include: network attacks and defenses, operating system security, application security (web, apps, databases), malware, privacy, and security for mobile devices. Course projects focus on building reliable code. Prerequisite: 110. Recommended: basic Unix.", "courseAttributes": "Terms: Spr | Units: 3 | UG Reqs: GER:DB-EngrAppSci | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Computer and Network Security", "courseNumber": "CS 155:", "courseDescription": "For seniors and first-year graduate students. Principles of computer systems security. Attack techniques and how to defend against them. Topics include: network attacks and defenses, operating system security, application security (web, apps, databases), malware, privacy, and security for mobile devices. Course projects focus on building reliable code. Prerequisite: 110. Recommended: basic Unix.", "courseAttributes": "Terms: Spr | Units: 3 | UG Reqs: GER:DB-EngrAppSci | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Computer and Network Security", "courseNumber": "CS 155:", "courseDescription": "For seniors and first-year graduate students. Principles of computer systems security. Attack techniques and how to defend against them. Topics include: network attacks and defenses, operating system security, application security (web, apps, databases), malware, privacy, and security for mobile devices. Course projects focus on building reliable code. Prerequisite: 110. Recommended: basic Unix.", "courseAttributes": "Terms: Spr | Units: 3 | UG Reqs: GER:DB-EngrAppSci | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Computer and Network Security", "courseNumber": "CS 155:", "courseDescription": "For seniors and first-year graduate students. Principles of computer systems security. Attack techniques and how to defend against them. Topics include: network attacks and defenses, operating system security, application security (web, apps, databases), malware, privacy, and security for mobile devices. Course projects focus on building reliable code. Prerequisite: 110. Recommended: basic Unix.", "courseAttributes": "Terms: Spr | Units: 3 | UG Reqs: GER:DB-EngrAppSci | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Computer and Network Security", "courseNumber": "CS 155:", "courseDescription": "For seniors and first-year graduate students. Principles of computer systems security. Attack techniques and how to defend against them. Topics include: network attacks and defenses, operating system security, application security (web, apps, databases), malware, privacy, and security for mobile devices. Course projects focus on building reliable code. Prerequisite: 110. Recommended: basic Unix.", "courseAttributes": "Terms: Spr | Units: 3 | UG Reqs: GER:DB-EngrAppSci | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Computer and Network Security", "courseNumber": "CS 155:", "courseDescription": "For seniors and first-year graduate students. Principles of computer systems security. Attack techniques and how to defend against them. Topics include: network attacks and defenses, operating system security, application security (web, apps, databases), malware, privacy, and security for mobile devices. Course projects focus on building reliable code. Prerequisite: 110. Recommended: basic Unix.", "courseAttributes": "Terms: Spr | Units: 3 | UG Reqs: GER:DB-EngrAppSci | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Computer and Network Security", "courseNumber": "CS 155:", "courseDescription": "For seniors and first-year graduate students. Principles of computer systems security. Attack techniques and how to defend against them. Topics include: network attacks and defenses, operating system security, application security (web, apps, databases), malware, privacy, and security for mobile devices. Course projects focus on building reliable code. Prerequisite: 110. Recommended: basic Unix.", "courseAttributes": "Terms: Spr | Units: 3 | UG Reqs: GER:DB-EngrAppSci | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Computer and Network Security", "courseNumber": "CS 155:", "courseDescription": "For seniors and first-year graduate students. Principles of computer systems security. Attack techniques and how to defend against them. Topics include: network attacks and defenses, operating system security, application security (web, apps, databases), malware, privacy, and security for mobile devices. Course projects focus on building reliable code. Prerequisite: 110. Recommended: basic Unix.", "courseAttributes": "Terms: Spr | Units: 3 | UG Reqs: GER:DB-EngrAppSci | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Computer and Network Security", "courseNumber": "CS 155:", "courseDescription": "For seniors and first-year graduate students. Principles of computer systems security. Attack techniques and how to defend against them. Topics include: network attacks and defenses, operating system security, application security (web, apps, databases), malware, privacy, and security for mobile devices. Course projects focus on building reliable code. Prerequisite: 110. Recommended: basic Unix.", "courseAttributes": "Terms: Spr | Units: 3 | UG Reqs: GER:DB-EngrAppSci | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Computer and Network Security", "courseNumber": "CS 155:", "courseDescription": "For seniors and first-year graduate students. Principles of computer systems security. Attack techniques and how to defend against them. Topics include: network attacks and defenses, operating system security, application security (web, apps, databases), malware, privacy, and security for mobile devices. Course projects focus on building reliable code. Prerequisite: 110. Recommended: basic Unix.", "courseAttributes": "Terms: Spr | Units: 3 | UG Reqs: GER:DB-EngrAppSci | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Computer and Network Security", "courseNumber": "CS 155:", "courseDescription": "For seniors and first-year graduate students. Principles of computer systems security. Attack techniques and how to defend against them. Topics include: network attacks and defenses, operating system security, application security (web, apps, databases), malware, privacy, and security for mobile devices. Course projects focus on building reliable code. Prerequisite: 110. Recommended: basic Unix.", "courseAttributes": "Terms: Spr | Units: 3 | UG Reqs: GER:DB-EngrAppSci | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Computer and Network Security", "courseNumber": "CS 155:", "courseDescription": "For seniors and first-year graduate students. Principles of computer systems security. Attack techniques and how to defend against them. Topics include: network attacks and defenses, operating system security, application security (web, apps, databases), malware, privacy, and security for mobile devices. Course projects focus on building reliable code. Prerequisite: 110. Recommended: basic Unix.", "courseAttributes": "Terms: Spr | Units: 3 | UG Reqs: GER:DB-EngrAppSci | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Computer and Network Security", "courseNumber": "CS 155:", "courseDescription": "For seniors and first-year graduate students. Principles of computer systems security. Attack techniques and how to defend against them. Topics include: network attacks and defenses, operating system security, application security (web, apps, databases), malware, privacy, and security for mobile devices. Course projects focus on building reliable code. Prerequisite: 110. Recommended: basic Unix.", "courseAttributes": "Terms: Spr | Units: 3 | UG Reqs: GER:DB-EngrAppSci | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Computer and Network Security", "courseNumber": "CS 155:", "courseDescription": "For seniors and first-year graduate students. Principles of computer systems security. Attack techniques and how to defend against them. Topics include: network attacks and defenses, operating system security, application security (web, apps, databases), malware, privacy, and security for mobile devices. Course projects focus on building reliable code. Prerequisite: 110. Recommended: basic Unix.", "courseAttributes": "Terms: Spr | Units: 3 | UG Reqs: GER:DB-EngrAppSci | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Computer and Network Security", "courseNumber": "CS 155:", "courseDescription": "For seniors and first-year graduate students. Principles of computer systems security. Attack techniques and how to defend against them. Topics include: network attacks and defenses, operating system security, application security (web, apps, databases), malware, privacy, and security for mobile devices. Course projects focus on building reliable code. Prerequisite: 110. Recommended: basic Unix.", "courseAttributes": "Terms: Spr | Units: 3 | UG Reqs: GER:DB-EngrAppSci | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Computer and Network Security", "courseNumber": "CS 155:", "courseDescription": "For seniors and first-year graduate students. Principles of computer systems security. Attack techniques and how to defend against them. Topics include: network attacks and defenses, operating system security, application security (web, apps, databases), malware, privacy, and security for mobile devices. Course projects focus on building reliable code. Prerequisite: 110. Recommended: basic Unix.", "courseAttributes": "Terms: Spr | Units: 3 | UG Reqs: GER:DB-EngrAppSci | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Computer and Network Security", "courseNumber": "CS 155:", "courseDescription": "For seniors and first-year graduate students. Principles of computer systems security. Attack techniques and how to defend against them. Topics include: network attacks and defenses, operating system security, application security (web, apps, databases), malware, privacy, and security for mobile devices. Course projects focus on building reliable code. Prerequisite: 110. Recommended: basic Unix.", "courseAttributes": "Terms: Spr | Units: 3 | UG Reqs: GER:DB-EngrAppSci | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Computer and Network Security", "courseNumber": "CS 155:", "courseDescription": "For seniors and first-year graduate students. Principles of computer systems security. Attack techniques and how to defend against them. Topics include: network attacks and defenses, operating system security, application security (web, apps, databases), malware, privacy, and security for mobile devices. Course projects focus on building reliable code. Prerequisite: 110. Recommended: basic Unix.", "courseAttributes": "Terms: Spr | Units: 3 | UG Reqs: GER:DB-EngrAppSci | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Computer and Network Security", "courseNumber": "CS 155:", "courseDescription": "For seniors and first-year graduate students. Principles of computer systems security. Attack techniques and how to defend against them. Topics include: network attacks and defenses, operating system security, application security (web, apps, databases), malware, privacy, and security for mobile devices. Course projects focus on building reliable code. Prerequisite: 110. Recommended: basic Unix.", "courseAttributes": "Terms: Spr | Units: 3 | UG Reqs: GER:DB-EngrAppSci | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Computer and Network Security", "courseNumber": "CS 155:", "courseDescription": "For seniors and first-year graduate students. Principles of computer systems security. Attack techniques and how to defend against them. Topics include: network attacks and defenses, operating system security, application security (web, apps, databases), malware, privacy, and security for mobile devices. Course projects focus on building reliable code. Prerequisite: 110. Recommended: basic Unix.", "courseAttributes": "Terms: Spr | Units: 3 | UG Reqs: GER:DB-EngrAppSci | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Computer and Network Security", "courseNumber": "CS 155:", "courseDescription": "For seniors and first-year graduate students. Principles of computer systems security. Attack techniques and how to defend against them. Topics include: network attacks and defenses, operating system security, application security (web, apps, databases), malware, privacy, and security for mobile devices. Course projects focus on building reliable code. Prerequisite: 110. Recommended: basic Unix.", "courseAttributes": "Terms: Spr | Units: 3 | UG Reqs: GER:DB-EngrAppSci | Grading: Letter or Credit/No Credit"}]}}
{"Fei-Fei Li": {"courses": [{"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}]}}
{"Gregory Valiant": {"courses": [{"courseTitle": "Randomized Algorithms and Probabilistic Analysis (CS 265)", "courseNumber": "CME 309:", "courseDescription": "Randomness pervades the natural processes around us, from the formation of networks, to genetic recombination, to quantum physics. Randomness is also a powerful tool that can be leveraged to create algorithms and data structures which, in many cases, are more efficient and simpler than their deterministic counterparts. This course covers the key tools of probabilistic analysis, and application of these tools to understand the behaviors of random processes and algorithms. Emphasis is on theoretical foundations, though we will apply this theory broadly, discussing applications in machine learning and data analysis, networking, and systems. Topics include tail bounds, the probabilistic method, Markov chains, and martingales, with applications to analyzing random graphs, metric embeddings, random walks, and a host of powerful and elegant randomized algorithms. Prerequisites: CS 161 and STAT 116, or equivalents and instructor consent.", "courseAttributes": "Terms: Aut | Units: 3 | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Randomized Algorithms and Probabilistic Analysis (CS 265)", "courseNumber": "CME 309:", "courseDescription": "Randomness pervades the natural processes around us, from the formation of networks, to genetic recombination, to quantum physics. Randomness is also a powerful tool that can be leveraged to create algorithms and data structures which, in many cases, are more efficient and simpler than their deterministic counterparts. This course covers the key tools of probabilistic analysis, and application of these tools to understand the behaviors of random processes and algorithms. Emphasis is on theoretical foundations, though we will apply this theory broadly, discussing applications in machine learning and data analysis, networking, and systems. Topics include tail bounds, the probabilistic method, Markov chains, and martingales, with applications to analyzing random graphs, metric embeddings, random walks, and a host of powerful and elegant randomized algorithms. Prerequisites: CS 161 and STAT 116, or equivalents and instructor consent.", "courseAttributes": "Terms: Aut | Units: 3 | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Randomized Algorithms and Probabilistic Analysis (CS 265)", "courseNumber": "CME 309:", "courseDescription": "Randomness pervades the natural processes around us, from the formation of networks, to genetic recombination, to quantum physics. Randomness is also a powerful tool that can be leveraged to create algorithms and data structures which, in many cases, are more efficient and simpler than their deterministic counterparts. This course covers the key tools of probabilistic analysis, and application of these tools to understand the behaviors of random processes and algorithms. Emphasis is on theoretical foundations, though we will apply this theory broadly, discussing applications in machine learning and data analysis, networking, and systems. Topics include tail bounds, the probabilistic method, Markov chains, and martingales, with applications to analyzing random graphs, metric embeddings, random walks, and a host of powerful and elegant randomized algorithms. Prerequisites: CS 161 and STAT 116, or equivalents and instructor consent.", "courseAttributes": "Terms: Aut | Units: 3 | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Randomized Algorithms and Probabilistic Analysis (CS 265)", "courseNumber": "CME 309:", "courseDescription": "Randomness pervades the natural processes around us, from the formation of networks, to genetic recombination, to quantum physics. Randomness is also a powerful tool that can be leveraged to create algorithms and data structures which, in many cases, are more efficient and simpler than their deterministic counterparts. This course covers the key tools of probabilistic analysis, and application of these tools to understand the behaviors of random processes and algorithms. Emphasis is on theoretical foundations, though we will apply this theory broadly, discussing applications in machine learning and data analysis, networking, and systems. Topics include tail bounds, the probabilistic method, Markov chains, and martingales, with applications to analyzing random graphs, metric embeddings, random walks, and a host of powerful and elegant randomized algorithms. Prerequisites: CS 161 and STAT 116, or equivalents and instructor consent.", "courseAttributes": "Terms: Aut | Units: 3 | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Randomized Algorithms and Probabilistic Analysis (CS 265)", "courseNumber": "CME 309:", "courseDescription": "Randomness pervades the natural processes around us, from the formation of networks, to genetic recombination, to quantum physics. Randomness is also a powerful tool that can be leveraged to create algorithms and data structures which, in many cases, are more efficient and simpler than their deterministic counterparts. This course covers the key tools of probabilistic analysis, and application of these tools to understand the behaviors of random processes and algorithms. Emphasis is on theoretical foundations, though we will apply this theory broadly, discussing applications in machine learning and data analysis, networking, and systems. Topics include tail bounds, the probabilistic method, Markov chains, and martingales, with applications to analyzing random graphs, metric embeddings, random walks, and a host of powerful and elegant randomized algorithms. Prerequisites: CS 161 and STAT 116, or equivalents and instructor consent.", "courseAttributes": "Terms: Aut | Units: 3 | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Randomized Algorithms and Probabilistic Analysis (CS 265)", "courseNumber": "CME 309:", "courseDescription": "Randomness pervades the natural processes around us, from the formation of networks, to genetic recombination, to quantum physics. Randomness is also a powerful tool that can be leveraged to create algorithms and data structures which, in many cases, are more efficient and simpler than their deterministic counterparts. This course covers the key tools of probabilistic analysis, and application of these tools to understand the behaviors of random processes and algorithms. Emphasis is on theoretical foundations, though we will apply this theory broadly, discussing applications in machine learning and data analysis, networking, and systems. Topics include tail bounds, the probabilistic method, Markov chains, and martingales, with applications to analyzing random graphs, metric embeddings, random walks, and a host of powerful and elegant randomized algorithms. Prerequisites: CS 161 and STAT 116, or equivalents and instructor consent.", "courseAttributes": "Terms: Aut | Units: 3 | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Randomized Algorithms and Probabilistic Analysis (CS 265)", "courseNumber": "CME 309:", "courseDescription": "Randomness pervades the natural processes around us, from the formation of networks, to genetic recombination, to quantum physics. Randomness is also a powerful tool that can be leveraged to create algorithms and data structures which, in many cases, are more efficient and simpler than their deterministic counterparts. This course covers the key tools of probabilistic analysis, and application of these tools to understand the behaviors of random processes and algorithms. Emphasis is on theoretical foundations, though we will apply this theory broadly, discussing applications in machine learning and data analysis, networking, and systems. Topics include tail bounds, the probabilistic method, Markov chains, and martingales, with applications to analyzing random graphs, metric embeddings, random walks, and a host of powerful and elegant randomized algorithms. Prerequisites: CS 161 and STAT 116, or equivalents and instructor consent.", "courseAttributes": "Terms: Aut | Units: 3 | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Randomized Algorithms and Probabilistic Analysis (CS 265)", "courseNumber": "CME 309:", "courseDescription": "Randomness pervades the natural processes around us, from the formation of networks, to genetic recombination, to quantum physics. Randomness is also a powerful tool that can be leveraged to create algorithms and data structures which, in many cases, are more efficient and simpler than their deterministic counterparts. This course covers the key tools of probabilistic analysis, and application of these tools to understand the behaviors of random processes and algorithms. Emphasis is on theoretical foundations, though we will apply this theory broadly, discussing applications in machine learning and data analysis, networking, and systems. Topics include tail bounds, the probabilistic method, Markov chains, and martingales, with applications to analyzing random graphs, metric embeddings, random walks, and a host of powerful and elegant randomized algorithms. Prerequisites: CS 161 and STAT 116, or equivalents and instructor consent.", "courseAttributes": "Terms: Aut | Units: 3 | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Randomized Algorithms and Probabilistic Analysis (CS 265)", "courseNumber": "CME 309:", "courseDescription": "Randomness pervades the natural processes around us, from the formation of networks, to genetic recombination, to quantum physics. Randomness is also a powerful tool that can be leveraged to create algorithms and data structures which, in many cases, are more efficient and simpler than their deterministic counterparts. This course covers the key tools of probabilistic analysis, and application of these tools to understand the behaviors of random processes and algorithms. Emphasis is on theoretical foundations, though we will apply this theory broadly, discussing applications in machine learning and data analysis, networking, and systems. Topics include tail bounds, the probabilistic method, Markov chains, and martingales, with applications to analyzing random graphs, metric embeddings, random walks, and a host of powerful and elegant randomized algorithms. Prerequisites: CS 161 and STAT 116, or equivalents and instructor consent.", "courseAttributes": "Terms: Aut | Units: 3 | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Randomized Algorithms and Probabilistic Analysis (CS 265)", "courseNumber": "CME 309:", "courseDescription": "Randomness pervades the natural processes around us, from the formation of networks, to genetic recombination, to quantum physics. Randomness is also a powerful tool that can be leveraged to create algorithms and data structures which, in many cases, are more efficient and simpler than their deterministic counterparts. This course covers the key tools of probabilistic analysis, and application of these tools to understand the behaviors of random processes and algorithms. Emphasis is on theoretical foundations, though we will apply this theory broadly, discussing applications in machine learning and data analysis, networking, and systems. Topics include tail bounds, the probabilistic method, Markov chains, and martingales, with applications to analyzing random graphs, metric embeddings, random walks, and a host of powerful and elegant randomized algorithms. Prerequisites: CS 161 and STAT 116, or equivalents and instructor consent.", "courseAttributes": "Terms: Aut | Units: 3 | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Randomized Algorithms and Probabilistic Analysis (CS 265)", "courseNumber": "CME 309:", "courseDescription": "Randomness pervades the natural processes around us, from the formation of networks, to genetic recombination, to quantum physics. Randomness is also a powerful tool that can be leveraged to create algorithms and data structures which, in many cases, are more efficient and simpler than their deterministic counterparts. This course covers the key tools of probabilistic analysis, and application of these tools to understand the behaviors of random processes and algorithms. Emphasis is on theoretical foundations, though we will apply this theory broadly, discussing applications in machine learning and data analysis, networking, and systems. Topics include tail bounds, the probabilistic method, Markov chains, and martingales, with applications to analyzing random graphs, metric embeddings, random walks, and a host of powerful and elegant randomized algorithms. Prerequisites: CS 161 and STAT 116, or equivalents and instructor consent.", "courseAttributes": "Terms: Aut | Units: 3 | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Randomized Algorithms and Probabilistic Analysis (CS 265)", "courseNumber": "CME 309:", "courseDescription": "Randomness pervades the natural processes around us, from the formation of networks, to genetic recombination, to quantum physics. Randomness is also a powerful tool that can be leveraged to create algorithms and data structures which, in many cases, are more efficient and simpler than their deterministic counterparts. This course covers the key tools of probabilistic analysis, and application of these tools to understand the behaviors of random processes and algorithms. Emphasis is on theoretical foundations, though we will apply this theory broadly, discussing applications in machine learning and data analysis, networking, and systems. Topics include tail bounds, the probabilistic method, Markov chains, and martingales, with applications to analyzing random graphs, metric embeddings, random walks, and a host of powerful and elegant randomized algorithms. Prerequisites: CS 161 and STAT 116, or equivalents and instructor consent.", "courseAttributes": "Terms: Aut | Units: 3 | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Randomized Algorithms and Probabilistic Analysis (CS 265)", "courseNumber": "CME 309:", "courseDescription": "Randomness pervades the natural processes around us, from the formation of networks, to genetic recombination, to quantum physics. Randomness is also a powerful tool that can be leveraged to create algorithms and data structures which, in many cases, are more efficient and simpler than their deterministic counterparts. This course covers the key tools of probabilistic analysis, and application of these tools to understand the behaviors of random processes and algorithms. Emphasis is on theoretical foundations, though we will apply this theory broadly, discussing applications in machine learning and data analysis, networking, and systems. Topics include tail bounds, the probabilistic method, Markov chains, and martingales, with applications to analyzing random graphs, metric embeddings, random walks, and a host of powerful and elegant randomized algorithms. Prerequisites: CS 161 and STAT 116, or equivalents and instructor consent.", "courseAttributes": "Terms: Aut | Units: 3 | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Randomized Algorithms and Probabilistic Analysis (CS 265)", "courseNumber": "CME 309:", "courseDescription": "Randomness pervades the natural processes around us, from the formation of networks, to genetic recombination, to quantum physics. Randomness is also a powerful tool that can be leveraged to create algorithms and data structures which, in many cases, are more efficient and simpler than their deterministic counterparts. This course covers the key tools of probabilistic analysis, and application of these tools to understand the behaviors of random processes and algorithms. Emphasis is on theoretical foundations, though we will apply this theory broadly, discussing applications in machine learning and data analysis, networking, and systems. Topics include tail bounds, the probabilistic method, Markov chains, and martingales, with applications to analyzing random graphs, metric embeddings, random walks, and a host of powerful and elegant randomized algorithms. Prerequisites: CS 161 and STAT 116, or equivalents and instructor consent.", "courseAttributes": "Terms: Aut | Units: 3 | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Randomized Algorithms and Probabilistic Analysis (CS 265)", "courseNumber": "CME 309:", "courseDescription": "Randomness pervades the natural processes around us, from the formation of networks, to genetic recombination, to quantum physics. Randomness is also a powerful tool that can be leveraged to create algorithms and data structures which, in many cases, are more efficient and simpler than their deterministic counterparts. This course covers the key tools of probabilistic analysis, and application of these tools to understand the behaviors of random processes and algorithms. Emphasis is on theoretical foundations, though we will apply this theory broadly, discussing applications in machine learning and data analysis, networking, and systems. Topics include tail bounds, the probabilistic method, Markov chains, and martingales, with applications to analyzing random graphs, metric embeddings, random walks, and a host of powerful and elegant randomized algorithms. Prerequisites: CS 161 and STAT 116, or equivalents and instructor consent.", "courseAttributes": "Terms: Aut | Units: 3 | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Randomized Algorithms and Probabilistic Analysis (CS 265)", "courseNumber": "CME 309:", "courseDescription": "Randomness pervades the natural processes around us, from the formation of networks, to genetic recombination, to quantum physics. Randomness is also a powerful tool that can be leveraged to create algorithms and data structures which, in many cases, are more efficient and simpler than their deterministic counterparts. This course covers the key tools of probabilistic analysis, and application of these tools to understand the behaviors of random processes and algorithms. Emphasis is on theoretical foundations, though we will apply this theory broadly, discussing applications in machine learning and data analysis, networking, and systems. Topics include tail bounds, the probabilistic method, Markov chains, and martingales, with applications to analyzing random graphs, metric embeddings, random walks, and a host of powerful and elegant randomized algorithms. Prerequisites: CS 161 and STAT 116, or equivalents and instructor consent.", "courseAttributes": "Terms: Aut | Units: 3 | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Randomized Algorithms and Probabilistic Analysis (CS 265)", "courseNumber": "CME 309:", "courseDescription": "Randomness pervades the natural processes around us, from the formation of networks, to genetic recombination, to quantum physics. Randomness is also a powerful tool that can be leveraged to create algorithms and data structures which, in many cases, are more efficient and simpler than their deterministic counterparts. This course covers the key tools of probabilistic analysis, and application of these tools to understand the behaviors of random processes and algorithms. Emphasis is on theoretical foundations, though we will apply this theory broadly, discussing applications in machine learning and data analysis, networking, and systems. Topics include tail bounds, the probabilistic method, Markov chains, and martingales, with applications to analyzing random graphs, metric embeddings, random walks, and a host of powerful and elegant randomized algorithms. Prerequisites: CS 161 and STAT 116, or equivalents and instructor consent.", "courseAttributes": "Terms: Aut | Units: 3 | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Randomized Algorithms and Probabilistic Analysis (CS 265)", "courseNumber": "CME 309:", "courseDescription": "Randomness pervades the natural processes around us, from the formation of networks, to genetic recombination, to quantum physics. Randomness is also a powerful tool that can be leveraged to create algorithms and data structures which, in many cases, are more efficient and simpler than their deterministic counterparts. This course covers the key tools of probabilistic analysis, and application of these tools to understand the behaviors of random processes and algorithms. Emphasis is on theoretical foundations, though we will apply this theory broadly, discussing applications in machine learning and data analysis, networking, and systems. Topics include tail bounds, the probabilistic method, Markov chains, and martingales, with applications to analyzing random graphs, metric embeddings, random walks, and a host of powerful and elegant randomized algorithms. Prerequisites: CS 161 and STAT 116, or equivalents and instructor consent.", "courseAttributes": "Terms: Aut | Units: 3 | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Randomized Algorithms and Probabilistic Analysis (CS 265)", "courseNumber": "CME 309:", "courseDescription": "Randomness pervades the natural processes around us, from the formation of networks, to genetic recombination, to quantum physics. Randomness is also a powerful tool that can be leveraged to create algorithms and data structures which, in many cases, are more efficient and simpler than their deterministic counterparts. This course covers the key tools of probabilistic analysis, and application of these tools to understand the behaviors of random processes and algorithms. Emphasis is on theoretical foundations, though we will apply this theory broadly, discussing applications in machine learning and data analysis, networking, and systems. Topics include tail bounds, the probabilistic method, Markov chains, and martingales, with applications to analyzing random graphs, metric embeddings, random walks, and a host of powerful and elegant randomized algorithms. Prerequisites: CS 161 and STAT 116, or equivalents and instructor consent.", "courseAttributes": "Terms: Aut | Units: 3 | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Randomized Algorithms and Probabilistic Analysis (CS 265)", "courseNumber": "CME 309:", "courseDescription": "Randomness pervades the natural processes around us, from the formation of networks, to genetic recombination, to quantum physics. Randomness is also a powerful tool that can be leveraged to create algorithms and data structures which, in many cases, are more efficient and simpler than their deterministic counterparts. This course covers the key tools of probabilistic analysis, and application of these tools to understand the behaviors of random processes and algorithms. Emphasis is on theoretical foundations, though we will apply this theory broadly, discussing applications in machine learning and data analysis, networking, and systems. Topics include tail bounds, the probabilistic method, Markov chains, and martingales, with applications to analyzing random graphs, metric embeddings, random walks, and a host of powerful and elegant randomized algorithms. Prerequisites: CS 161 and STAT 116, or equivalents and instructor consent.", "courseAttributes": "Terms: Aut | Units: 3 | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Randomized Algorithms and Probabilistic Analysis (CS 265)", "courseNumber": "CME 309:", "courseDescription": "Randomness pervades the natural processes around us, from the formation of networks, to genetic recombination, to quantum physics. Randomness is also a powerful tool that can be leveraged to create algorithms and data structures which, in many cases, are more efficient and simpler than their deterministic counterparts. This course covers the key tools of probabilistic analysis, and application of these tools to understand the behaviors of random processes and algorithms. Emphasis is on theoretical foundations, though we will apply this theory broadly, discussing applications in machine learning and data analysis, networking, and systems. Topics include tail bounds, the probabilistic method, Markov chains, and martingales, with applications to analyzing random graphs, metric embeddings, random walks, and a host of powerful and elegant randomized algorithms. Prerequisites: CS 161 and STAT 116, or equivalents and instructor consent.", "courseAttributes": "Terms: Aut | Units: 3 | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Randomized Algorithms and Probabilistic Analysis (CS 265)", "courseNumber": "CME 309:", "courseDescription": "Randomness pervades the natural processes around us, from the formation of networks, to genetic recombination, to quantum physics. Randomness is also a powerful tool that can be leveraged to create algorithms and data structures which, in many cases, are more efficient and simpler than their deterministic counterparts. This course covers the key tools of probabilistic analysis, and application of these tools to understand the behaviors of random processes and algorithms. Emphasis is on theoretical foundations, though we will apply this theory broadly, discussing applications in machine learning and data analysis, networking, and systems. Topics include tail bounds, the probabilistic method, Markov chains, and martingales, with applications to analyzing random graphs, metric embeddings, random walks, and a host of powerful and elegant randomized algorithms. Prerequisites: CS 161 and STAT 116, or equivalents and instructor consent.", "courseAttributes": "Terms: Aut | Units: 3 | Grading: Letter or Credit/No Credit"}]}}
{"John C. Duchi": {"courses": [{"courseTitle": "Curricular Practical Training", "courseNumber": "CS 390A:", "courseDescription": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1 | Grading: Satisfactory/No Credit"}, {"courseTitle": "Curricular Practical Training", "courseNumber": "CS 390A:", "courseDescription": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1 | Grading: Satisfactory/No Credit"}, {"courseTitle": "Curricular Practical Training", "courseNumber": "CS 390A:", "courseDescription": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1 | Grading: Satisfactory/No Credit"}, {"courseTitle": "Curricular Practical Training", "courseNumber": "CS 390A:", "courseDescription": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1 | Grading: Satisfactory/No Credit"}, {"courseTitle": "Curricular Practical Training", "courseNumber": "CS 390A:", "courseDescription": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1 | Grading: Satisfactory/No Credit"}, {"courseTitle": "Curricular Practical Training", "courseNumber": "CS 390A:", "courseDescription": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1 | Grading: Satisfactory/No Credit"}, {"courseTitle": "Curricular Practical Training", "courseNumber": "CS 390A:", "courseDescription": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1 | Grading: Satisfactory/No Credit"}, {"courseTitle": "Curricular Practical Training", "courseNumber": "CS 390A:", "courseDescription": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1 | Grading: Satisfactory/No Credit"}, {"courseTitle": "Curricular Practical Training", "courseNumber": "CS 390A:", "courseDescription": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1 | Grading: Satisfactory/No Credit"}, {"courseTitle": "Curricular Practical Training", "courseNumber": "CS 390A:", "courseDescription": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1 | Grading: Satisfactory/No Credit"}, {"courseTitle": "Curricular Practical Training", "courseNumber": "CS 390A:", "courseDescription": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1 | Grading: Satisfactory/No Credit"}, {"courseTitle": "Curricular Practical Training", "courseNumber": "CS 390A:", "courseDescription": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1 | Grading: Satisfactory/No Credit"}, {"courseTitle": "Curricular Practical Training", "courseNumber": "CS 390A:", "courseDescription": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1 | Grading: Satisfactory/No Credit"}, {"courseTitle": "Curricular Practical Training", "courseNumber": "CS 390A:", "courseDescription": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1 | Grading: Satisfactory/No Credit"}, {"courseTitle": "Curricular Practical Training", "courseNumber": "CS 390A:", "courseDescription": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1 | Grading: Satisfactory/No Credit"}, {"courseTitle": "Curricular Practical Training", "courseNumber": "CS 390A:", "courseDescription": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1 | Grading: Satisfactory/No Credit"}, {"courseTitle": "Curricular Practical Training", "courseNumber": "CS 390A:", "courseDescription": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1 | Grading: Satisfactory/No Credit"}, {"courseTitle": "Curricular Practical Training", "courseNumber": "CS 390A:", "courseDescription": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1 | Grading: Satisfactory/No Credit"}, {"courseTitle": "Curricular Practical Training", "courseNumber": "CS 390A:", "courseDescription": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1 | Grading: Satisfactory/No Credit"}, {"courseTitle": "Curricular Practical Training", "courseNumber": "CS 390A:", "courseDescription": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1 | Grading: Satisfactory/No Credit"}, {"courseTitle": "Curricular Practical Training", "courseNumber": "CS 390A:", "courseDescription": "Educational opportunities in high technology research and development labs in the computing industry. Qualified computer science students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. 390 A, B, and C may each be taken once.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1 | Grading: Satisfactory/No Credit"}]}}
{"Christopher D. Manning": {"courses": [{"courseTitle": "Biomedical Informatics Teaching Methods", "courseNumber": "BIOMEDIN 290:", "courseDescription": "Hands-on training in biomedical informatics pedagogy. Practical experience in pedagogical approaches, variously including didactic, inquiry, project, team, case, field, and/or problem-based approaches. Students create course content, including lectures, exercises, and assessments, and evaluate learning activities and outcomes. Prerequisite: instructor consent.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Medical Option (Med-Ltr-CR/NC)"}, {"courseTitle": "Biomedical Informatics Teaching Methods", "courseNumber": "BIOMEDIN 290:", "courseDescription": "Hands-on training in biomedical informatics pedagogy. Practical experience in pedagogical approaches, variously including didactic, inquiry, project, team, case, field, and/or problem-based approaches. Students create course content, including lectures, exercises, and assessments, and evaluate learning activities and outcomes. Prerequisite: instructor consent.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Medical Option (Med-Ltr-CR/NC)"}, {"courseTitle": "Biomedical Informatics Teaching Methods", "courseNumber": "BIOMEDIN 290:", "courseDescription": "Hands-on training in biomedical informatics pedagogy. Practical experience in pedagogical approaches, variously including didactic, inquiry, project, team, case, field, and/or problem-based approaches. Students create course content, including lectures, exercises, and assessments, and evaluate learning activities and outcomes. Prerequisite: instructor consent.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Medical Option (Med-Ltr-CR/NC)"}, {"courseTitle": "Biomedical Informatics Teaching Methods", "courseNumber": "BIOMEDIN 290:", "courseDescription": "Hands-on training in biomedical informatics pedagogy. Practical experience in pedagogical approaches, variously including didactic, inquiry, project, team, case, field, and/or problem-based approaches. Students create course content, including lectures, exercises, and assessments, and evaluate learning activities and outcomes. Prerequisite: instructor consent.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Medical Option (Med-Ltr-CR/NC)"}, {"courseTitle": "Biomedical Informatics Teaching Methods", "courseNumber": "BIOMEDIN 290:", "courseDescription": "Hands-on training in biomedical informatics pedagogy. Practical experience in pedagogical approaches, variously including didactic, inquiry, project, team, case, field, and/or problem-based approaches. Students create course content, including lectures, exercises, and assessments, and evaluate learning activities and outcomes. Prerequisite: instructor consent.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Medical Option (Med-Ltr-CR/NC)"}, {"courseTitle": "Biomedical Informatics Teaching Methods", "courseNumber": "BIOMEDIN 290:", "courseDescription": "Hands-on training in biomedical informatics pedagogy. Practical experience in pedagogical approaches, variously including didactic, inquiry, project, team, case, field, and/or problem-based approaches. Students create course content, including lectures, exercises, and assessments, and evaluate learning activities and outcomes. Prerequisite: instructor consent.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Medical Option (Med-Ltr-CR/NC)"}, {"courseTitle": "Biomedical Informatics Teaching Methods", "courseNumber": "BIOMEDIN 290:", "courseDescription": "Hands-on training in biomedical informatics pedagogy. Practical experience in pedagogical approaches, variously including didactic, inquiry, project, team, case, field, and/or problem-based approaches. Students create course content, including lectures, exercises, and assessments, and evaluate learning activities and outcomes. Prerequisite: instructor consent.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Medical Option (Med-Ltr-CR/NC)"}, {"courseTitle": "Biomedical Informatics Teaching Methods", "courseNumber": "BIOMEDIN 290:", "courseDescription": "Hands-on training in biomedical informatics pedagogy. Practical experience in pedagogical approaches, variously including didactic, inquiry, project, team, case, field, and/or problem-based approaches. Students create course content, including lectures, exercises, and assessments, and evaluate learning activities and outcomes. Prerequisite: instructor consent.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Medical Option (Med-Ltr-CR/NC)"}, {"courseTitle": "Biomedical Informatics Teaching Methods", "courseNumber": "BIOMEDIN 290:", "courseDescription": "Hands-on training in biomedical informatics pedagogy. Practical experience in pedagogical approaches, variously including didactic, inquiry, project, team, case, field, and/or problem-based approaches. Students create course content, including lectures, exercises, and assessments, and evaluate learning activities and outcomes. Prerequisite: instructor consent.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Medical Option (Med-Ltr-CR/NC)"}, {"courseTitle": "Biomedical Informatics Teaching Methods", "courseNumber": "BIOMEDIN 290:", "courseDescription": "Hands-on training in biomedical informatics pedagogy. Practical experience in pedagogical approaches, variously including didactic, inquiry, project, team, case, field, and/or problem-based approaches. Students create course content, including lectures, exercises, and assessments, and evaluate learning activities and outcomes. Prerequisite: instructor consent.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Medical Option (Med-Ltr-CR/NC)"}, {"courseTitle": "Biomedical Informatics Teaching Methods", "courseNumber": "BIOMEDIN 290:", "courseDescription": "Hands-on training in biomedical informatics pedagogy. Practical experience in pedagogical approaches, variously including didactic, inquiry, project, team, case, field, and/or problem-based approaches. Students create course content, including lectures, exercises, and assessments, and evaluate learning activities and outcomes. Prerequisite: instructor consent.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Medical Option (Med-Ltr-CR/NC)"}, {"courseTitle": "Biomedical Informatics Teaching Methods", "courseNumber": "BIOMEDIN 290:", "courseDescription": "Hands-on training in biomedical informatics pedagogy. Practical experience in pedagogical approaches, variously including didactic, inquiry, project, team, case, field, and/or problem-based approaches. Students create course content, including lectures, exercises, and assessments, and evaluate learning activities and outcomes. Prerequisite: instructor consent.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Medical Option (Med-Ltr-CR/NC)"}, {"courseTitle": "Biomedical Informatics Teaching Methods", "courseNumber": "BIOMEDIN 290:", "courseDescription": "Hands-on training in biomedical informatics pedagogy. Practical experience in pedagogical approaches, variously including didactic, inquiry, project, team, case, field, and/or problem-based approaches. Students create course content, including lectures, exercises, and assessments, and evaluate learning activities and outcomes. Prerequisite: instructor consent.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Medical Option (Med-Ltr-CR/NC)"}, {"courseTitle": "Biomedical Informatics Teaching Methods", "courseNumber": "BIOMEDIN 290:", "courseDescription": "Hands-on training in biomedical informatics pedagogy. Practical experience in pedagogical approaches, variously including didactic, inquiry, project, team, case, field, and/or problem-based approaches. Students create course content, including lectures, exercises, and assessments, and evaluate learning activities and outcomes. Prerequisite: instructor consent.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Medical Option (Med-Ltr-CR/NC)"}, {"courseTitle": "Biomedical Informatics Teaching Methods", "courseNumber": "BIOMEDIN 290:", "courseDescription": "Hands-on training in biomedical informatics pedagogy. Practical experience in pedagogical approaches, variously including didactic, inquiry, project, team, case, field, and/or problem-based approaches. Students create course content, including lectures, exercises, and assessments, and evaluate learning activities and outcomes. Prerequisite: instructor consent.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Medical Option (Med-Ltr-CR/NC)"}, {"courseTitle": "Biomedical Informatics Teaching Methods", "courseNumber": "BIOMEDIN 290:", "courseDescription": "Hands-on training in biomedical informatics pedagogy. Practical experience in pedagogical approaches, variously including didactic, inquiry, project, team, case, field, and/or problem-based approaches. Students create course content, including lectures, exercises, and assessments, and evaluate learning activities and outcomes. Prerequisite: instructor consent.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Medical Option (Med-Ltr-CR/NC)"}, {"courseTitle": "Biomedical Informatics Teaching Methods", "courseNumber": "BIOMEDIN 290:", "courseDescription": "Hands-on training in biomedical informatics pedagogy. Practical experience in pedagogical approaches, variously including didactic, inquiry, project, team, case, field, and/or problem-based approaches. Students create course content, including lectures, exercises, and assessments, and evaluate learning activities and outcomes. Prerequisite: instructor consent.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Medical Option (Med-Ltr-CR/NC)"}, {"courseTitle": "Biomedical Informatics Teaching Methods", "courseNumber": "BIOMEDIN 290:", "courseDescription": "Hands-on training in biomedical informatics pedagogy. Practical experience in pedagogical approaches, variously including didactic, inquiry, project, team, case, field, and/or problem-based approaches. Students create course content, including lectures, exercises, and assessments, and evaluate learning activities and outcomes. Prerequisite: instructor consent.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Medical Option (Med-Ltr-CR/NC)"}, {"courseTitle": "Biomedical Informatics Teaching Methods", "courseNumber": "BIOMEDIN 290:", "courseDescription": "Hands-on training in biomedical informatics pedagogy. Practical experience in pedagogical approaches, variously including didactic, inquiry, project, team, case, field, and/or problem-based approaches. Students create course content, including lectures, exercises, and assessments, and evaluate learning activities and outcomes. Prerequisite: instructor consent.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Medical Option (Med-Ltr-CR/NC)"}, {"courseTitle": "Biomedical Informatics Teaching Methods", "courseNumber": "BIOMEDIN 290:", "courseDescription": "Hands-on training in biomedical informatics pedagogy. Practical experience in pedagogical approaches, variously including didactic, inquiry, project, team, case, field, and/or problem-based approaches. Students create course content, including lectures, exercises, and assessments, and evaluate learning activities and outcomes. Prerequisite: instructor consent.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Medical Option (Med-Ltr-CR/NC)"}, {"courseTitle": "Biomedical Informatics Teaching Methods", "courseNumber": "BIOMEDIN 290:", "courseDescription": "Hands-on training in biomedical informatics pedagogy. Practical experience in pedagogical approaches, variously including didactic, inquiry, project, team, case, field, and/or problem-based approaches. Students create course content, including lectures, exercises, and assessments, and evaluate learning activities and outcomes. Prerequisite: instructor consent.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Medical Option (Med-Ltr-CR/NC)"}, {"courseTitle": "Biomedical Informatics Teaching Methods", "courseNumber": "BIOMEDIN 290:", "courseDescription": "Hands-on training in biomedical informatics pedagogy. Practical experience in pedagogical approaches, variously including didactic, inquiry, project, team, case, field, and/or problem-based approaches. Students create course content, including lectures, exercises, and assessments, and evaluate learning activities and outcomes. Prerequisite: instructor consent.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Medical Option (Med-Ltr-CR/NC)"}, {"courseTitle": "Biomedical Informatics Teaching Methods", "courseNumber": "BIOMEDIN 290:", "courseDescription": "Hands-on training in biomedical informatics pedagogy. Practical experience in pedagogical approaches, variously including didactic, inquiry, project, team, case, field, and/or problem-based approaches. Students create course content, including lectures, exercises, and assessments, and evaluate learning activities and outcomes. Prerequisite: instructor consent.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Medical Option (Med-Ltr-CR/NC)"}, {"courseTitle": "Biomedical Informatics Teaching Methods", "courseNumber": "BIOMEDIN 290:", "courseDescription": "Hands-on training in biomedical informatics pedagogy. Practical experience in pedagogical approaches, variously including didactic, inquiry, project, team, case, field, and/or problem-based approaches. Students create course content, including lectures, exercises, and assessments, and evaluate learning activities and outcomes. Prerequisite: instructor consent.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Medical Option (Med-Ltr-CR/NC)"}, {"courseTitle": "Biomedical Informatics Teaching Methods", "courseNumber": "BIOMEDIN 290:", "courseDescription": "Hands-on training in biomedical informatics pedagogy. Practical experience in pedagogical approaches, variously including didactic, inquiry, project, team, case, field, and/or problem-based approaches. Students create course content, including lectures, exercises, and assessments, and evaluate learning activities and outcomes. Prerequisite: instructor consent.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Medical Option (Med-Ltr-CR/NC)"}, {"courseTitle": "Biomedical Informatics Teaching Methods", "courseNumber": "BIOMEDIN 290:", "courseDescription": "Hands-on training in biomedical informatics pedagogy. Practical experience in pedagogical approaches, variously including didactic, inquiry, project, team, case, field, and/or problem-based approaches. Students create course content, including lectures, exercises, and assessments, and evaluate learning activities and outcomes. Prerequisite: instructor consent.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Medical Option (Med-Ltr-CR/NC)"}, {"courseTitle": "Biomedical Informatics Teaching Methods", "courseNumber": "BIOMEDIN 290:", "courseDescription": "Hands-on training in biomedical informatics pedagogy. Practical experience in pedagogical approaches, variously including didactic, inquiry, project, team, case, field, and/or problem-based approaches. Students create course content, including lectures, exercises, and assessments, and evaluate learning activities and outcomes. Prerequisite: instructor consent.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Medical Option (Med-Ltr-CR/NC)"}, {"courseTitle": "Biomedical Informatics Teaching Methods", "courseNumber": "BIOMEDIN 290:", "courseDescription": "Hands-on training in biomedical informatics pedagogy. Practical experience in pedagogical approaches, variously including didactic, inquiry, project, team, case, field, and/or problem-based approaches. Students create course content, including lectures, exercises, and assessments, and evaluate learning activities and outcomes. Prerequisite: instructor consent.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Medical Option (Med-Ltr-CR/NC)"}, {"courseTitle": "Biomedical Informatics Teaching Methods", "courseNumber": "BIOMEDIN 290:", "courseDescription": "Hands-on training in biomedical informatics pedagogy. Practical experience in pedagogical approaches, variously including didactic, inquiry, project, team, case, field, and/or problem-based approaches. Students create course content, including lectures, exercises, and assessments, and evaluate learning activities and outcomes. Prerequisite: instructor consent.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Medical Option (Med-Ltr-CR/NC)"}, {"courseTitle": "Biomedical Informatics Teaching Methods", "courseNumber": "BIOMEDIN 290:", "courseDescription": "Hands-on training in biomedical informatics pedagogy. Practical experience in pedagogical approaches, variously including didactic, inquiry, project, team, case, field, and/or problem-based approaches. Students create course content, including lectures, exercises, and assessments, and evaluate learning activities and outcomes. Prerequisite: instructor consent.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Medical Option (Med-Ltr-CR/NC)"}, {"courseTitle": "Biomedical Informatics Teaching Methods", "courseNumber": "BIOMEDIN 290:", "courseDescription": "Hands-on training in biomedical informatics pedagogy. Practical experience in pedagogical approaches, variously including didactic, inquiry, project, team, case, field, and/or problem-based approaches. Students create course content, including lectures, exercises, and assessments, and evaluate learning activities and outcomes. Prerequisite: instructor consent.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Medical Option (Med-Ltr-CR/NC)"}, {"courseTitle": "Biomedical Informatics Teaching Methods", "courseNumber": "BIOMEDIN 290:", "courseDescription": "Hands-on training in biomedical informatics pedagogy. Practical experience in pedagogical approaches, variously including didactic, inquiry, project, team, case, field, and/or problem-based approaches. Students create course content, including lectures, exercises, and assessments, and evaluate learning activities and outcomes. Prerequisite: instructor consent.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Medical Option (Med-Ltr-CR/NC)"}, {"courseTitle": "Biomedical Informatics Teaching Methods", "courseNumber": "BIOMEDIN 290:", "courseDescription": "Hands-on training in biomedical informatics pedagogy. Practical experience in pedagogical approaches, variously including didactic, inquiry, project, team, case, field, and/or problem-based approaches. Students create course content, including lectures, exercises, and assessments, and evaluate learning activities and outcomes. Prerequisite: instructor consent.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Medical Option (Med-Ltr-CR/NC)"}, {"courseTitle": "Biomedical Informatics Teaching Methods", "courseNumber": "BIOMEDIN 290:", "courseDescription": "Hands-on training in biomedical informatics pedagogy. Practical experience in pedagogical approaches, variously including didactic, inquiry, project, team, case, field, and/or problem-based approaches. Students create course content, including lectures, exercises, and assessments, and evaluate learning activities and outcomes. Prerequisite: instructor consent.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Medical Option (Med-Ltr-CR/NC)"}, {"courseTitle": "Biomedical Informatics Teaching Methods", "courseNumber": "BIOMEDIN 290:", "courseDescription": "Hands-on training in biomedical informatics pedagogy. Practical experience in pedagogical approaches, variously including didactic, inquiry, project, team, case, field, and/or problem-based approaches. Students create course content, including lectures, exercises, and assessments, and evaluate learning activities and outcomes. Prerequisite: instructor consent.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Medical Option (Med-Ltr-CR/NC)"}, {"courseTitle": "Biomedical Informatics Teaching Methods", "courseNumber": "BIOMEDIN 290:", "courseDescription": "Hands-on training in biomedical informatics pedagogy. Practical experience in pedagogical approaches, variously including didactic, inquiry, project, team, case, field, and/or problem-based approaches. Students create course content, including lectures, exercises, and assessments, and evaluate learning activities and outcomes. Prerequisite: instructor consent.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Medical Option (Med-Ltr-CR/NC)"}, {"courseTitle": "Biomedical Informatics Teaching Methods", "courseNumber": "BIOMEDIN 290:", "courseDescription": "Hands-on training in biomedical informatics pedagogy. Practical experience in pedagogical approaches, variously including didactic, inquiry, project, team, case, field, and/or problem-based approaches. Students create course content, including lectures, exercises, and assessments, and evaluate learning activities and outcomes. Prerequisite: instructor consent.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Medical Option (Med-Ltr-CR/NC)"}, {"courseTitle": "Biomedical Informatics Teaching Methods", "courseNumber": "BIOMEDIN 290:", "courseDescription": "Hands-on training in biomedical informatics pedagogy. Practical experience in pedagogical approaches, variously including didactic, inquiry, project, team, case, field, and/or problem-based approaches. Students create course content, including lectures, exercises, and assessments, and evaluate learning activities and outcomes. Prerequisite: instructor consent.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Medical Option (Med-Ltr-CR/NC)"}, {"courseTitle": "Biomedical Informatics Teaching Methods", "courseNumber": "BIOMEDIN 290:", "courseDescription": "Hands-on training in biomedical informatics pedagogy. Practical experience in pedagogical approaches, variously including didactic, inquiry, project, team, case, field, and/or problem-based approaches. Students create course content, including lectures, exercises, and assessments, and evaluate learning activities and outcomes. Prerequisite: instructor consent.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Medical Option (Med-Ltr-CR/NC)"}, {"courseTitle": "Biomedical Informatics Teaching Methods", "courseNumber": "BIOMEDIN 290:", "courseDescription": "Hands-on training in biomedical informatics pedagogy. Practical experience in pedagogical approaches, variously including didactic, inquiry, project, team, case, field, and/or problem-based approaches. Students create course content, including lectures, exercises, and assessments, and evaluate learning activities and outcomes. Prerequisite: instructor consent.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Medical Option (Med-Ltr-CR/NC)"}, {"courseTitle": "Biomedical Informatics Teaching Methods", "courseNumber": "BIOMEDIN 290:", "courseDescription": "Hands-on training in biomedical informatics pedagogy. Practical experience in pedagogical approaches, variously including didactic, inquiry, project, team, case, field, and/or problem-based approaches. Students create course content, including lectures, exercises, and assessments, and evaluate learning activities and outcomes. Prerequisite: instructor consent.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Medical Option (Med-Ltr-CR/NC)"}, {"courseTitle": "Biomedical Informatics Teaching Methods", "courseNumber": "BIOMEDIN 290:", "courseDescription": "Hands-on training in biomedical informatics pedagogy. Practical experience in pedagogical approaches, variously including didactic, inquiry, project, team, case, field, and/or problem-based approaches. Students create course content, including lectures, exercises, and assessments, and evaluate learning activities and outcomes. Prerequisite: instructor consent.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Medical Option (Med-Ltr-CR/NC)"}, {"courseTitle": "Biomedical Informatics Teaching Methods", "courseNumber": "BIOMEDIN 290:", "courseDescription": "Hands-on training in biomedical informatics pedagogy. Practical experience in pedagogical approaches, variously including didactic, inquiry, project, team, case, field, and/or problem-based approaches. Students create course content, including lectures, exercises, and assessments, and evaluate learning activities and outcomes. Prerequisite: instructor consent.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Medical Option (Med-Ltr-CR/NC)"}, {"courseTitle": "Biomedical Informatics Teaching Methods", "courseNumber": "BIOMEDIN 290:", "courseDescription": "Hands-on training in biomedical informatics pedagogy. Practical experience in pedagogical approaches, variously including didactic, inquiry, project, team, case, field, and/or problem-based approaches. Students create course content, including lectures, exercises, and assessments, and evaluate learning activities and outcomes. Prerequisite: instructor consent.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Medical Option (Med-Ltr-CR/NC)"}, {"courseTitle": "Biomedical Informatics Teaching Methods", "courseNumber": "BIOMEDIN 290:", "courseDescription": "Hands-on training in biomedical informatics pedagogy. Practical experience in pedagogical approaches, variously including didactic, inquiry, project, team, case, field, and/or problem-based approaches. Students create course content, including lectures, exercises, and assessments, and evaluate learning activities and outcomes. Prerequisite: instructor consent.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Medical Option (Med-Ltr-CR/NC)"}]}}
{"Hector Garcia-Molina": {"courses": [{"courseTitle": "Computers and Photography: From Capture to Sharing", "courseNumber": "CS 45N:", "courseDescription": "Preference to freshmen with experience in photography and use of computers. Elements of photography, such as lighting, focus, depth of field, aperture, and composition. How a photographer makes photos available for computer viewing, reliably stores them, organizes them, tags them, searches them, and distributes them online. No programming experience required. Digital SLRs and editing software will be provided to those students who do not wish to use their own.", "courseAttributes": "Terms: Aut, Spr | Units: 3-4 | UG Reqs: WAY-CE | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Computers and Photography: From Capture to Sharing", "courseNumber": "CS 45N:", "courseDescription": "Preference to freshmen with experience in photography and use of computers. Elements of photography, such as lighting, focus, depth of field, aperture, and composition. How a photographer makes photos available for computer viewing, reliably stores them, organizes them, tags them, searches them, and distributes them online. No programming experience required. Digital SLRs and editing software will be provided to those students who do not wish to use their own.", "courseAttributes": "Terms: Aut, Spr | Units: 3-4 | UG Reqs: WAY-CE | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Computers and Photography: From Capture to Sharing", "courseNumber": "CS 45N:", "courseDescription": "Preference to freshmen with experience in photography and use of computers. Elements of photography, such as lighting, focus, depth of field, aperture, and composition. How a photographer makes photos available for computer viewing, reliably stores them, organizes them, tags them, searches them, and distributes them online. No programming experience required. Digital SLRs and editing software will be provided to those students who do not wish to use their own.", "courseAttributes": "Terms: Aut, Spr | Units: 3-4 | UG Reqs: WAY-CE | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Computers and Photography: From Capture to Sharing", "courseNumber": "CS 45N:", "courseDescription": "Preference to freshmen with experience in photography and use of computers. Elements of photography, such as lighting, focus, depth of field, aperture, and composition. How a photographer makes photos available for computer viewing, reliably stores them, organizes them, tags them, searches them, and distributes them online. No programming experience required. Digital SLRs and editing software will be provided to those students who do not wish to use their own.", "courseAttributes": "Terms: Aut, Spr | Units: 3-4 | UG Reqs: WAY-CE | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Computers and Photography: From Capture to Sharing", "courseNumber": "CS 45N:", "courseDescription": "Preference to freshmen with experience in photography and use of computers. Elements of photography, such as lighting, focus, depth of field, aperture, and composition. How a photographer makes photos available for computer viewing, reliably stores them, organizes them, tags them, searches them, and distributes them online. No programming experience required. Digital SLRs and editing software will be provided to those students who do not wish to use their own.", "courseAttributes": "Terms: Aut, Spr | Units: 3-4 | UG Reqs: WAY-CE | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Computers and Photography: From Capture to Sharing", "courseNumber": "CS 45N:", "courseDescription": "Preference to freshmen with experience in photography and use of computers. Elements of photography, such as lighting, focus, depth of field, aperture, and composition. How a photographer makes photos available for computer viewing, reliably stores them, organizes them, tags them, searches them, and distributes them online. No programming experience required. Digital SLRs and editing software will be provided to those students who do not wish to use their own.", "courseAttributes": "Terms: Aut, Spr | Units: 3-4 | UG Reqs: WAY-CE | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Computers and Photography: From Capture to Sharing", "courseNumber": "CS 45N:", "courseDescription": "Preference to freshmen with experience in photography and use of computers. Elements of photography, such as lighting, focus, depth of field, aperture, and composition. How a photographer makes photos available for computer viewing, reliably stores them, organizes them, tags them, searches them, and distributes them online. No programming experience required. Digital SLRs and editing software will be provided to those students who do not wish to use their own.", "courseAttributes": "Terms: Aut, Spr | Units: 3-4 | UG Reqs: WAY-CE | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Computers and Photography: From Capture to Sharing", "courseNumber": "CS 45N:", "courseDescription": "Preference to freshmen with experience in photography and use of computers. Elements of photography, such as lighting, focus, depth of field, aperture, and composition. How a photographer makes photos available for computer viewing, reliably stores them, organizes them, tags them, searches them, and distributes them online. No programming experience required. Digital SLRs and editing software will be provided to those students who do not wish to use their own.", "courseAttributes": "Terms: Aut, Spr | Units: 3-4 | UG Reqs: WAY-CE | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Computers and Photography: From Capture to Sharing", "courseNumber": "CS 45N:", "courseDescription": "Preference to freshmen with experience in photography and use of computers. Elements of photography, such as lighting, focus, depth of field, aperture, and composition. How a photographer makes photos available for computer viewing, reliably stores them, organizes them, tags them, searches them, and distributes them online. No programming experience required. Digital SLRs and editing software will be provided to those students who do not wish to use their own.", "courseAttributes": "Terms: Aut, Spr | Units: 3-4 | UG Reqs: WAY-CE | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Computers and Photography: From Capture to Sharing", "courseNumber": "CS 45N:", "courseDescription": "Preference to freshmen with experience in photography and use of computers. Elements of photography, such as lighting, focus, depth of field, aperture, and composition. How a photographer makes photos available for computer viewing, reliably stores them, organizes them, tags them, searches them, and distributes them online. No programming experience required. Digital SLRs and editing software will be provided to those students who do not wish to use their own.", "courseAttributes": "Terms: Aut, Spr | Units: 3-4 | UG Reqs: WAY-CE | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Computers and Photography: From Capture to Sharing", "courseNumber": "CS 45N:", "courseDescription": "Preference to freshmen with experience in photography and use of computers. Elements of photography, such as lighting, focus, depth of field, aperture, and composition. How a photographer makes photos available for computer viewing, reliably stores them, organizes them, tags them, searches them, and distributes them online. No programming experience required. Digital SLRs and editing software will be provided to those students who do not wish to use their own.", "courseAttributes": "Terms: Aut, Spr | Units: 3-4 | UG Reqs: WAY-CE | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Computers and Photography: From Capture to Sharing", "courseNumber": "CS 45N:", "courseDescription": "Preference to freshmen with experience in photography and use of computers. Elements of photography, such as lighting, focus, depth of field, aperture, and composition. How a photographer makes photos available for computer viewing, reliably stores them, organizes them, tags them, searches them, and distributes them online. No programming experience required. Digital SLRs and editing software will be provided to those students who do not wish to use their own.", "courseAttributes": "Terms: Aut, Spr | Units: 3-4 | UG Reqs: WAY-CE | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Computers and Photography: From Capture to Sharing", "courseNumber": "CS 45N:", "courseDescription": "Preference to freshmen with experience in photography and use of computers. Elements of photography, such as lighting, focus, depth of field, aperture, and composition. How a photographer makes photos available for computer viewing, reliably stores them, organizes them, tags them, searches them, and distributes them online. No programming experience required. Digital SLRs and editing software will be provided to those students who do not wish to use their own.", "courseAttributes": "Terms: Aut, Spr | Units: 3-4 | UG Reqs: WAY-CE | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Computers and Photography: From Capture to Sharing", "courseNumber": "CS 45N:", "courseDescription": "Preference to freshmen with experience in photography and use of computers. Elements of photography, such as lighting, focus, depth of field, aperture, and composition. How a photographer makes photos available for computer viewing, reliably stores them, organizes them, tags them, searches them, and distributes them online. No programming experience required. Digital SLRs and editing software will be provided to those students who do not wish to use their own.", "courseAttributes": "Terms: Aut, Spr | Units: 3-4 | UG Reqs: WAY-CE | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Computers and Photography: From Capture to Sharing", "courseNumber": "CS 45N:", "courseDescription": "Preference to freshmen with experience in photography and use of computers. Elements of photography, such as lighting, focus, depth of field, aperture, and composition. How a photographer makes photos available for computer viewing, reliably stores them, organizes them, tags them, searches them, and distributes them online. No programming experience required. Digital SLRs and editing software will be provided to those students who do not wish to use their own.", "courseAttributes": "Terms: Aut, Spr | Units: 3-4 | UG Reqs: WAY-CE | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Computers and Photography: From Capture to Sharing", "courseNumber": "CS 45N:", "courseDescription": "Preference to freshmen with experience in photography and use of computers. Elements of photography, such as lighting, focus, depth of field, aperture, and composition. How a photographer makes photos available for computer viewing, reliably stores them, organizes them, tags them, searches them, and distributes them online. No programming experience required. Digital SLRs and editing software will be provided to those students who do not wish to use their own.", "courseAttributes": "Terms: Aut, Spr | Units: 3-4 | UG Reqs: WAY-CE | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Computers and Photography: From Capture to Sharing", "courseNumber": "CS 45N:", "courseDescription": "Preference to freshmen with experience in photography and use of computers. Elements of photography, such as lighting, focus, depth of field, aperture, and composition. How a photographer makes photos available for computer viewing, reliably stores them, organizes them, tags them, searches them, and distributes them online. No programming experience required. Digital SLRs and editing software will be provided to those students who do not wish to use their own.", "courseAttributes": "Terms: Aut, Spr | Units: 3-4 | UG Reqs: WAY-CE | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Computers and Photography: From Capture to Sharing", "courseNumber": "CS 45N:", "courseDescription": "Preference to freshmen with experience in photography and use of computers. Elements of photography, such as lighting, focus, depth of field, aperture, and composition. How a photographer makes photos available for computer viewing, reliably stores them, organizes them, tags them, searches them, and distributes them online. No programming experience required. Digital SLRs and editing software will be provided to those students who do not wish to use their own.", "courseAttributes": "Terms: Aut, Spr | Units: 3-4 | UG Reqs: WAY-CE | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Computers and Photography: From Capture to Sharing", "courseNumber": "CS 45N:", "courseDescription": "Preference to freshmen with experience in photography and use of computers. Elements of photography, such as lighting, focus, depth of field, aperture, and composition. How a photographer makes photos available for computer viewing, reliably stores them, organizes them, tags them, searches them, and distributes them online. No programming experience required. Digital SLRs and editing software will be provided to those students who do not wish to use their own.", "courseAttributes": "Terms: Aut, Spr | Units: 3-4 | UG Reqs: WAY-CE | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Computers and Photography: From Capture to Sharing", "courseNumber": "CS 45N:", "courseDescription": "Preference to freshmen with experience in photography and use of computers. Elements of photography, such as lighting, focus, depth of field, aperture, and composition. How a photographer makes photos available for computer viewing, reliably stores them, organizes them, tags them, searches them, and distributes them online. No programming experience required. Digital SLRs and editing software will be provided to those students who do not wish to use their own.", "courseAttributes": "Terms: Aut, Spr | Units: 3-4 | UG Reqs: WAY-CE | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Computers and Photography: From Capture to Sharing", "courseNumber": "CS 45N:", "courseDescription": "Preference to freshmen with experience in photography and use of computers. Elements of photography, such as lighting, focus, depth of field, aperture, and composition. How a photographer makes photos available for computer viewing, reliably stores them, organizes them, tags them, searches them, and distributes them online. No programming experience required. Digital SLRs and editing software will be provided to those students who do not wish to use their own.", "courseAttributes": "Terms: Aut, Spr | Units: 3-4 | UG Reqs: WAY-CE | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Computers and Photography: From Capture to Sharing", "courseNumber": "CS 45N:", "courseDescription": "Preference to freshmen with experience in photography and use of computers. Elements of photography, such as lighting, focus, depth of field, aperture, and composition. How a photographer makes photos available for computer viewing, reliably stores them, organizes them, tags them, searches them, and distributes them online. No programming experience required. Digital SLRs and editing software will be provided to those students who do not wish to use their own.", "courseAttributes": "Terms: Aut, Spr | Units: 3-4 | UG Reqs: WAY-CE | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Computers and Photography: From Capture to Sharing", "courseNumber": "CS 45N:", "courseDescription": "Preference to freshmen with experience in photography and use of computers. Elements of photography, such as lighting, focus, depth of field, aperture, and composition. How a photographer makes photos available for computer viewing, reliably stores them, organizes them, tags them, searches them, and distributes them online. No programming experience required. Digital SLRs and editing software will be provided to those students who do not wish to use their own.", "courseAttributes": "Terms: Aut, Spr | Units: 3-4 | UG Reqs: WAY-CE | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Computers and Photography: From Capture to Sharing", "courseNumber": "CS 45N:", "courseDescription": "Preference to freshmen with experience in photography and use of computers. Elements of photography, such as lighting, focus, depth of field, aperture, and composition. How a photographer makes photos available for computer viewing, reliably stores them, organizes them, tags them, searches them, and distributes them online. No programming experience required. Digital SLRs and editing software will be provided to those students who do not wish to use their own.", "courseAttributes": "Terms: Aut, Spr | Units: 3-4 | UG Reqs: WAY-CE | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Computers and Photography: From Capture to Sharing", "courseNumber": "CS 45N:", "courseDescription": "Preference to freshmen with experience in photography and use of computers. Elements of photography, such as lighting, focus, depth of field, aperture, and composition. How a photographer makes photos available for computer viewing, reliably stores them, organizes them, tags them, searches them, and distributes them online. No programming experience required. Digital SLRs and editing software will be provided to those students who do not wish to use their own.", "courseAttributes": "Terms: Aut, Spr | Units: 3-4 | UG Reqs: WAY-CE | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Computers and Photography: From Capture to Sharing", "courseNumber": "CS 45N:", "courseDescription": "Preference to freshmen with experience in photography and use of computers. Elements of photography, such as lighting, focus, depth of field, aperture, and composition. How a photographer makes photos available for computer viewing, reliably stores them, organizes them, tags them, searches them, and distributes them online. No programming experience required. Digital SLRs and editing software will be provided to those students who do not wish to use their own.", "courseAttributes": "Terms: Aut, Spr | Units: 3-4 | UG Reqs: WAY-CE | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Computers and Photography: From Capture to Sharing", "courseNumber": "CS 45N:", "courseDescription": "Preference to freshmen with experience in photography and use of computers. Elements of photography, such as lighting, focus, depth of field, aperture, and composition. How a photographer makes photos available for computer viewing, reliably stores them, organizes them, tags them, searches them, and distributes them online. No programming experience required. Digital SLRs and editing software will be provided to those students who do not wish to use their own.", "courseAttributes": "Terms: Aut, Spr | Units: 3-4 | UG Reqs: WAY-CE | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Computers and Photography: From Capture to Sharing", "courseNumber": "CS 45N:", "courseDescription": "Preference to freshmen with experience in photography and use of computers. Elements of photography, such as lighting, focus, depth of field, aperture, and composition. How a photographer makes photos available for computer viewing, reliably stores them, organizes them, tags them, searches them, and distributes them online. No programming experience required. Digital SLRs and editing software will be provided to those students who do not wish to use their own.", "courseAttributes": "Terms: Aut, Spr | Units: 3-4 | UG Reqs: WAY-CE | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Computers and Photography: From Capture to Sharing", "courseNumber": "CS 45N:", "courseDescription": "Preference to freshmen with experience in photography and use of computers. Elements of photography, such as lighting, focus, depth of field, aperture, and composition. How a photographer makes photos available for computer viewing, reliably stores them, organizes them, tags them, searches them, and distributes them online. No programming experience required. Digital SLRs and editing software will be provided to those students who do not wish to use their own.", "courseAttributes": "Terms: Aut, Spr | Units: 3-4 | UG Reqs: WAY-CE | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Computers and Photography: From Capture to Sharing", "courseNumber": "CS 45N:", "courseDescription": "Preference to freshmen with experience in photography and use of computers. Elements of photography, such as lighting, focus, depth of field, aperture, and composition. How a photographer makes photos available for computer viewing, reliably stores them, organizes them, tags them, searches them, and distributes them online. No programming experience required. Digital SLRs and editing software will be provided to those students who do not wish to use their own.", "courseAttributes": "Terms: Aut, Spr | Units: 3-4 | UG Reqs: WAY-CE | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Computers and Photography: From Capture to Sharing", "courseNumber": "CS 45N:", "courseDescription": "Preference to freshmen with experience in photography and use of computers. Elements of photography, such as lighting, focus, depth of field, aperture, and composition. How a photographer makes photos available for computer viewing, reliably stores them, organizes them, tags them, searches them, and distributes them online. No programming experience required. Digital SLRs and editing software will be provided to those students who do not wish to use their own.", "courseAttributes": "Terms: Aut, Spr | Units: 3-4 | UG Reqs: WAY-CE | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Computers and Photography: From Capture to Sharing", "courseNumber": "CS 45N:", "courseDescription": "Preference to freshmen with experience in photography and use of computers. Elements of photography, such as lighting, focus, depth of field, aperture, and composition. How a photographer makes photos available for computer viewing, reliably stores them, organizes them, tags them, searches them, and distributes them online. No programming experience required. Digital SLRs and editing software will be provided to those students who do not wish to use their own.", "courseAttributes": "Terms: Aut, Spr | Units: 3-4 | UG Reqs: WAY-CE | Grading: Letter or Credit/No Credit"}]}}
{"Kayvon Fatahalian": {"courses": [{"courseTitle": "Parallel Computing", "courseNumber": "CS 149:", "courseDescription": "This course is an introduction to parallelism and parallel programming. Most new computer architectures are parallel; programming these machines requires knowledge of the basic issues of and techniques for writing parallel software. Topics: varieties of parallelism in current hardware (e.g., fast networks, multicore, accelerators such as GPUs, vector instruction sets), importance of locality, implicit vs. explicit parallelism, shared vs. non-shared memory, synchronization mechanisms (locking, atomicity, transactions, barriers), and parallel programming models (threads, data parallel/streaming, MapReduce, Apache Spark, SPMD, message passing, SIMT, transactions, and nested parallelism). Significant parallel programming assignments will be given as homework. The course is open to students who have completed the introductory CS course sequence through 110.", "courseAttributes": "Terms: Win | Units: 3-4 | UG Reqs: GER:DB-EngrAppSci | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Parallel Computing", "courseNumber": "CS 149:", "courseDescription": "This course is an introduction to parallelism and parallel programming. Most new computer architectures are parallel; programming these machines requires knowledge of the basic issues of and techniques for writing parallel software. Topics: varieties of parallelism in current hardware (e.g., fast networks, multicore, accelerators such as GPUs, vector instruction sets), importance of locality, implicit vs. explicit parallelism, shared vs. non-shared memory, synchronization mechanisms (locking, atomicity, transactions, barriers), and parallel programming models (threads, data parallel/streaming, MapReduce, Apache Spark, SPMD, message passing, SIMT, transactions, and nested parallelism). Significant parallel programming assignments will be given as homework. The course is open to students who have completed the introductory CS course sequence through 110.", "courseAttributes": "Terms: Win | Units: 3-4 | UG Reqs: GER:DB-EngrAppSci | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Parallel Computing", "courseNumber": "CS 149:", "courseDescription": "This course is an introduction to parallelism and parallel programming. Most new computer architectures are parallel; programming these machines requires knowledge of the basic issues of and techniques for writing parallel software. Topics: varieties of parallelism in current hardware (e.g., fast networks, multicore, accelerators such as GPUs, vector instruction sets), importance of locality, implicit vs. explicit parallelism, shared vs. non-shared memory, synchronization mechanisms (locking, atomicity, transactions, barriers), and parallel programming models (threads, data parallel/streaming, MapReduce, Apache Spark, SPMD, message passing, SIMT, transactions, and nested parallelism). Significant parallel programming assignments will be given as homework. The course is open to students who have completed the introductory CS course sequence through 110.", "courseAttributes": "Terms: Win | Units: 3-4 | UG Reqs: GER:DB-EngrAppSci | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Parallel Computing", "courseNumber": "CS 149:", "courseDescription": "This course is an introduction to parallelism and parallel programming. Most new computer architectures are parallel; programming these machines requires knowledge of the basic issues of and techniques for writing parallel software. Topics: varieties of parallelism in current hardware (e.g., fast networks, multicore, accelerators such as GPUs, vector instruction sets), importance of locality, implicit vs. explicit parallelism, shared vs. non-shared memory, synchronization mechanisms (locking, atomicity, transactions, barriers), and parallel programming models (threads, data parallel/streaming, MapReduce, Apache Spark, SPMD, message passing, SIMT, transactions, and nested parallelism). Significant parallel programming assignments will be given as homework. The course is open to students who have completed the introductory CS course sequence through 110.", "courseAttributes": "Terms: Win | Units: 3-4 | UG Reqs: GER:DB-EngrAppSci | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Parallel Computing", "courseNumber": "CS 149:", "courseDescription": "This course is an introduction to parallelism and parallel programming. Most new computer architectures are parallel; programming these machines requires knowledge of the basic issues of and techniques for writing parallel software. Topics: varieties of parallelism in current hardware (e.g., fast networks, multicore, accelerators such as GPUs, vector instruction sets), importance of locality, implicit vs. explicit parallelism, shared vs. non-shared memory, synchronization mechanisms (locking, atomicity, transactions, barriers), and parallel programming models (threads, data parallel/streaming, MapReduce, Apache Spark, SPMD, message passing, SIMT, transactions, and nested parallelism). Significant parallel programming assignments will be given as homework. The course is open to students who have completed the introductory CS course sequence through 110.", "courseAttributes": "Terms: Win | Units: 3-4 | UG Reqs: GER:DB-EngrAppSci | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Parallel Computing", "courseNumber": "CS 149:", "courseDescription": "This course is an introduction to parallelism and parallel programming. Most new computer architectures are parallel; programming these machines requires knowledge of the basic issues of and techniques for writing parallel software. Topics: varieties of parallelism in current hardware (e.g., fast networks, multicore, accelerators such as GPUs, vector instruction sets), importance of locality, implicit vs. explicit parallelism, shared vs. non-shared memory, synchronization mechanisms (locking, atomicity, transactions, barriers), and parallel programming models (threads, data parallel/streaming, MapReduce, Apache Spark, SPMD, message passing, SIMT, transactions, and nested parallelism). Significant parallel programming assignments will be given as homework. The course is open to students who have completed the introductory CS course sequence through 110.", "courseAttributes": "Terms: Win | Units: 3-4 | UG Reqs: GER:DB-EngrAppSci | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Parallel Computing", "courseNumber": "CS 149:", "courseDescription": "This course is an introduction to parallelism and parallel programming. Most new computer architectures are parallel; programming these machines requires knowledge of the basic issues of and techniques for writing parallel software. Topics: varieties of parallelism in current hardware (e.g., fast networks, multicore, accelerators such as GPUs, vector instruction sets), importance of locality, implicit vs. explicit parallelism, shared vs. non-shared memory, synchronization mechanisms (locking, atomicity, transactions, barriers), and parallel programming models (threads, data parallel/streaming, MapReduce, Apache Spark, SPMD, message passing, SIMT, transactions, and nested parallelism). Significant parallel programming assignments will be given as homework. The course is open to students who have completed the introductory CS course sequence through 110.", "courseAttributes": "Terms: Win | Units: 3-4 | UG Reqs: GER:DB-EngrAppSci | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Parallel Computing", "courseNumber": "CS 149:", "courseDescription": "This course is an introduction to parallelism and parallel programming. Most new computer architectures are parallel; programming these machines requires knowledge of the basic issues of and techniques for writing parallel software. Topics: varieties of parallelism in current hardware (e.g., fast networks, multicore, accelerators such as GPUs, vector instruction sets), importance of locality, implicit vs. explicit parallelism, shared vs. non-shared memory, synchronization mechanisms (locking, atomicity, transactions, barriers), and parallel programming models (threads, data parallel/streaming, MapReduce, Apache Spark, SPMD, message passing, SIMT, transactions, and nested parallelism). Significant parallel programming assignments will be given as homework. The course is open to students who have completed the introductory CS course sequence through 110.", "courseAttributes": "Terms: Win | Units: 3-4 | UG Reqs: GER:DB-EngrAppSci | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Parallel Computing", "courseNumber": "CS 149:", "courseDescription": "This course is an introduction to parallelism and parallel programming. Most new computer architectures are parallel; programming these machines requires knowledge of the basic issues of and techniques for writing parallel software. Topics: varieties of parallelism in current hardware (e.g., fast networks, multicore, accelerators such as GPUs, vector instruction sets), importance of locality, implicit vs. explicit parallelism, shared vs. non-shared memory, synchronization mechanisms (locking, atomicity, transactions, barriers), and parallel programming models (threads, data parallel/streaming, MapReduce, Apache Spark, SPMD, message passing, SIMT, transactions, and nested parallelism). Significant parallel programming assignments will be given as homework. The course is open to students who have completed the introductory CS course sequence through 110.", "courseAttributes": "Terms: Win | Units: 3-4 | UG Reqs: GER:DB-EngrAppSci | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Parallel Computing", "courseNumber": "CS 149:", "courseDescription": "This course is an introduction to parallelism and parallel programming. Most new computer architectures are parallel; programming these machines requires knowledge of the basic issues of and techniques for writing parallel software. Topics: varieties of parallelism in current hardware (e.g., fast networks, multicore, accelerators such as GPUs, vector instruction sets), importance of locality, implicit vs. explicit parallelism, shared vs. non-shared memory, synchronization mechanisms (locking, atomicity, transactions, barriers), and parallel programming models (threads, data parallel/streaming, MapReduce, Apache Spark, SPMD, message passing, SIMT, transactions, and nested parallelism). Significant parallel programming assignments will be given as homework. The course is open to students who have completed the introductory CS course sequence through 110.", "courseAttributes": "Terms: Win | Units: 3-4 | UG Reqs: GER:DB-EngrAppSci | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Parallel Computing", "courseNumber": "CS 149:", "courseDescription": "This course is an introduction to parallelism and parallel programming. Most new computer architectures are parallel; programming these machines requires knowledge of the basic issues of and techniques for writing parallel software. Topics: varieties of parallelism in current hardware (e.g., fast networks, multicore, accelerators such as GPUs, vector instruction sets), importance of locality, implicit vs. explicit parallelism, shared vs. non-shared memory, synchronization mechanisms (locking, atomicity, transactions, barriers), and parallel programming models (threads, data parallel/streaming, MapReduce, Apache Spark, SPMD, message passing, SIMT, transactions, and nested parallelism). Significant parallel programming assignments will be given as homework. The course is open to students who have completed the introductory CS course sequence through 110.", "courseAttributes": "Terms: Win | Units: 3-4 | UG Reqs: GER:DB-EngrAppSci | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Parallel Computing", "courseNumber": "CS 149:", "courseDescription": "This course is an introduction to parallelism and parallel programming. Most new computer architectures are parallel; programming these machines requires knowledge of the basic issues of and techniques for writing parallel software. Topics: varieties of parallelism in current hardware (e.g., fast networks, multicore, accelerators such as GPUs, vector instruction sets), importance of locality, implicit vs. explicit parallelism, shared vs. non-shared memory, synchronization mechanisms (locking, atomicity, transactions, barriers), and parallel programming models (threads, data parallel/streaming, MapReduce, Apache Spark, SPMD, message passing, SIMT, transactions, and nested parallelism). Significant parallel programming assignments will be given as homework. The course is open to students who have completed the introductory CS course sequence through 110.", "courseAttributes": "Terms: Win | Units: 3-4 | UG Reqs: GER:DB-EngrAppSci | Grading: Letter or Credit/No Credit"}]}}
{"Jure Leskovec": {"courses": [{"courseTitle": "Directed Study", "courseNumber": "BIOE 391:", "courseDescription": "May be used to prepare for research during a later quarter in 392. Faculty sponsor required. May be repeated for credit.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Satisfactory/No Credit"}, {"courseTitle": "Directed Study", "courseNumber": "BIOE 391:", "courseDescription": "May be used to prepare for research during a later quarter in 392. Faculty sponsor required. May be repeated for credit.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Satisfactory/No Credit"}, {"courseTitle": "Directed Study", "courseNumber": "BIOE 391:", "courseDescription": "May be used to prepare for research during a later quarter in 392. Faculty sponsor required. May be repeated for credit.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Satisfactory/No Credit"}, {"courseTitle": "Directed Study", "courseNumber": "BIOE 391:", "courseDescription": "May be used to prepare for research during a later quarter in 392. Faculty sponsor required. May be repeated for credit.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Satisfactory/No Credit"}, {"courseTitle": "Directed Study", "courseNumber": "BIOE 391:", "courseDescription": "May be used to prepare for research during a later quarter in 392. Faculty sponsor required. May be repeated for credit.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Satisfactory/No Credit"}, {"courseTitle": "Directed Study", "courseNumber": "BIOE 391:", "courseDescription": "May be used to prepare for research during a later quarter in 392. Faculty sponsor required. May be repeated for credit.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Satisfactory/No Credit"}, {"courseTitle": "Directed Study", "courseNumber": "BIOE 391:", "courseDescription": "May be used to prepare for research during a later quarter in 392. Faculty sponsor required. May be repeated for credit.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Satisfactory/No Credit"}, {"courseTitle": "Directed Study", "courseNumber": "BIOE 391:", "courseDescription": "May be used to prepare for research during a later quarter in 392. Faculty sponsor required. May be repeated for credit.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Satisfactory/No Credit"}, {"courseTitle": "Directed Study", "courseNumber": "BIOE 391:", "courseDescription": "May be used to prepare for research during a later quarter in 392. Faculty sponsor required. May be repeated for credit.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Satisfactory/No Credit"}, {"courseTitle": "Directed Study", "courseNumber": "BIOE 391:", "courseDescription": "May be used to prepare for research during a later quarter in 392. Faculty sponsor required. May be repeated for credit.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Satisfactory/No Credit"}, {"courseTitle": "Directed Study", "courseNumber": "BIOE 391:", "courseDescription": "May be used to prepare for research during a later quarter in 392. Faculty sponsor required. May be repeated for credit.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Satisfactory/No Credit"}, {"courseTitle": "Directed Study", "courseNumber": "BIOE 391:", "courseDescription": "May be used to prepare for research during a later quarter in 392. Faculty sponsor required. May be repeated for credit.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Satisfactory/No Credit"}, {"courseTitle": "Directed Study", "courseNumber": "BIOE 391:", "courseDescription": "May be used to prepare for research during a later quarter in 392. Faculty sponsor required. May be repeated for credit.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Satisfactory/No Credit"}, {"courseTitle": "Directed Study", "courseNumber": "BIOE 391:", "courseDescription": "May be used to prepare for research during a later quarter in 392. Faculty sponsor required. May be repeated for credit.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Satisfactory/No Credit"}, {"courseTitle": "Directed Study", "courseNumber": "BIOE 391:", "courseDescription": "May be used to prepare for research during a later quarter in 392. Faculty sponsor required. May be repeated for credit.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Satisfactory/No Credit"}, {"courseTitle": "Directed Study", "courseNumber": "BIOE 391:", "courseDescription": "May be used to prepare for research during a later quarter in 392. Faculty sponsor required. May be repeated for credit.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Satisfactory/No Credit"}, {"courseTitle": "Directed Study", "courseNumber": "BIOE 391:", "courseDescription": "May be used to prepare for research during a later quarter in 392. Faculty sponsor required. May be repeated for credit.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Satisfactory/No Credit"}, {"courseTitle": "Directed Study", "courseNumber": "BIOE 391:", "courseDescription": "May be used to prepare for research during a later quarter in 392. Faculty sponsor required. May be repeated for credit.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Satisfactory/No Credit"}, {"courseTitle": "Directed Study", "courseNumber": "BIOE 391:", "courseDescription": "May be used to prepare for research during a later quarter in 392. Faculty sponsor required. May be repeated for credit.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Satisfactory/No Credit"}, {"courseTitle": "Directed Study", "courseNumber": "BIOE 391:", "courseDescription": "May be used to prepare for research during a later quarter in 392. Faculty sponsor required. May be repeated for credit.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Satisfactory/No Credit"}, {"courseTitle": "Directed Study", "courseNumber": "BIOE 391:", "courseDescription": "May be used to prepare for research during a later quarter in 392. Faculty sponsor required. May be repeated for credit.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Satisfactory/No Credit"}, {"courseTitle": "Directed Study", "courseNumber": "BIOE 391:", "courseDescription": "May be used to prepare for research during a later quarter in 392. Faculty sponsor required. May be repeated for credit.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Satisfactory/No Credit"}, {"courseTitle": "Directed Study", "courseNumber": "BIOE 391:", "courseDescription": "May be used to prepare for research during a later quarter in 392. Faculty sponsor required. May be repeated for credit.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Satisfactory/No Credit"}, {"courseTitle": "Directed Study", "courseNumber": "BIOE 391:", "courseDescription": "May be used to prepare for research during a later quarter in 392. Faculty sponsor required. May be repeated for credit.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Satisfactory/No Credit"}, {"courseTitle": "Directed Study", "courseNumber": "BIOE 391:", "courseDescription": "May be used to prepare for research during a later quarter in 392. Faculty sponsor required. May be repeated for credit.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Satisfactory/No Credit"}, {"courseTitle": "Directed Study", "courseNumber": "BIOE 391:", "courseDescription": "May be used to prepare for research during a later quarter in 392. Faculty sponsor required. May be repeated for credit.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Satisfactory/No Credit"}, {"courseTitle": "Directed Study", "courseNumber": "BIOE 391:", "courseDescription": "May be used to prepare for research during a later quarter in 392. Faculty sponsor required. May be repeated for credit.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Satisfactory/No Credit"}, {"courseTitle": "Directed Study", "courseNumber": "BIOE 391:", "courseDescription": "May be used to prepare for research during a later quarter in 392. Faculty sponsor required. May be repeated for credit.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Satisfactory/No Credit"}, {"courseTitle": "Directed Study", "courseNumber": "BIOE 391:", "courseDescription": "May be used to prepare for research during a later quarter in 392. Faculty sponsor required. May be repeated for credit.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Satisfactory/No Credit"}, {"courseTitle": "Directed Study", "courseNumber": "BIOE 391:", "courseDescription": "May be used to prepare for research during a later quarter in 392. Faculty sponsor required. May be repeated for credit.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Satisfactory/No Credit"}, {"courseTitle": "Directed Study", "courseNumber": "BIOE 391:", "courseDescription": "May be used to prepare for research during a later quarter in 392. Faculty sponsor required. May be repeated for credit.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Satisfactory/No Credit"}]}}
{"Kunle Olukotun": {"courses": [{"courseTitle": "Parallel Computing", "courseNumber": "CS 149:", "courseDescription": "This course is an introduction to parallelism and parallel programming. Most new computer architectures are parallel; programming these machines requires knowledge of the basic issues of and techniques for writing parallel software. Topics: varieties of parallelism in current hardware (e.g., fast networks, multicore, accelerators such as GPUs, vector instruction sets), importance of locality, implicit vs. explicit parallelism, shared vs. non-shared memory, synchronization mechanisms (locking, atomicity, transactions, barriers), and parallel programming models (threads, data parallel/streaming, MapReduce, Apache Spark, SPMD, message passing, SIMT, transactions, and nested parallelism). Significant parallel programming assignments will be given as homework. The course is open to students who have completed the introductory CS course sequence through 110.", "courseAttributes": "Terms: Win | Units: 3-4 | UG Reqs: GER:DB-EngrAppSci | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Parallel Computing", "courseNumber": "CS 149:", "courseDescription": "This course is an introduction to parallelism and parallel programming. Most new computer architectures are parallel; programming these machines requires knowledge of the basic issues of and techniques for writing parallel software. Topics: varieties of parallelism in current hardware (e.g., fast networks, multicore, accelerators such as GPUs, vector instruction sets), importance of locality, implicit vs. explicit parallelism, shared vs. non-shared memory, synchronization mechanisms (locking, atomicity, transactions, barriers), and parallel programming models (threads, data parallel/streaming, MapReduce, Apache Spark, SPMD, message passing, SIMT, transactions, and nested parallelism). Significant parallel programming assignments will be given as homework. The course is open to students who have completed the introductory CS course sequence through 110.", "courseAttributes": "Terms: Win | Units: 3-4 | UG Reqs: GER:DB-EngrAppSci | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Parallel Computing", "courseNumber": "CS 149:", "courseDescription": "This course is an introduction to parallelism and parallel programming. Most new computer architectures are parallel; programming these machines requires knowledge of the basic issues of and techniques for writing parallel software. Topics: varieties of parallelism in current hardware (e.g., fast networks, multicore, accelerators such as GPUs, vector instruction sets), importance of locality, implicit vs. explicit parallelism, shared vs. non-shared memory, synchronization mechanisms (locking, atomicity, transactions, barriers), and parallel programming models (threads, data parallel/streaming, MapReduce, Apache Spark, SPMD, message passing, SIMT, transactions, and nested parallelism). Significant parallel programming assignments will be given as homework. The course is open to students who have completed the introductory CS course sequence through 110.", "courseAttributes": "Terms: Win | Units: 3-4 | UG Reqs: GER:DB-EngrAppSci | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Parallel Computing", "courseNumber": "CS 149:", "courseDescription": "This course is an introduction to parallelism and parallel programming. Most new computer architectures are parallel; programming these machines requires knowledge of the basic issues of and techniques for writing parallel software. Topics: varieties of parallelism in current hardware (e.g., fast networks, multicore, accelerators such as GPUs, vector instruction sets), importance of locality, implicit vs. explicit parallelism, shared vs. non-shared memory, synchronization mechanisms (locking, atomicity, transactions, barriers), and parallel programming models (threads, data parallel/streaming, MapReduce, Apache Spark, SPMD, message passing, SIMT, transactions, and nested parallelism). Significant parallel programming assignments will be given as homework. The course is open to students who have completed the introductory CS course sequence through 110.", "courseAttributes": "Terms: Win | Units: 3-4 | UG Reqs: GER:DB-EngrAppSci | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Parallel Computing", "courseNumber": "CS 149:", "courseDescription": "This course is an introduction to parallelism and parallel programming. Most new computer architectures are parallel; programming these machines requires knowledge of the basic issues of and techniques for writing parallel software. Topics: varieties of parallelism in current hardware (e.g., fast networks, multicore, accelerators such as GPUs, vector instruction sets), importance of locality, implicit vs. explicit parallelism, shared vs. non-shared memory, synchronization mechanisms (locking, atomicity, transactions, barriers), and parallel programming models (threads, data parallel/streaming, MapReduce, Apache Spark, SPMD, message passing, SIMT, transactions, and nested parallelism). Significant parallel programming assignments will be given as homework. The course is open to students who have completed the introductory CS course sequence through 110.", "courseAttributes": "Terms: Win | Units: 3-4 | UG Reqs: GER:DB-EngrAppSci | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Parallel Computing", "courseNumber": "CS 149:", "courseDescription": "This course is an introduction to parallelism and parallel programming. Most new computer architectures are parallel; programming these machines requires knowledge of the basic issues of and techniques for writing parallel software. Topics: varieties of parallelism in current hardware (e.g., fast networks, multicore, accelerators such as GPUs, vector instruction sets), importance of locality, implicit vs. explicit parallelism, shared vs. non-shared memory, synchronization mechanisms (locking, atomicity, transactions, barriers), and parallel programming models (threads, data parallel/streaming, MapReduce, Apache Spark, SPMD, message passing, SIMT, transactions, and nested parallelism). Significant parallel programming assignments will be given as homework. The course is open to students who have completed the introductory CS course sequence through 110.", "courseAttributes": "Terms: Win | Units: 3-4 | UG Reqs: GER:DB-EngrAppSci | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Parallel Computing", "courseNumber": "CS 149:", "courseDescription": "This course is an introduction to parallelism and parallel programming. Most new computer architectures are parallel; programming these machines requires knowledge of the basic issues of and techniques for writing parallel software. Topics: varieties of parallelism in current hardware (e.g., fast networks, multicore, accelerators such as GPUs, vector instruction sets), importance of locality, implicit vs. explicit parallelism, shared vs. non-shared memory, synchronization mechanisms (locking, atomicity, transactions, barriers), and parallel programming models (threads, data parallel/streaming, MapReduce, Apache Spark, SPMD, message passing, SIMT, transactions, and nested parallelism). Significant parallel programming assignments will be given as homework. The course is open to students who have completed the introductory CS course sequence through 110.", "courseAttributes": "Terms: Win | Units: 3-4 | UG Reqs: GER:DB-EngrAppSci | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Parallel Computing", "courseNumber": "CS 149:", "courseDescription": "This course is an introduction to parallelism and parallel programming. Most new computer architectures are parallel; programming these machines requires knowledge of the basic issues of and techniques for writing parallel software. Topics: varieties of parallelism in current hardware (e.g., fast networks, multicore, accelerators such as GPUs, vector instruction sets), importance of locality, implicit vs. explicit parallelism, shared vs. non-shared memory, synchronization mechanisms (locking, atomicity, transactions, barriers), and parallel programming models (threads, data parallel/streaming, MapReduce, Apache Spark, SPMD, message passing, SIMT, transactions, and nested parallelism). Significant parallel programming assignments will be given as homework. The course is open to students who have completed the introductory CS course sequence through 110.", "courseAttributes": "Terms: Win | Units: 3-4 | UG Reqs: GER:DB-EngrAppSci | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Parallel Computing", "courseNumber": "CS 149:", "courseDescription": "This course is an introduction to parallelism and parallel programming. Most new computer architectures are parallel; programming these machines requires knowledge of the basic issues of and techniques for writing parallel software. Topics: varieties of parallelism in current hardware (e.g., fast networks, multicore, accelerators such as GPUs, vector instruction sets), importance of locality, implicit vs. explicit parallelism, shared vs. non-shared memory, synchronization mechanisms (locking, atomicity, transactions, barriers), and parallel programming models (threads, data parallel/streaming, MapReduce, Apache Spark, SPMD, message passing, SIMT, transactions, and nested parallelism). Significant parallel programming assignments will be given as homework. The course is open to students who have completed the introductory CS course sequence through 110.", "courseAttributes": "Terms: Win | Units: 3-4 | UG Reqs: GER:DB-EngrAppSci | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Parallel Computing", "courseNumber": "CS 149:", "courseDescription": "This course is an introduction to parallelism and parallel programming. Most new computer architectures are parallel; programming these machines requires knowledge of the basic issues of and techniques for writing parallel software. Topics: varieties of parallelism in current hardware (e.g., fast networks, multicore, accelerators such as GPUs, vector instruction sets), importance of locality, implicit vs. explicit parallelism, shared vs. non-shared memory, synchronization mechanisms (locking, atomicity, transactions, barriers), and parallel programming models (threads, data parallel/streaming, MapReduce, Apache Spark, SPMD, message passing, SIMT, transactions, and nested parallelism). Significant parallel programming assignments will be given as homework. The course is open to students who have completed the introductory CS course sequence through 110.", "courseAttributes": "Terms: Win | Units: 3-4 | UG Reqs: GER:DB-EngrAppSci | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Parallel Computing", "courseNumber": "CS 149:", "courseDescription": "This course is an introduction to parallelism and parallel programming. Most new computer architectures are parallel; programming these machines requires knowledge of the basic issues of and techniques for writing parallel software. Topics: varieties of parallelism in current hardware (e.g., fast networks, multicore, accelerators such as GPUs, vector instruction sets), importance of locality, implicit vs. explicit parallelism, shared vs. non-shared memory, synchronization mechanisms (locking, atomicity, transactions, barriers), and parallel programming models (threads, data parallel/streaming, MapReduce, Apache Spark, SPMD, message passing, SIMT, transactions, and nested parallelism). Significant parallel programming assignments will be given as homework. The course is open to students who have completed the introductory CS course sequence through 110.", "courseAttributes": "Terms: Win | Units: 3-4 | UG Reqs: GER:DB-EngrAppSci | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Parallel Computing", "courseNumber": "CS 149:", "courseDescription": "This course is an introduction to parallelism and parallel programming. Most new computer architectures are parallel; programming these machines requires knowledge of the basic issues of and techniques for writing parallel software. Topics: varieties of parallelism in current hardware (e.g., fast networks, multicore, accelerators such as GPUs, vector instruction sets), importance of locality, implicit vs. explicit parallelism, shared vs. non-shared memory, synchronization mechanisms (locking, atomicity, transactions, barriers), and parallel programming models (threads, data parallel/streaming, MapReduce, Apache Spark, SPMD, message passing, SIMT, transactions, and nested parallelism). Significant parallel programming assignments will be given as homework. The course is open to students who have completed the introductory CS course sequence through 110.", "courseAttributes": "Terms: Win | Units: 3-4 | UG Reqs: GER:DB-EngrAppSci | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Parallel Computing", "courseNumber": "CS 149:", "courseDescription": "This course is an introduction to parallelism and parallel programming. Most new computer architectures are parallel; programming these machines requires knowledge of the basic issues of and techniques for writing parallel software. Topics: varieties of parallelism in current hardware (e.g., fast networks, multicore, accelerators such as GPUs, vector instruction sets), importance of locality, implicit vs. explicit parallelism, shared vs. non-shared memory, synchronization mechanisms (locking, atomicity, transactions, barriers), and parallel programming models (threads, data parallel/streaming, MapReduce, Apache Spark, SPMD, message passing, SIMT, transactions, and nested parallelism). Significant parallel programming assignments will be given as homework. The course is open to students who have completed the introductory CS course sequence through 110.", "courseAttributes": "Terms: Win | Units: 3-4 | UG Reqs: GER:DB-EngrAppSci | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Parallel Computing", "courseNumber": "CS 149:", "courseDescription": "This course is an introduction to parallelism and parallel programming. Most new computer architectures are parallel; programming these machines requires knowledge of the basic issues of and techniques for writing parallel software. Topics: varieties of parallelism in current hardware (e.g., fast networks, multicore, accelerators such as GPUs, vector instruction sets), importance of locality, implicit vs. explicit parallelism, shared vs. non-shared memory, synchronization mechanisms (locking, atomicity, transactions, barriers), and parallel programming models (threads, data parallel/streaming, MapReduce, Apache Spark, SPMD, message passing, SIMT, transactions, and nested parallelism). Significant parallel programming assignments will be given as homework. The course is open to students who have completed the introductory CS course sequence through 110.", "courseAttributes": "Terms: Win | Units: 3-4 | UG Reqs: GER:DB-EngrAppSci | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Parallel Computing", "courseNumber": "CS 149:", "courseDescription": "This course is an introduction to parallelism and parallel programming. Most new computer architectures are parallel; programming these machines requires knowledge of the basic issues of and techniques for writing parallel software. Topics: varieties of parallelism in current hardware (e.g., fast networks, multicore, accelerators such as GPUs, vector instruction sets), importance of locality, implicit vs. explicit parallelism, shared vs. non-shared memory, synchronization mechanisms (locking, atomicity, transactions, barriers), and parallel programming models (threads, data parallel/streaming, MapReduce, Apache Spark, SPMD, message passing, SIMT, transactions, and nested parallelism). Significant parallel programming assignments will be given as homework. The course is open to students who have completed the introductory CS course sequence through 110.", "courseAttributes": "Terms: Win | Units: 3-4 | UG Reqs: GER:DB-EngrAppSci | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Parallel Computing", "courseNumber": "CS 149:", "courseDescription": "This course is an introduction to parallelism and parallel programming. Most new computer architectures are parallel; programming these machines requires knowledge of the basic issues of and techniques for writing parallel software. Topics: varieties of parallelism in current hardware (e.g., fast networks, multicore, accelerators such as GPUs, vector instruction sets), importance of locality, implicit vs. explicit parallelism, shared vs. non-shared memory, synchronization mechanisms (locking, atomicity, transactions, barriers), and parallel programming models (threads, data parallel/streaming, MapReduce, Apache Spark, SPMD, message passing, SIMT, transactions, and nested parallelism). Significant parallel programming assignments will be given as homework. The course is open to students who have completed the introductory CS course sequence through 110.", "courseAttributes": "Terms: Win | Units: 3-4 | UG Reqs: GER:DB-EngrAppSci | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Parallel Computing", "courseNumber": "CS 149:", "courseDescription": "This course is an introduction to parallelism and parallel programming. Most new computer architectures are parallel; programming these machines requires knowledge of the basic issues of and techniques for writing parallel software. Topics: varieties of parallelism in current hardware (e.g., fast networks, multicore, accelerators such as GPUs, vector instruction sets), importance of locality, implicit vs. explicit parallelism, shared vs. non-shared memory, synchronization mechanisms (locking, atomicity, transactions, barriers), and parallel programming models (threads, data parallel/streaming, MapReduce, Apache Spark, SPMD, message passing, SIMT, transactions, and nested parallelism). Significant parallel programming assignments will be given as homework. The course is open to students who have completed the introductory CS course sequence through 110.", "courseAttributes": "Terms: Win | Units: 3-4 | UG Reqs: GER:DB-EngrAppSci | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Parallel Computing", "courseNumber": "CS 149:", "courseDescription": "This course is an introduction to parallelism and parallel programming. Most new computer architectures are parallel; programming these machines requires knowledge of the basic issues of and techniques for writing parallel software. Topics: varieties of parallelism in current hardware (e.g., fast networks, multicore, accelerators such as GPUs, vector instruction sets), importance of locality, implicit vs. explicit parallelism, shared vs. non-shared memory, synchronization mechanisms (locking, atomicity, transactions, barriers), and parallel programming models (threads, data parallel/streaming, MapReduce, Apache Spark, SPMD, message passing, SIMT, transactions, and nested parallelism). Significant parallel programming assignments will be given as homework. The course is open to students who have completed the introductory CS course sequence through 110.", "courseAttributes": "Terms: Win | Units: 3-4 | UG Reqs: GER:DB-EngrAppSci | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Parallel Computing", "courseNumber": "CS 149:", "courseDescription": "This course is an introduction to parallelism and parallel programming. Most new computer architectures are parallel; programming these machines requires knowledge of the basic issues of and techniques for writing parallel software. Topics: varieties of parallelism in current hardware (e.g., fast networks, multicore, accelerators such as GPUs, vector instruction sets), importance of locality, implicit vs. explicit parallelism, shared vs. non-shared memory, synchronization mechanisms (locking, atomicity, transactions, barriers), and parallel programming models (threads, data parallel/streaming, MapReduce, Apache Spark, SPMD, message passing, SIMT, transactions, and nested parallelism). Significant parallel programming assignments will be given as homework. The course is open to students who have completed the introductory CS course sequence through 110.", "courseAttributes": "Terms: Win | Units: 3-4 | UG Reqs: GER:DB-EngrAppSci | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Parallel Computing", "courseNumber": "CS 149:", "courseDescription": "This course is an introduction to parallelism and parallel programming. Most new computer architectures are parallel; programming these machines requires knowledge of the basic issues of and techniques for writing parallel software. Topics: varieties of parallelism in current hardware (e.g., fast networks, multicore, accelerators such as GPUs, vector instruction sets), importance of locality, implicit vs. explicit parallelism, shared vs. non-shared memory, synchronization mechanisms (locking, atomicity, transactions, barriers), and parallel programming models (threads, data parallel/streaming, MapReduce, Apache Spark, SPMD, message passing, SIMT, transactions, and nested parallelism). Significant parallel programming assignments will be given as homework. The course is open to students who have completed the introductory CS course sequence through 110.", "courseAttributes": "Terms: Win | Units: 3-4 | UG Reqs: GER:DB-EngrAppSci | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Parallel Computing", "courseNumber": "CS 149:", "courseDescription": "This course is an introduction to parallelism and parallel programming. Most new computer architectures are parallel; programming these machines requires knowledge of the basic issues of and techniques for writing parallel software. Topics: varieties of parallelism in current hardware (e.g., fast networks, multicore, accelerators such as GPUs, vector instruction sets), importance of locality, implicit vs. explicit parallelism, shared vs. non-shared memory, synchronization mechanisms (locking, atomicity, transactions, barriers), and parallel programming models (threads, data parallel/streaming, MapReduce, Apache Spark, SPMD, message passing, SIMT, transactions, and nested parallelism). Significant parallel programming assignments will be given as homework. The course is open to students who have completed the introductory CS course sequence through 110.", "courseAttributes": "Terms: Win | Units: 3-4 | UG Reqs: GER:DB-EngrAppSci | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Parallel Computing", "courseNumber": "CS 149:", "courseDescription": "This course is an introduction to parallelism and parallel programming. Most new computer architectures are parallel; programming these machines requires knowledge of the basic issues of and techniques for writing parallel software. Topics: varieties of parallelism in current hardware (e.g., fast networks, multicore, accelerators such as GPUs, vector instruction sets), importance of locality, implicit vs. explicit parallelism, shared vs. non-shared memory, synchronization mechanisms (locking, atomicity, transactions, barriers), and parallel programming models (threads, data parallel/streaming, MapReduce, Apache Spark, SPMD, message passing, SIMT, transactions, and nested parallelism). Significant parallel programming assignments will be given as homework. The course is open to students who have completed the introductory CS course sequence through 110.", "courseAttributes": "Terms: Win | Units: 3-4 | UG Reqs: GER:DB-EngrAppSci | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Parallel Computing", "courseNumber": "CS 149:", "courseDescription": "This course is an introduction to parallelism and parallel programming. Most new computer architectures are parallel; programming these machines requires knowledge of the basic issues of and techniques for writing parallel software. Topics: varieties of parallelism in current hardware (e.g., fast networks, multicore, accelerators such as GPUs, vector instruction sets), importance of locality, implicit vs. explicit parallelism, shared vs. non-shared memory, synchronization mechanisms (locking, atomicity, transactions, barriers), and parallel programming models (threads, data parallel/streaming, MapReduce, Apache Spark, SPMD, message passing, SIMT, transactions, and nested parallelism). Significant parallel programming assignments will be given as homework. The course is open to students who have completed the introductory CS course sequence through 110.", "courseAttributes": "Terms: Win | Units: 3-4 | UG Reqs: GER:DB-EngrAppSci | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Parallel Computing", "courseNumber": "CS 149:", "courseDescription": "This course is an introduction to parallelism and parallel programming. Most new computer architectures are parallel; programming these machines requires knowledge of the basic issues of and techniques for writing parallel software. Topics: varieties of parallelism in current hardware (e.g., fast networks, multicore, accelerators such as GPUs, vector instruction sets), importance of locality, implicit vs. explicit parallelism, shared vs. non-shared memory, synchronization mechanisms (locking, atomicity, transactions, barriers), and parallel programming models (threads, data parallel/streaming, MapReduce, Apache Spark, SPMD, message passing, SIMT, transactions, and nested parallelism). Significant parallel programming assignments will be given as homework. The course is open to students who have completed the introductory CS course sequence through 110.", "courseAttributes": "Terms: Win | Units: 3-4 | UG Reqs: GER:DB-EngrAppSci | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Parallel Computing", "courseNumber": "CS 149:", "courseDescription": "This course is an introduction to parallelism and parallel programming. Most new computer architectures are parallel; programming these machines requires knowledge of the basic issues of and techniques for writing parallel software. Topics: varieties of parallelism in current hardware (e.g., fast networks, multicore, accelerators such as GPUs, vector instruction sets), importance of locality, implicit vs. explicit parallelism, shared vs. non-shared memory, synchronization mechanisms (locking, atomicity, transactions, barriers), and parallel programming models (threads, data parallel/streaming, MapReduce, Apache Spark, SPMD, message passing, SIMT, transactions, and nested parallelism). Significant parallel programming assignments will be given as homework. The course is open to students who have completed the introductory CS course sequence through 110.", "courseAttributes": "Terms: Win | Units: 3-4 | UG Reqs: GER:DB-EngrAppSci | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Parallel Computing", "courseNumber": "CS 149:", "courseDescription": "This course is an introduction to parallelism and parallel programming. Most new computer architectures are parallel; programming these machines requires knowledge of the basic issues of and techniques for writing parallel software. Topics: varieties of parallelism in current hardware (e.g., fast networks, multicore, accelerators such as GPUs, vector instruction sets), importance of locality, implicit vs. explicit parallelism, shared vs. non-shared memory, synchronization mechanisms (locking, atomicity, transactions, barriers), and parallel programming models (threads, data parallel/streaming, MapReduce, Apache Spark, SPMD, message passing, SIMT, transactions, and nested parallelism). Significant parallel programming assignments will be given as homework. The course is open to students who have completed the introductory CS course sequence through 110.", "courseAttributes": "Terms: Win | Units: 3-4 | UG Reqs: GER:DB-EngrAppSci | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Parallel Computing", "courseNumber": "CS 149:", "courseDescription": "This course is an introduction to parallelism and parallel programming. Most new computer architectures are parallel; programming these machines requires knowledge of the basic issues of and techniques for writing parallel software. Topics: varieties of parallelism in current hardware (e.g., fast networks, multicore, accelerators such as GPUs, vector instruction sets), importance of locality, implicit vs. explicit parallelism, shared vs. non-shared memory, synchronization mechanisms (locking, atomicity, transactions, barriers), and parallel programming models (threads, data parallel/streaming, MapReduce, Apache Spark, SPMD, message passing, SIMT, transactions, and nested parallelism). Significant parallel programming assignments will be given as homework. The course is open to students who have completed the introductory CS course sequence through 110.", "courseAttributes": "Terms: Win | Units: 3-4 | UG Reqs: GER:DB-EngrAppSci | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Parallel Computing", "courseNumber": "CS 149:", "courseDescription": "This course is an introduction to parallelism and parallel programming. Most new computer architectures are parallel; programming these machines requires knowledge of the basic issues of and techniques for writing parallel software. Topics: varieties of parallelism in current hardware (e.g., fast networks, multicore, accelerators such as GPUs, vector instruction sets), importance of locality, implicit vs. explicit parallelism, shared vs. non-shared memory, synchronization mechanisms (locking, atomicity, transactions, barriers), and parallel programming models (threads, data parallel/streaming, MapReduce, Apache Spark, SPMD, message passing, SIMT, transactions, and nested parallelism). Significant parallel programming assignments will be given as homework. The course is open to students who have completed the introductory CS course sequence through 110.", "courseAttributes": "Terms: Win | Units: 3-4 | UG Reqs: GER:DB-EngrAppSci | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Parallel Computing", "courseNumber": "CS 149:", "courseDescription": "This course is an introduction to parallelism and parallel programming. Most new computer architectures are parallel; programming these machines requires knowledge of the basic issues of and techniques for writing parallel software. Topics: varieties of parallelism in current hardware (e.g., fast networks, multicore, accelerators such as GPUs, vector instruction sets), importance of locality, implicit vs. explicit parallelism, shared vs. non-shared memory, synchronization mechanisms (locking, atomicity, transactions, barriers), and parallel programming models (threads, data parallel/streaming, MapReduce, Apache Spark, SPMD, message passing, SIMT, transactions, and nested parallelism). Significant parallel programming assignments will be given as homework. The course is open to students who have completed the introductory CS course sequence through 110.", "courseAttributes": "Terms: Win | Units: 3-4 | UG Reqs: GER:DB-EngrAppSci | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Parallel Computing", "courseNumber": "CS 149:", "courseDescription": "This course is an introduction to parallelism and parallel programming. Most new computer architectures are parallel; programming these machines requires knowledge of the basic issues of and techniques for writing parallel software. Topics: varieties of parallelism in current hardware (e.g., fast networks, multicore, accelerators such as GPUs, vector instruction sets), importance of locality, implicit vs. explicit parallelism, shared vs. non-shared memory, synchronization mechanisms (locking, atomicity, transactions, barriers), and parallel programming models (threads, data parallel/streaming, MapReduce, Apache Spark, SPMD, message passing, SIMT, transactions, and nested parallelism). Significant parallel programming assignments will be given as homework. The course is open to students who have completed the introductory CS course sequence through 110.", "courseAttributes": "Terms: Win | Units: 3-4 | UG Reqs: GER:DB-EngrAppSci | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Parallel Computing", "courseNumber": "CS 149:", "courseDescription": "This course is an introduction to parallelism and parallel programming. Most new computer architectures are parallel; programming these machines requires knowledge of the basic issues of and techniques for writing parallel software. Topics: varieties of parallelism in current hardware (e.g., fast networks, multicore, accelerators such as GPUs, vector instruction sets), importance of locality, implicit vs. explicit parallelism, shared vs. non-shared memory, synchronization mechanisms (locking, atomicity, transactions, barriers), and parallel programming models (threads, data parallel/streaming, MapReduce, Apache Spark, SPMD, message passing, SIMT, transactions, and nested parallelism). Significant parallel programming assignments will be given as homework. The course is open to students who have completed the introductory CS course sequence through 110.", "courseAttributes": "Terms: Win | Units: 3-4 | UG Reqs: GER:DB-EngrAppSci | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Parallel Computing", "courseNumber": "CS 149:", "courseDescription": "This course is an introduction to parallelism and parallel programming. Most new computer architectures are parallel; programming these machines requires knowledge of the basic issues of and techniques for writing parallel software. Topics: varieties of parallelism in current hardware (e.g., fast networks, multicore, accelerators such as GPUs, vector instruction sets), importance of locality, implicit vs. explicit parallelism, shared vs. non-shared memory, synchronization mechanisms (locking, atomicity, transactions, barriers), and parallel programming models (threads, data parallel/streaming, MapReduce, Apache Spark, SPMD, message passing, SIMT, transactions, and nested parallelism). Significant parallel programming assignments will be given as homework. The course is open to students who have completed the introductory CS course sequence through 110.", "courseAttributes": "Terms: Win | Units: 3-4 | UG Reqs: GER:DB-EngrAppSci | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Parallel Computing", "courseNumber": "CS 149:", "courseDescription": "This course is an introduction to parallelism and parallel programming. Most new computer architectures are parallel; programming these machines requires knowledge of the basic issues of and techniques for writing parallel software. Topics: varieties of parallelism in current hardware (e.g., fast networks, multicore, accelerators such as GPUs, vector instruction sets), importance of locality, implicit vs. explicit parallelism, shared vs. non-shared memory, synchronization mechanisms (locking, atomicity, transactions, barriers), and parallel programming models (threads, data parallel/streaming, MapReduce, Apache Spark, SPMD, message passing, SIMT, transactions, and nested parallelism). Significant parallel programming assignments will be given as homework. The course is open to students who have completed the introductory CS course sequence through 110.", "courseAttributes": "Terms: Win | Units: 3-4 | UG Reqs: GER:DB-EngrAppSci | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Parallel Computing", "courseNumber": "CS 149:", "courseDescription": "This course is an introduction to parallelism and parallel programming. Most new computer architectures are parallel; programming these machines requires knowledge of the basic issues of and techniques for writing parallel software. Topics: varieties of parallelism in current hardware (e.g., fast networks, multicore, accelerators such as GPUs, vector instruction sets), importance of locality, implicit vs. explicit parallelism, shared vs. non-shared memory, synchronization mechanisms (locking, atomicity, transactions, barriers), and parallel programming models (threads, data parallel/streaming, MapReduce, Apache Spark, SPMD, message passing, SIMT, transactions, and nested parallelism). Significant parallel programming assignments will be given as homework. The course is open to students who have completed the introductory CS course sequence through 110.", "courseAttributes": "Terms: Win | Units: 3-4 | UG Reqs: GER:DB-EngrAppSci | Grading: Letter or Credit/No Credit"}]}}
{"Matei Zaharia": {"courses": [{"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}]}}
{"Leonidas J. Guibas": {"courses": [{"courseTitle": "Biomedical Informatics Teaching Methods", "courseNumber": "BIOMEDIN 290:", "courseDescription": "Hands-on training in biomedical informatics pedagogy. Practical experience in pedagogical approaches, variously including didactic, inquiry, project, team, case, field, and/or problem-based approaches. Students create course content, including lectures, exercises, and assessments, and evaluate learning activities and outcomes. Prerequisite: instructor consent.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Medical Option (Med-Ltr-CR/NC)"}, {"courseTitle": "Biomedical Informatics Teaching Methods", "courseNumber": "BIOMEDIN 290:", "courseDescription": "Hands-on training in biomedical informatics pedagogy. Practical experience in pedagogical approaches, variously including didactic, inquiry, project, team, case, field, and/or problem-based approaches. Students create course content, including lectures, exercises, and assessments, and evaluate learning activities and outcomes. Prerequisite: instructor consent.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Medical Option (Med-Ltr-CR/NC)"}, {"courseTitle": "Biomedical Informatics Teaching Methods", "courseNumber": "BIOMEDIN 290:", "courseDescription": "Hands-on training in biomedical informatics pedagogy. Practical experience in pedagogical approaches, variously including didactic, inquiry, project, team, case, field, and/or problem-based approaches. Students create course content, including lectures, exercises, and assessments, and evaluate learning activities and outcomes. Prerequisite: instructor consent.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Medical Option (Med-Ltr-CR/NC)"}, {"courseTitle": "Biomedical Informatics Teaching Methods", "courseNumber": "BIOMEDIN 290:", "courseDescription": "Hands-on training in biomedical informatics pedagogy. Practical experience in pedagogical approaches, variously including didactic, inquiry, project, team, case, field, and/or problem-based approaches. Students create course content, including lectures, exercises, and assessments, and evaluate learning activities and outcomes. Prerequisite: instructor consent.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Medical Option (Med-Ltr-CR/NC)"}, {"courseTitle": "Biomedical Informatics Teaching Methods", "courseNumber": "BIOMEDIN 290:", "courseDescription": "Hands-on training in biomedical informatics pedagogy. Practical experience in pedagogical approaches, variously including didactic, inquiry, project, team, case, field, and/or problem-based approaches. Students create course content, including lectures, exercises, and assessments, and evaluate learning activities and outcomes. Prerequisite: instructor consent.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Medical Option (Med-Ltr-CR/NC)"}, {"courseTitle": "Biomedical Informatics Teaching Methods", "courseNumber": "BIOMEDIN 290:", "courseDescription": "Hands-on training in biomedical informatics pedagogy. Practical experience in pedagogical approaches, variously including didactic, inquiry, project, team, case, field, and/or problem-based approaches. Students create course content, including lectures, exercises, and assessments, and evaluate learning activities and outcomes. Prerequisite: instructor consent.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Medical Option (Med-Ltr-CR/NC)"}, {"courseTitle": "Biomedical Informatics Teaching Methods", "courseNumber": "BIOMEDIN 290:", "courseDescription": "Hands-on training in biomedical informatics pedagogy. Practical experience in pedagogical approaches, variously including didactic, inquiry, project, team, case, field, and/or problem-based approaches. Students create course content, including lectures, exercises, and assessments, and evaluate learning activities and outcomes. Prerequisite: instructor consent.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Medical Option (Med-Ltr-CR/NC)"}, {"courseTitle": "Biomedical Informatics Teaching Methods", "courseNumber": "BIOMEDIN 290:", "courseDescription": "Hands-on training in biomedical informatics pedagogy. Practical experience in pedagogical approaches, variously including didactic, inquiry, project, team, case, field, and/or problem-based approaches. Students create course content, including lectures, exercises, and assessments, and evaluate learning activities and outcomes. Prerequisite: instructor consent.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Medical Option (Med-Ltr-CR/NC)"}, {"courseTitle": "Biomedical Informatics Teaching Methods", "courseNumber": "BIOMEDIN 290:", "courseDescription": "Hands-on training in biomedical informatics pedagogy. Practical experience in pedagogical approaches, variously including didactic, inquiry, project, team, case, field, and/or problem-based approaches. Students create course content, including lectures, exercises, and assessments, and evaluate learning activities and outcomes. Prerequisite: instructor consent.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Medical Option (Med-Ltr-CR/NC)"}, {"courseTitle": "Biomedical Informatics Teaching Methods", "courseNumber": "BIOMEDIN 290:", "courseDescription": "Hands-on training in biomedical informatics pedagogy. Practical experience in pedagogical approaches, variously including didactic, inquiry, project, team, case, field, and/or problem-based approaches. Students create course content, including lectures, exercises, and assessments, and evaluate learning activities and outcomes. Prerequisite: instructor consent.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Medical Option (Med-Ltr-CR/NC)"}, {"courseTitle": "Biomedical Informatics Teaching Methods", "courseNumber": "BIOMEDIN 290:", "courseDescription": "Hands-on training in biomedical informatics pedagogy. Practical experience in pedagogical approaches, variously including didactic, inquiry, project, team, case, field, and/or problem-based approaches. Students create course content, including lectures, exercises, and assessments, and evaluate learning activities and outcomes. Prerequisite: instructor consent.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Medical Option (Med-Ltr-CR/NC)"}, {"courseTitle": "Biomedical Informatics Teaching Methods", "courseNumber": "BIOMEDIN 290:", "courseDescription": "Hands-on training in biomedical informatics pedagogy. Practical experience in pedagogical approaches, variously including didactic, inquiry, project, team, case, field, and/or problem-based approaches. Students create course content, including lectures, exercises, and assessments, and evaluate learning activities and outcomes. Prerequisite: instructor consent.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Medical Option (Med-Ltr-CR/NC)"}, {"courseTitle": "Biomedical Informatics Teaching Methods", "courseNumber": "BIOMEDIN 290:", "courseDescription": "Hands-on training in biomedical informatics pedagogy. Practical experience in pedagogical approaches, variously including didactic, inquiry, project, team, case, field, and/or problem-based approaches. Students create course content, including lectures, exercises, and assessments, and evaluate learning activities and outcomes. Prerequisite: instructor consent.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Medical Option (Med-Ltr-CR/NC)"}, {"courseTitle": "Biomedical Informatics Teaching Methods", "courseNumber": "BIOMEDIN 290:", "courseDescription": "Hands-on training in biomedical informatics pedagogy. Practical experience in pedagogical approaches, variously including didactic, inquiry, project, team, case, field, and/or problem-based approaches. Students create course content, including lectures, exercises, and assessments, and evaluate learning activities and outcomes. Prerequisite: instructor consent.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Medical Option (Med-Ltr-CR/NC)"}, {"courseTitle": "Biomedical Informatics Teaching Methods", "courseNumber": "BIOMEDIN 290:", "courseDescription": "Hands-on training in biomedical informatics pedagogy. Practical experience in pedagogical approaches, variously including didactic, inquiry, project, team, case, field, and/or problem-based approaches. Students create course content, including lectures, exercises, and assessments, and evaluate learning activities and outcomes. Prerequisite: instructor consent.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Medical Option (Med-Ltr-CR/NC)"}, {"courseTitle": "Biomedical Informatics Teaching Methods", "courseNumber": "BIOMEDIN 290:", "courseDescription": "Hands-on training in biomedical informatics pedagogy. Practical experience in pedagogical approaches, variously including didactic, inquiry, project, team, case, field, and/or problem-based approaches. Students create course content, including lectures, exercises, and assessments, and evaluate learning activities and outcomes. Prerequisite: instructor consent.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Medical Option (Med-Ltr-CR/NC)"}, {"courseTitle": "Biomedical Informatics Teaching Methods", "courseNumber": "BIOMEDIN 290:", "courseDescription": "Hands-on training in biomedical informatics pedagogy. Practical experience in pedagogical approaches, variously including didactic, inquiry, project, team, case, field, and/or problem-based approaches. Students create course content, including lectures, exercises, and assessments, and evaluate learning activities and outcomes. Prerequisite: instructor consent.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Medical Option (Med-Ltr-CR/NC)"}, {"courseTitle": "Biomedical Informatics Teaching Methods", "courseNumber": "BIOMEDIN 290:", "courseDescription": "Hands-on training in biomedical informatics pedagogy. Practical experience in pedagogical approaches, variously including didactic, inquiry, project, team, case, field, and/or problem-based approaches. Students create course content, including lectures, exercises, and assessments, and evaluate learning activities and outcomes. Prerequisite: instructor consent.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Medical Option (Med-Ltr-CR/NC)"}, {"courseTitle": "Biomedical Informatics Teaching Methods", "courseNumber": "BIOMEDIN 290:", "courseDescription": "Hands-on training in biomedical informatics pedagogy. Practical experience in pedagogical approaches, variously including didactic, inquiry, project, team, case, field, and/or problem-based approaches. Students create course content, including lectures, exercises, and assessments, and evaluate learning activities and outcomes. Prerequisite: instructor consent.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Medical Option (Med-Ltr-CR/NC)"}, {"courseTitle": "Biomedical Informatics Teaching Methods", "courseNumber": "BIOMEDIN 290:", "courseDescription": "Hands-on training in biomedical informatics pedagogy. Practical experience in pedagogical approaches, variously including didactic, inquiry, project, team, case, field, and/or problem-based approaches. Students create course content, including lectures, exercises, and assessments, and evaluate learning activities and outcomes. Prerequisite: instructor consent.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Medical Option (Med-Ltr-CR/NC)"}, {"courseTitle": "Biomedical Informatics Teaching Methods", "courseNumber": "BIOMEDIN 290:", "courseDescription": "Hands-on training in biomedical informatics pedagogy. Practical experience in pedagogical approaches, variously including didactic, inquiry, project, team, case, field, and/or problem-based approaches. Students create course content, including lectures, exercises, and assessments, and evaluate learning activities and outcomes. Prerequisite: instructor consent.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Medical Option (Med-Ltr-CR/NC)"}, {"courseTitle": "Biomedical Informatics Teaching Methods", "courseNumber": "BIOMEDIN 290:", "courseDescription": "Hands-on training in biomedical informatics pedagogy. Practical experience in pedagogical approaches, variously including didactic, inquiry, project, team, case, field, and/or problem-based approaches. Students create course content, including lectures, exercises, and assessments, and evaluate learning activities and outcomes. Prerequisite: instructor consent.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Medical Option (Med-Ltr-CR/NC)"}, {"courseTitle": "Biomedical Informatics Teaching Methods", "courseNumber": "BIOMEDIN 290:", "courseDescription": "Hands-on training in biomedical informatics pedagogy. Practical experience in pedagogical approaches, variously including didactic, inquiry, project, team, case, field, and/or problem-based approaches. Students create course content, including lectures, exercises, and assessments, and evaluate learning activities and outcomes. Prerequisite: instructor consent.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Medical Option (Med-Ltr-CR/NC)"}, {"courseTitle": "Biomedical Informatics Teaching Methods", "courseNumber": "BIOMEDIN 290:", "courseDescription": "Hands-on training in biomedical informatics pedagogy. Practical experience in pedagogical approaches, variously including didactic, inquiry, project, team, case, field, and/or problem-based approaches. Students create course content, including lectures, exercises, and assessments, and evaluate learning activities and outcomes. Prerequisite: instructor consent.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Medical Option (Med-Ltr-CR/NC)"}, {"courseTitle": "Biomedical Informatics Teaching Methods", "courseNumber": "BIOMEDIN 290:", "courseDescription": "Hands-on training in biomedical informatics pedagogy. Practical experience in pedagogical approaches, variously including didactic, inquiry, project, team, case, field, and/or problem-based approaches. Students create course content, including lectures, exercises, and assessments, and evaluate learning activities and outcomes. Prerequisite: instructor consent.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Medical Option (Med-Ltr-CR/NC)"}, {"courseTitle": "Biomedical Informatics Teaching Methods", "courseNumber": "BIOMEDIN 290:", "courseDescription": "Hands-on training in biomedical informatics pedagogy. Practical experience in pedagogical approaches, variously including didactic, inquiry, project, team, case, field, and/or problem-based approaches. Students create course content, including lectures, exercises, and assessments, and evaluate learning activities and outcomes. Prerequisite: instructor consent.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Medical Option (Med-Ltr-CR/NC)"}, {"courseTitle": "Biomedical Informatics Teaching Methods", "courseNumber": "BIOMEDIN 290:", "courseDescription": "Hands-on training in biomedical informatics pedagogy. Practical experience in pedagogical approaches, variously including didactic, inquiry, project, team, case, field, and/or problem-based approaches. Students create course content, including lectures, exercises, and assessments, and evaluate learning activities and outcomes. Prerequisite: instructor consent.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Medical Option (Med-Ltr-CR/NC)"}, {"courseTitle": "Biomedical Informatics Teaching Methods", "courseNumber": "BIOMEDIN 290:", "courseDescription": "Hands-on training in biomedical informatics pedagogy. Practical experience in pedagogical approaches, variously including didactic, inquiry, project, team, case, field, and/or problem-based approaches. Students create course content, including lectures, exercises, and assessments, and evaluate learning activities and outcomes. Prerequisite: instructor consent.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Medical Option (Med-Ltr-CR/NC)"}, {"courseTitle": "Biomedical Informatics Teaching Methods", "courseNumber": "BIOMEDIN 290:", "courseDescription": "Hands-on training in biomedical informatics pedagogy. Practical experience in pedagogical approaches, variously including didactic, inquiry, project, team, case, field, and/or problem-based approaches. Students create course content, including lectures, exercises, and assessments, and evaluate learning activities and outcomes. Prerequisite: instructor consent.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Medical Option (Med-Ltr-CR/NC)"}]}}
{"Mehran Sahami": {"courses": [{"courseTitle": "Computers, Ethics, and Public Policy (CS 181, ETHICSOC 181X, PHIL 75C, POLISCI 181, PUBLPOL 181)", "courseNumber": "COMM 181:", "courseDescription": "Ethical and social issues related to the development and use of computer technology. Ethical theory, and social, political, and legal considerations. Scenarios in problem areas: privacy, reliability and risks of complex systems, and responsibility of professionals for applications and consequences of their work. Prerequisite: 106A.", "courseAttributes": "Terms: Aut, Win | Units: 4 | UG Reqs: GER:EC-EthicReas, WAY-ER | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Computers, Ethics, and Public Policy (CS 181, ETHICSOC 181X, PHIL 75C, POLISCI 181, PUBLPOL 181)", "courseNumber": "COMM 181:", "courseDescription": "Ethical and social issues related to the development and use of computer technology. Ethical theory, and social, political, and legal considerations. Scenarios in problem areas: privacy, reliability and risks of complex systems, and responsibility of professionals for applications and consequences of their work. Prerequisite: 106A.", "courseAttributes": "Terms: Aut, Win | Units: 4 | UG Reqs: GER:EC-EthicReas, WAY-ER | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Computers, Ethics, and Public Policy (CS 181, ETHICSOC 181X, PHIL 75C, POLISCI 181, PUBLPOL 181)", "courseNumber": "COMM 181:", "courseDescription": "Ethical and social issues related to the development and use of computer technology. Ethical theory, and social, political, and legal considerations. Scenarios in problem areas: privacy, reliability and risks of complex systems, and responsibility of professionals for applications and consequences of their work. Prerequisite: 106A.", "courseAttributes": "Terms: Aut, Win | Units: 4 | UG Reqs: GER:EC-EthicReas, WAY-ER | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Computers, Ethics, and Public Policy (CS 181, ETHICSOC 181X, PHIL 75C, POLISCI 181, PUBLPOL 181)", "courseNumber": "COMM 181:", "courseDescription": "Ethical and social issues related to the development and use of computer technology. Ethical theory, and social, political, and legal considerations. Scenarios in problem areas: privacy, reliability and risks of complex systems, and responsibility of professionals for applications and consequences of their work. Prerequisite: 106A.", "courseAttributes": "Terms: Aut, Win | Units: 4 | UG Reqs: GER:EC-EthicReas, WAY-ER | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Computers, Ethics, and Public Policy (CS 181, ETHICSOC 181X, PHIL 75C, POLISCI 181, PUBLPOL 181)", "courseNumber": "COMM 181:", "courseDescription": "Ethical and social issues related to the development and use of computer technology. Ethical theory, and social, political, and legal considerations. Scenarios in problem areas: privacy, reliability and risks of complex systems, and responsibility of professionals for applications and consequences of their work. Prerequisite: 106A.", "courseAttributes": "Terms: Aut, Win | Units: 4 | UG Reqs: GER:EC-EthicReas, WAY-ER | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Computers, Ethics, and Public Policy (CS 181, ETHICSOC 181X, PHIL 75C, POLISCI 181, PUBLPOL 181)", "courseNumber": "COMM 181:", "courseDescription": "Ethical and social issues related to the development and use of computer technology. Ethical theory, and social, political, and legal considerations. Scenarios in problem areas: privacy, reliability and risks of complex systems, and responsibility of professionals for applications and consequences of their work. Prerequisite: 106A.", "courseAttributes": "Terms: Aut, Win | Units: 4 | UG Reqs: GER:EC-EthicReas, WAY-ER | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Computers, Ethics, and Public Policy (CS 181, ETHICSOC 181X, PHIL 75C, POLISCI 181, PUBLPOL 181)", "courseNumber": "COMM 181:", "courseDescription": "Ethical and social issues related to the development and use of computer technology. Ethical theory, and social, political, and legal considerations. Scenarios in problem areas: privacy, reliability and risks of complex systems, and responsibility of professionals for applications and consequences of their work. Prerequisite: 106A.", "courseAttributes": "Terms: Aut, Win | Units: 4 | UG Reqs: GER:EC-EthicReas, WAY-ER | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Computers, Ethics, and Public Policy (CS 181, ETHICSOC 181X, PHIL 75C, POLISCI 181, PUBLPOL 181)", "courseNumber": "COMM 181:", "courseDescription": "Ethical and social issues related to the development and use of computer technology. Ethical theory, and social, political, and legal considerations. Scenarios in problem areas: privacy, reliability and risks of complex systems, and responsibility of professionals for applications and consequences of their work. Prerequisite: 106A.", "courseAttributes": "Terms: Aut, Win | Units: 4 | UG Reqs: GER:EC-EthicReas, WAY-ER | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Computers, Ethics, and Public Policy (CS 181, ETHICSOC 181X, PHIL 75C, POLISCI 181, PUBLPOL 181)", "courseNumber": "COMM 181:", "courseDescription": "Ethical and social issues related to the development and use of computer technology. Ethical theory, and social, political, and legal considerations. Scenarios in problem areas: privacy, reliability and risks of complex systems, and responsibility of professionals for applications and consequences of their work. Prerequisite: 106A.", "courseAttributes": "Terms: Aut, Win | Units: 4 | UG Reqs: GER:EC-EthicReas, WAY-ER | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Computers, Ethics, and Public Policy (CS 181, ETHICSOC 181X, PHIL 75C, POLISCI 181, PUBLPOL 181)", "courseNumber": "COMM 181:", "courseDescription": "Ethical and social issues related to the development and use of computer technology. Ethical theory, and social, political, and legal considerations. Scenarios in problem areas: privacy, reliability and risks of complex systems, and responsibility of professionals for applications and consequences of their work. Prerequisite: 106A.", "courseAttributes": "Terms: Aut, Win | Units: 4 | UG Reqs: GER:EC-EthicReas, WAY-ER | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Computers, Ethics, and Public Policy (CS 181, ETHICSOC 181X, PHIL 75C, POLISCI 181, PUBLPOL 181)", "courseNumber": "COMM 181:", "courseDescription": "Ethical and social issues related to the development and use of computer technology. Ethical theory, and social, political, and legal considerations. Scenarios in problem areas: privacy, reliability and risks of complex systems, and responsibility of professionals for applications and consequences of their work. Prerequisite: 106A.", "courseAttributes": "Terms: Aut, Win | Units: 4 | UG Reqs: GER:EC-EthicReas, WAY-ER | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Computers, Ethics, and Public Policy (CS 181, ETHICSOC 181X, PHIL 75C, POLISCI 181, PUBLPOL 181)", "courseNumber": "COMM 181:", "courseDescription": "Ethical and social issues related to the development and use of computer technology. Ethical theory, and social, political, and legal considerations. Scenarios in problem areas: privacy, reliability and risks of complex systems, and responsibility of professionals for applications and consequences of their work. Prerequisite: 106A.", "courseAttributes": "Terms: Aut, Win | Units: 4 | UG Reqs: GER:EC-EthicReas, WAY-ER | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Computers, Ethics, and Public Policy (CS 181, ETHICSOC 181X, PHIL 75C, POLISCI 181, PUBLPOL 181)", "courseNumber": "COMM 181:", "courseDescription": "Ethical and social issues related to the development and use of computer technology. Ethical theory, and social, political, and legal considerations. Scenarios in problem areas: privacy, reliability and risks of complex systems, and responsibility of professionals for applications and consequences of their work. Prerequisite: 106A.", "courseAttributes": "Terms: Aut, Win | Units: 4 | UG Reqs: GER:EC-EthicReas, WAY-ER | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Computers, Ethics, and Public Policy (CS 181, ETHICSOC 181X, PHIL 75C, POLISCI 181, PUBLPOL 181)", "courseNumber": "COMM 181:", "courseDescription": "Ethical and social issues related to the development and use of computer technology. Ethical theory, and social, political, and legal considerations. Scenarios in problem areas: privacy, reliability and risks of complex systems, and responsibility of professionals for applications and consequences of their work. Prerequisite: 106A.", "courseAttributes": "Terms: Aut, Win | Units: 4 | UG Reqs: GER:EC-EthicReas, WAY-ER | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Computers, Ethics, and Public Policy (CS 181, ETHICSOC 181X, PHIL 75C, POLISCI 181, PUBLPOL 181)", "courseNumber": "COMM 181:", "courseDescription": "Ethical and social issues related to the development and use of computer technology. Ethical theory, and social, political, and legal considerations. Scenarios in problem areas: privacy, reliability and risks of complex systems, and responsibility of professionals for applications and consequences of their work. Prerequisite: 106A.", "courseAttributes": "Terms: Aut, Win | Units: 4 | UG Reqs: GER:EC-EthicReas, WAY-ER | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Computers, Ethics, and Public Policy (CS 181, ETHICSOC 181X, PHIL 75C, POLISCI 181, PUBLPOL 181)", "courseNumber": "COMM 181:", "courseDescription": "Ethical and social issues related to the development and use of computer technology. Ethical theory, and social, political, and legal considerations. Scenarios in problem areas: privacy, reliability and risks of complex systems, and responsibility of professionals for applications and consequences of their work. Prerequisite: 106A.", "courseAttributes": "Terms: Aut, Win | Units: 4 | UG Reqs: GER:EC-EthicReas, WAY-ER | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Computers, Ethics, and Public Policy (CS 181, ETHICSOC 181X, PHIL 75C, POLISCI 181, PUBLPOL 181)", "courseNumber": "COMM 181:", "courseDescription": "Ethical and social issues related to the development and use of computer technology. Ethical theory, and social, political, and legal considerations. Scenarios in problem areas: privacy, reliability and risks of complex systems, and responsibility of professionals for applications and consequences of their work. Prerequisite: 106A.", "courseAttributes": "Terms: Aut, Win | Units: 4 | UG Reqs: GER:EC-EthicReas, WAY-ER | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Computers, Ethics, and Public Policy (CS 181, ETHICSOC 181X, PHIL 75C, POLISCI 181, PUBLPOL 181)", "courseNumber": "COMM 181:", "courseDescription": "Ethical and social issues related to the development and use of computer technology. Ethical theory, and social, political, and legal considerations. Scenarios in problem areas: privacy, reliability and risks of complex systems, and responsibility of professionals for applications and consequences of their work. Prerequisite: 106A.", "courseAttributes": "Terms: Aut, Win | Units: 4 | UG Reqs: GER:EC-EthicReas, WAY-ER | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Computers, Ethics, and Public Policy (CS 181, ETHICSOC 181X, PHIL 75C, POLISCI 181, PUBLPOL 181)", "courseNumber": "COMM 181:", "courseDescription": "Ethical and social issues related to the development and use of computer technology. Ethical theory, and social, political, and legal considerations. Scenarios in problem areas: privacy, reliability and risks of complex systems, and responsibility of professionals for applications and consequences of their work. Prerequisite: 106A.", "courseAttributes": "Terms: Aut, Win | Units: 4 | UG Reqs: GER:EC-EthicReas, WAY-ER | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Computers, Ethics, and Public Policy (CS 181, ETHICSOC 181X, PHIL 75C, POLISCI 181, PUBLPOL 181)", "courseNumber": "COMM 181:", "courseDescription": "Ethical and social issues related to the development and use of computer technology. Ethical theory, and social, political, and legal considerations. Scenarios in problem areas: privacy, reliability and risks of complex systems, and responsibility of professionals for applications and consequences of their work. Prerequisite: 106A.", "courseAttributes": "Terms: Aut, Win | Units: 4 | UG Reqs: GER:EC-EthicReas, WAY-ER | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Computers, Ethics, and Public Policy (CS 181, ETHICSOC 181X, PHIL 75C, POLISCI 181, PUBLPOL 181)", "courseNumber": "COMM 181:", "courseDescription": "Ethical and social issues related to the development and use of computer technology. Ethical theory, and social, political, and legal considerations. Scenarios in problem areas: privacy, reliability and risks of complex systems, and responsibility of professionals for applications and consequences of their work. Prerequisite: 106A.", "courseAttributes": "Terms: Aut, Win | Units: 4 | UG Reqs: GER:EC-EthicReas, WAY-ER | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Computers, Ethics, and Public Policy (CS 181, ETHICSOC 181X, PHIL 75C, POLISCI 181, PUBLPOL 181)", "courseNumber": "COMM 181:", "courseDescription": "Ethical and social issues related to the development and use of computer technology. Ethical theory, and social, political, and legal considerations. Scenarios in problem areas: privacy, reliability and risks of complex systems, and responsibility of professionals for applications and consequences of their work. Prerequisite: 106A.", "courseAttributes": "Terms: Aut, Win | Units: 4 | UG Reqs: GER:EC-EthicReas, WAY-ER | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Computers, Ethics, and Public Policy (CS 181, ETHICSOC 181X, PHIL 75C, POLISCI 181, PUBLPOL 181)", "courseNumber": "COMM 181:", "courseDescription": "Ethical and social issues related to the development and use of computer technology. Ethical theory, and social, political, and legal considerations. Scenarios in problem areas: privacy, reliability and risks of complex systems, and responsibility of professionals for applications and consequences of their work. Prerequisite: 106A.", "courseAttributes": "Terms: Aut, Win | Units: 4 | UG Reqs: GER:EC-EthicReas, WAY-ER | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Computers, Ethics, and Public Policy (CS 181, ETHICSOC 181X, PHIL 75C, POLISCI 181, PUBLPOL 181)", "courseNumber": "COMM 181:", "courseDescription": "Ethical and social issues related to the development and use of computer technology. Ethical theory, and social, political, and legal considerations. Scenarios in problem areas: privacy, reliability and risks of complex systems, and responsibility of professionals for applications and consequences of their work. Prerequisite: 106A.", "courseAttributes": "Terms: Aut, Win | Units: 4 | UG Reqs: GER:EC-EthicReas, WAY-ER | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Computers, Ethics, and Public Policy (CS 181, ETHICSOC 181X, PHIL 75C, POLISCI 181, PUBLPOL 181)", "courseNumber": "COMM 181:", "courseDescription": "Ethical and social issues related to the development and use of computer technology. Ethical theory, and social, political, and legal considerations. Scenarios in problem areas: privacy, reliability and risks of complex systems, and responsibility of professionals for applications and consequences of their work. Prerequisite: 106A.", "courseAttributes": "Terms: Aut, Win | Units: 4 | UG Reqs: GER:EC-EthicReas, WAY-ER | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Computers, Ethics, and Public Policy (CS 181, ETHICSOC 181X, PHIL 75C, POLISCI 181, PUBLPOL 181)", "courseNumber": "COMM 181:", "courseDescription": "Ethical and social issues related to the development and use of computer technology. Ethical theory, and social, political, and legal considerations. Scenarios in problem areas: privacy, reliability and risks of complex systems, and responsibility of professionals for applications and consequences of their work. Prerequisite: 106A.", "courseAttributes": "Terms: Aut, Win | Units: 4 | UG Reqs: GER:EC-EthicReas, WAY-ER | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Computers, Ethics, and Public Policy (CS 181, ETHICSOC 181X, PHIL 75C, POLISCI 181, PUBLPOL 181)", "courseNumber": "COMM 181:", "courseDescription": "Ethical and social issues related to the development and use of computer technology. Ethical theory, and social, political, and legal considerations. Scenarios in problem areas: privacy, reliability and risks of complex systems, and responsibility of professionals for applications and consequences of their work. Prerequisite: 106A.", "courseAttributes": "Terms: Aut, Win | Units: 4 | UG Reqs: GER:EC-EthicReas, WAY-ER | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Computers, Ethics, and Public Policy (CS 181, ETHICSOC 181X, PHIL 75C, POLISCI 181, PUBLPOL 181)", "courseNumber": "COMM 181:", "courseDescription": "Ethical and social issues related to the development and use of computer technology. Ethical theory, and social, political, and legal considerations. Scenarios in problem areas: privacy, reliability and risks of complex systems, and responsibility of professionals for applications and consequences of their work. Prerequisite: 106A.", "courseAttributes": "Terms: Aut, Win | Units: 4 | UG Reqs: GER:EC-EthicReas, WAY-ER | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Computers, Ethics, and Public Policy (CS 181, ETHICSOC 181X, PHIL 75C, POLISCI 181, PUBLPOL 181)", "courseNumber": "COMM 181:", "courseDescription": "Ethical and social issues related to the development and use of computer technology. Ethical theory, and social, political, and legal considerations. Scenarios in problem areas: privacy, reliability and risks of complex systems, and responsibility of professionals for applications and consequences of their work. Prerequisite: 106A.", "courseAttributes": "Terms: Aut, Win | Units: 4 | UG Reqs: GER:EC-EthicReas, WAY-ER | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Computers, Ethics, and Public Policy (CS 181, ETHICSOC 181X, PHIL 75C, POLISCI 181, PUBLPOL 181)", "courseNumber": "COMM 181:", "courseDescription": "Ethical and social issues related to the development and use of computer technology. Ethical theory, and social, political, and legal considerations. Scenarios in problem areas: privacy, reliability and risks of complex systems, and responsibility of professionals for applications and consequences of their work. Prerequisite: 106A.", "courseAttributes": "Terms: Aut, Win | Units: 4 | UG Reqs: GER:EC-EthicReas, WAY-ER | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Computers, Ethics, and Public Policy (CS 181, ETHICSOC 181X, PHIL 75C, POLISCI 181, PUBLPOL 181)", "courseNumber": "COMM 181:", "courseDescription": "Ethical and social issues related to the development and use of computer technology. Ethical theory, and social, political, and legal considerations. Scenarios in problem areas: privacy, reliability and risks of complex systems, and responsibility of professionals for applications and consequences of their work. Prerequisite: 106A.", "courseAttributes": "Terms: Aut, Win | Units: 4 | UG Reqs: GER:EC-EthicReas, WAY-ER | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Computers, Ethics, and Public Policy (CS 181, ETHICSOC 181X, PHIL 75C, POLISCI 181, PUBLPOL 181)", "courseNumber": "COMM 181:", "courseDescription": "Ethical and social issues related to the development and use of computer technology. Ethical theory, and social, political, and legal considerations. Scenarios in problem areas: privacy, reliability and risks of complex systems, and responsibility of professionals for applications and consequences of their work. Prerequisite: 106A.", "courseAttributes": "Terms: Aut, Win | Units: 4 | UG Reqs: GER:EC-EthicReas, WAY-ER | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Computers, Ethics, and Public Policy (CS 181, ETHICSOC 181X, PHIL 75C, POLISCI 181, PUBLPOL 181)", "courseNumber": "COMM 181:", "courseDescription": "Ethical and social issues related to the development and use of computer technology. Ethical theory, and social, political, and legal considerations. Scenarios in problem areas: privacy, reliability and risks of complex systems, and responsibility of professionals for applications and consequences of their work. Prerequisite: 106A.", "courseAttributes": "Terms: Aut, Win | Units: 4 | UG Reqs: GER:EC-EthicReas, WAY-ER | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Computers, Ethics, and Public Policy (CS 181, ETHICSOC 181X, PHIL 75C, POLISCI 181, PUBLPOL 181)", "courseNumber": "COMM 181:", "courseDescription": "Ethical and social issues related to the development and use of computer technology. Ethical theory, and social, political, and legal considerations. Scenarios in problem areas: privacy, reliability and risks of complex systems, and responsibility of professionals for applications and consequences of their work. Prerequisite: 106A.", "courseAttributes": "Terms: Aut, Win | Units: 4 | UG Reqs: GER:EC-EthicReas, WAY-ER | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Computers, Ethics, and Public Policy (CS 181, ETHICSOC 181X, PHIL 75C, POLISCI 181, PUBLPOL 181)", "courseNumber": "COMM 181:", "courseDescription": "Ethical and social issues related to the development and use of computer technology. Ethical theory, and social, political, and legal considerations. Scenarios in problem areas: privacy, reliability and risks of complex systems, and responsibility of professionals for applications and consequences of their work. Prerequisite: 106A.", "courseAttributes": "Terms: Aut, Win | Units: 4 | UG Reqs: GER:EC-EthicReas, WAY-ER | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Computers, Ethics, and Public Policy (CS 181, ETHICSOC 181X, PHIL 75C, POLISCI 181, PUBLPOL 181)", "courseNumber": "COMM 181:", "courseDescription": "Ethical and social issues related to the development and use of computer technology. Ethical theory, and social, political, and legal considerations. Scenarios in problem areas: privacy, reliability and risks of complex systems, and responsibility of professionals for applications and consequences of their work. Prerequisite: 106A.", "courseAttributes": "Terms: Aut, Win | Units: 4 | UG Reqs: GER:EC-EthicReas, WAY-ER | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Computers, Ethics, and Public Policy (CS 181, ETHICSOC 181X, PHIL 75C, POLISCI 181, PUBLPOL 181)", "courseNumber": "COMM 181:", "courseDescription": "Ethical and social issues related to the development and use of computer technology. Ethical theory, and social, political, and legal considerations. Scenarios in problem areas: privacy, reliability and risks of complex systems, and responsibility of professionals for applications and consequences of their work. Prerequisite: 106A.", "courseAttributes": "Terms: Aut, Win | Units: 4 | UG Reqs: GER:EC-EthicReas, WAY-ER | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Computers, Ethics, and Public Policy (CS 181, ETHICSOC 181X, PHIL 75C, POLISCI 181, PUBLPOL 181)", "courseNumber": "COMM 181:", "courseDescription": "Ethical and social issues related to the development and use of computer technology. Ethical theory, and social, political, and legal considerations. Scenarios in problem areas: privacy, reliability and risks of complex systems, and responsibility of professionals for applications and consequences of their work. Prerequisite: 106A.", "courseAttributes": "Terms: Aut, Win | Units: 4 | UG Reqs: GER:EC-EthicReas, WAY-ER | Grading: Letter or Credit/No Credit"}]}}
{"John C. Mitchell": {"courses": [{"courseTitle": "Teaching in Cancer Biology", "courseNumber": "CBIO 260:", "courseDescription": "Practical experience in teaching by serving as a teaching assistant in a cancer biology course. Unit values are allotted  individually to reflect the level of teaching responsibility assigned to the student.", "courseAttributes": "Terms: Aut, Win, Spr | Units: 1-10 | Repeatable for credit | Grading: Medical Satisfactory/No Credit"}, {"courseTitle": "Teaching in Cancer Biology", "courseNumber": "CBIO 260:", "courseDescription": "Practical experience in teaching by serving as a teaching assistant in a cancer biology course. Unit values are allotted  individually to reflect the level of teaching responsibility assigned to the student.", "courseAttributes": "Terms: Aut, Win, Spr | Units: 1-10 | Repeatable for credit | Grading: Medical Satisfactory/No Credit"}, {"courseTitle": "Teaching in Cancer Biology", "courseNumber": "CBIO 260:", "courseDescription": "Practical experience in teaching by serving as a teaching assistant in a cancer biology course. Unit values are allotted  individually to reflect the level of teaching responsibility assigned to the student.", "courseAttributes": "Terms: Aut, Win, Spr | Units: 1-10 | Repeatable for credit | Grading: Medical Satisfactory/No Credit"}, {"courseTitle": "Teaching in Cancer Biology", "courseNumber": "CBIO 260:", "courseDescription": "Practical experience in teaching by serving as a teaching assistant in a cancer biology course. Unit values are allotted  individually to reflect the level of teaching responsibility assigned to the student.", "courseAttributes": "Terms: Aut, Win, Spr | Units: 1-10 | Repeatable for credit | Grading: Medical Satisfactory/No Credit"}, {"courseTitle": "Teaching in Cancer Biology", "courseNumber": "CBIO 260:", "courseDescription": "Practical experience in teaching by serving as a teaching assistant in a cancer biology course. Unit values are allotted  individually to reflect the level of teaching responsibility assigned to the student.", "courseAttributes": "Terms: Aut, Win, Spr | Units: 1-10 | Repeatable for credit | Grading: Medical Satisfactory/No Credit"}, {"courseTitle": "Teaching in Cancer Biology", "courseNumber": "CBIO 260:", "courseDescription": "Practical experience in teaching by serving as a teaching assistant in a cancer biology course. Unit values are allotted  individually to reflect the level of teaching responsibility assigned to the student.", "courseAttributes": "Terms: Aut, Win, Spr | Units: 1-10 | Repeatable for credit | Grading: Medical Satisfactory/No Credit"}, {"courseTitle": "Teaching in Cancer Biology", "courseNumber": "CBIO 260:", "courseDescription": "Practical experience in teaching by serving as a teaching assistant in a cancer biology course. Unit values are allotted  individually to reflect the level of teaching responsibility assigned to the student.", "courseAttributes": "Terms: Aut, Win, Spr | Units: 1-10 | Repeatable for credit | Grading: Medical Satisfactory/No Credit"}, {"courseTitle": "Teaching in Cancer Biology", "courseNumber": "CBIO 260:", "courseDescription": "Practical experience in teaching by serving as a teaching assistant in a cancer biology course. Unit values are allotted  individually to reflect the level of teaching responsibility assigned to the student.", "courseAttributes": "Terms: Aut, Win, Spr | Units: 1-10 | Repeatable for credit | Grading: Medical Satisfactory/No Credit"}, {"courseTitle": "Teaching in Cancer Biology", "courseNumber": "CBIO 260:", "courseDescription": "Practical experience in teaching by serving as a teaching assistant in a cancer biology course. Unit values are allotted  individually to reflect the level of teaching responsibility assigned to the student.", "courseAttributes": "Terms: Aut, Win, Spr | Units: 1-10 | Repeatable for credit | Grading: Medical Satisfactory/No Credit"}, {"courseTitle": "Teaching in Cancer Biology", "courseNumber": "CBIO 260:", "courseDescription": "Practical experience in teaching by serving as a teaching assistant in a cancer biology course. Unit values are allotted  individually to reflect the level of teaching responsibility assigned to the student.", "courseAttributes": "Terms: Aut, Win, Spr | Units: 1-10 | Repeatable for credit | Grading: Medical Satisfactory/No Credit"}, {"courseTitle": "Teaching in Cancer Biology", "courseNumber": "CBIO 260:", "courseDescription": "Practical experience in teaching by serving as a teaching assistant in a cancer biology course. Unit values are allotted  individually to reflect the level of teaching responsibility assigned to the student.", "courseAttributes": "Terms: Aut, Win, Spr | Units: 1-10 | Repeatable for credit | Grading: Medical Satisfactory/No Credit"}, {"courseTitle": "Teaching in Cancer Biology", "courseNumber": "CBIO 260:", "courseDescription": "Practical experience in teaching by serving as a teaching assistant in a cancer biology course. Unit values are allotted  individually to reflect the level of teaching responsibility assigned to the student.", "courseAttributes": "Terms: Aut, Win, Spr | Units: 1-10 | Repeatable for credit | Grading: Medical Satisfactory/No Credit"}, {"courseTitle": "Teaching in Cancer Biology", "courseNumber": "CBIO 260:", "courseDescription": "Practical experience in teaching by serving as a teaching assistant in a cancer biology course. Unit values are allotted  individually to reflect the level of teaching responsibility assigned to the student.", "courseAttributes": "Terms: Aut, Win, Spr | Units: 1-10 | Repeatable for credit | Grading: Medical Satisfactory/No Credit"}, {"courseTitle": "Teaching in Cancer Biology", "courseNumber": "CBIO 260:", "courseDescription": "Practical experience in teaching by serving as a teaching assistant in a cancer biology course. Unit values are allotted  individually to reflect the level of teaching responsibility assigned to the student.", "courseAttributes": "Terms: Aut, Win, Spr | Units: 1-10 | Repeatable for credit | Grading: Medical Satisfactory/No Credit"}, {"courseTitle": "Teaching in Cancer Biology", "courseNumber": "CBIO 260:", "courseDescription": "Practical experience in teaching by serving as a teaching assistant in a cancer biology course. Unit values are allotted  individually to reflect the level of teaching responsibility assigned to the student.", "courseAttributes": "Terms: Aut, Win, Spr | Units: 1-10 | Repeatable for credit | Grading: Medical Satisfactory/No Credit"}, {"courseTitle": "Teaching in Cancer Biology", "courseNumber": "CBIO 260:", "courseDescription": "Practical experience in teaching by serving as a teaching assistant in a cancer biology course. Unit values are allotted  individually to reflect the level of teaching responsibility assigned to the student.", "courseAttributes": "Terms: Aut, Win, Spr | Units: 1-10 | Repeatable for credit | Grading: Medical Satisfactory/No Credit"}, {"courseTitle": "Teaching in Cancer Biology", "courseNumber": "CBIO 260:", "courseDescription": "Practical experience in teaching by serving as a teaching assistant in a cancer biology course. Unit values are allotted  individually to reflect the level of teaching responsibility assigned to the student.", "courseAttributes": "Terms: Aut, Win, Spr | Units: 1-10 | Repeatable for credit | Grading: Medical Satisfactory/No Credit"}, {"courseTitle": "Teaching in Cancer Biology", "courseNumber": "CBIO 260:", "courseDescription": "Practical experience in teaching by serving as a teaching assistant in a cancer biology course. Unit values are allotted  individually to reflect the level of teaching responsibility assigned to the student.", "courseAttributes": "Terms: Aut, Win, Spr | Units: 1-10 | Repeatable for credit | Grading: Medical Satisfactory/No Credit"}, {"courseTitle": "Teaching in Cancer Biology", "courseNumber": "CBIO 260:", "courseDescription": "Practical experience in teaching by serving as a teaching assistant in a cancer biology course. Unit values are allotted  individually to reflect the level of teaching responsibility assigned to the student.", "courseAttributes": "Terms: Aut, Win, Spr | Units: 1-10 | Repeatable for credit | Grading: Medical Satisfactory/No Credit"}, {"courseTitle": "Teaching in Cancer Biology", "courseNumber": "CBIO 260:", "courseDescription": "Practical experience in teaching by serving as a teaching assistant in a cancer biology course. Unit values are allotted  individually to reflect the level of teaching responsibility assigned to the student.", "courseAttributes": "Terms: Aut, Win, Spr | Units: 1-10 | Repeatable for credit | Grading: Medical Satisfactory/No Credit"}, {"courseTitle": "Teaching in Cancer Biology", "courseNumber": "CBIO 260:", "courseDescription": "Practical experience in teaching by serving as a teaching assistant in a cancer biology course. Unit values are allotted  individually to reflect the level of teaching responsibility assigned to the student.", "courseAttributes": "Terms: Aut, Win, Spr | Units: 1-10 | Repeatable for credit | Grading: Medical Satisfactory/No Credit"}, {"courseTitle": "Teaching in Cancer Biology", "courseNumber": "CBIO 260:", "courseDescription": "Practical experience in teaching by serving as a teaching assistant in a cancer biology course. Unit values are allotted  individually to reflect the level of teaching responsibility assigned to the student.", "courseAttributes": "Terms: Aut, Win, Spr | Units: 1-10 | Repeatable for credit | Grading: Medical Satisfactory/No Credit"}, {"courseTitle": "Teaching in Cancer Biology", "courseNumber": "CBIO 260:", "courseDescription": "Practical experience in teaching by serving as a teaching assistant in a cancer biology course. Unit values are allotted  individually to reflect the level of teaching responsibility assigned to the student.", "courseAttributes": "Terms: Aut, Win, Spr | Units: 1-10 | Repeatable for credit | Grading: Medical Satisfactory/No Credit"}, {"courseTitle": "Teaching in Cancer Biology", "courseNumber": "CBIO 260:", "courseDescription": "Practical experience in teaching by serving as a teaching assistant in a cancer biology course. Unit values are allotted  individually to reflect the level of teaching responsibility assigned to the student.", "courseAttributes": "Terms: Aut, Win, Spr | Units: 1-10 | Repeatable for credit | Grading: Medical Satisfactory/No Credit"}, {"courseTitle": "Teaching in Cancer Biology", "courseNumber": "CBIO 260:", "courseDescription": "Practical experience in teaching by serving as a teaching assistant in a cancer biology course. Unit values are allotted  individually to reflect the level of teaching responsibility assigned to the student.", "courseAttributes": "Terms: Aut, Win, Spr | Units: 1-10 | Repeatable for credit | Grading: Medical Satisfactory/No Credit"}, {"courseTitle": "Teaching in Cancer Biology", "courseNumber": "CBIO 260:", "courseDescription": "Practical experience in teaching by serving as a teaching assistant in a cancer biology course. Unit values are allotted  individually to reflect the level of teaching responsibility assigned to the student.", "courseAttributes": "Terms: Aut, Win, Spr | Units: 1-10 | Repeatable for credit | Grading: Medical Satisfactory/No Credit"}, {"courseTitle": "Teaching in Cancer Biology", "courseNumber": "CBIO 260:", "courseDescription": "Practical experience in teaching by serving as a teaching assistant in a cancer biology course. Unit values are allotted  individually to reflect the level of teaching responsibility assigned to the student.", "courseAttributes": "Terms: Aut, Win, Spr | Units: 1-10 | Repeatable for credit | Grading: Medical Satisfactory/No Credit"}, {"courseTitle": "Teaching in Cancer Biology", "courseNumber": "CBIO 260:", "courseDescription": "Practical experience in teaching by serving as a teaching assistant in a cancer biology course. Unit values are allotted  individually to reflect the level of teaching responsibility assigned to the student.", "courseAttributes": "Terms: Aut, Win, Spr | Units: 1-10 | Repeatable for credit | Grading: Medical Satisfactory/No Credit"}, {"courseTitle": "Teaching in Cancer Biology", "courseNumber": "CBIO 260:", "courseDescription": "Practical experience in teaching by serving as a teaching assistant in a cancer biology course. Unit values are allotted  individually to reflect the level of teaching responsibility assigned to the student.", "courseAttributes": "Terms: Aut, Win, Spr | Units: 1-10 | Repeatable for credit | Grading: Medical Satisfactory/No Credit"}, {"courseTitle": "Teaching in Cancer Biology", "courseNumber": "CBIO 260:", "courseDescription": "Practical experience in teaching by serving as a teaching assistant in a cancer biology course. Unit values are allotted  individually to reflect the level of teaching responsibility assigned to the student.", "courseAttributes": "Terms: Aut, Win, Spr | Units: 1-10 | Repeatable for credit | Grading: Medical Satisfactory/No Credit"}, {"courseTitle": "Teaching in Cancer Biology", "courseNumber": "CBIO 260:", "courseDescription": "Practical experience in teaching by serving as a teaching assistant in a cancer biology course. Unit values are allotted  individually to reflect the level of teaching responsibility assigned to the student.", "courseAttributes": "Terms: Aut, Win, Spr | Units: 1-10 | Repeatable for credit | Grading: Medical Satisfactory/No Credit"}, {"courseTitle": "Teaching in Cancer Biology", "courseNumber": "CBIO 260:", "courseDescription": "Practical experience in teaching by serving as a teaching assistant in a cancer biology course. Unit values are allotted  individually to reflect the level of teaching responsibility assigned to the student.", "courseAttributes": "Terms: Aut, Win, Spr | Units: 1-10 | Repeatable for credit | Grading: Medical Satisfactory/No Credit"}, {"courseTitle": "Teaching in Cancer Biology", "courseNumber": "CBIO 260:", "courseDescription": "Practical experience in teaching by serving as a teaching assistant in a cancer biology course. Unit values are allotted  individually to reflect the level of teaching responsibility assigned to the student.", "courseAttributes": "Terms: Aut, Win, Spr | Units: 1-10 | Repeatable for credit | Grading: Medical Satisfactory/No Credit"}, {"courseTitle": "Teaching in Cancer Biology", "courseNumber": "CBIO 260:", "courseDescription": "Practical experience in teaching by serving as a teaching assistant in a cancer biology course. Unit values are allotted  individually to reflect the level of teaching responsibility assigned to the student.", "courseAttributes": "Terms: Aut, Win, Spr | Units: 1-10 | Repeatable for credit | Grading: Medical Satisfactory/No Credit"}, {"courseTitle": "Teaching in Cancer Biology", "courseNumber": "CBIO 260:", "courseDescription": "Practical experience in teaching by serving as a teaching assistant in a cancer biology course. Unit values are allotted  individually to reflect the level of teaching responsibility assigned to the student.", "courseAttributes": "Terms: Aut, Win, Spr | Units: 1-10 | Repeatable for credit | Grading: Medical Satisfactory/No Credit"}, {"courseTitle": "Teaching in Cancer Biology", "courseNumber": "CBIO 260:", "courseDescription": "Practical experience in teaching by serving as a teaching assistant in a cancer biology course. Unit values are allotted  individually to reflect the level of teaching responsibility assigned to the student.", "courseAttributes": "Terms: Aut, Win, Spr | Units: 1-10 | Repeatable for credit | Grading: Medical Satisfactory/No Credit"}, {"courseTitle": "Teaching in Cancer Biology", "courseNumber": "CBIO 260:", "courseDescription": "Practical experience in teaching by serving as a teaching assistant in a cancer biology course. Unit values are allotted  individually to reflect the level of teaching responsibility assigned to the student.", "courseAttributes": "Terms: Aut, Win, Spr | Units: 1-10 | Repeatable for credit | Grading: Medical Satisfactory/No Credit"}, {"courseTitle": "Teaching in Cancer Biology", "courseNumber": "CBIO 260:", "courseDescription": "Practical experience in teaching by serving as a teaching assistant in a cancer biology course. Unit values are allotted  individually to reflect the level of teaching responsibility assigned to the student.", "courseAttributes": "Terms: Aut, Win, Spr | Units: 1-10 | Repeatable for credit | Grading: Medical Satisfactory/No Credit"}, {"courseTitle": "Teaching in Cancer Biology", "courseNumber": "CBIO 260:", "courseDescription": "Practical experience in teaching by serving as a teaching assistant in a cancer biology course. Unit values are allotted  individually to reflect the level of teaching responsibility assigned to the student.", "courseAttributes": "Terms: Aut, Win, Spr | Units: 1-10 | Repeatable for credit | Grading: Medical Satisfactory/No Credit"}, {"courseTitle": "Teaching in Cancer Biology", "courseNumber": "CBIO 260:", "courseDescription": "Practical experience in teaching by serving as a teaching assistant in a cancer biology course. Unit values are allotted  individually to reflect the level of teaching responsibility assigned to the student.", "courseAttributes": "Terms: Aut, Win, Spr | Units: 1-10 | Repeatable for credit | Grading: Medical Satisfactory/No Credit"}, {"courseTitle": "Teaching in Cancer Biology", "courseNumber": "CBIO 260:", "courseDescription": "Practical experience in teaching by serving as a teaching assistant in a cancer biology course. Unit values are allotted  individually to reflect the level of teaching responsibility assigned to the student.", "courseAttributes": "Terms: Aut, Win, Spr | Units: 1-10 | Repeatable for credit | Grading: Medical Satisfactory/No Credit"}, {"courseTitle": "Teaching in Cancer Biology", "courseNumber": "CBIO 260:", "courseDescription": "Practical experience in teaching by serving as a teaching assistant in a cancer biology course. Unit values are allotted  individually to reflect the level of teaching responsibility assigned to the student.", "courseAttributes": "Terms: Aut, Win, Spr | Units: 1-10 | Repeatable for credit | Grading: Medical Satisfactory/No Credit"}, {"courseTitle": "Teaching in Cancer Biology", "courseNumber": "CBIO 260:", "courseDescription": "Practical experience in teaching by serving as a teaching assistant in a cancer biology course. Unit values are allotted  individually to reflect the level of teaching responsibility assigned to the student.", "courseAttributes": "Terms: Aut, Win, Spr | Units: 1-10 | Repeatable for credit | Grading: Medical Satisfactory/No Credit"}, {"courseTitle": "Teaching in Cancer Biology", "courseNumber": "CBIO 260:", "courseDescription": "Practical experience in teaching by serving as a teaching assistant in a cancer biology course. Unit values are allotted  individually to reflect the level of teaching responsibility assigned to the student.", "courseAttributes": "Terms: Aut, Win, Spr | Units: 1-10 | Repeatable for credit | Grading: Medical Satisfactory/No Credit"}, {"courseTitle": "Teaching in Cancer Biology", "courseNumber": "CBIO 260:", "courseDescription": "Practical experience in teaching by serving as a teaching assistant in a cancer biology course. Unit values are allotted  individually to reflect the level of teaching responsibility assigned to the student.", "courseAttributes": "Terms: Aut, Win, Spr | Units: 1-10 | Repeatable for credit | Grading: Medical Satisfactory/No Credit"}, {"courseTitle": "Teaching in Cancer Biology", "courseNumber": "CBIO 260:", "courseDescription": "Practical experience in teaching by serving as a teaching assistant in a cancer biology course. Unit values are allotted  individually to reflect the level of teaching responsibility assigned to the student.", "courseAttributes": "Terms: Aut, Win, Spr | Units: 1-10 | Repeatable for credit | Grading: Medical Satisfactory/No Credit"}, {"courseTitle": "Teaching in Cancer Biology", "courseNumber": "CBIO 260:", "courseDescription": "Practical experience in teaching by serving as a teaching assistant in a cancer biology course. Unit values are allotted  individually to reflect the level of teaching responsibility assigned to the student.", "courseAttributes": "Terms: Aut, Win, Spr | Units: 1-10 | Repeatable for credit | Grading: Medical Satisfactory/No Credit"}, {"courseTitle": "Teaching in Cancer Biology", "courseNumber": "CBIO 260:", "courseDescription": "Practical experience in teaching by serving as a teaching assistant in a cancer biology course. Unit values are allotted  individually to reflect the level of teaching responsibility assigned to the student.", "courseAttributes": "Terms: Aut, Win, Spr | Units: 1-10 | Repeatable for credit | Grading: Medical Satisfactory/No Credit"}, {"courseTitle": "Teaching in Cancer Biology", "courseNumber": "CBIO 260:", "courseDescription": "Practical experience in teaching by serving as a teaching assistant in a cancer biology course. Unit values are allotted  individually to reflect the level of teaching responsibility assigned to the student.", "courseAttributes": "Terms: Aut, Win, Spr | Units: 1-10 | Repeatable for credit | Grading: Medical Satisfactory/No Credit"}, {"courseTitle": "Teaching in Cancer Biology", "courseNumber": "CBIO 260:", "courseDescription": "Practical experience in teaching by serving as a teaching assistant in a cancer biology course. Unit values are allotted  individually to reflect the level of teaching responsibility assigned to the student.", "courseAttributes": "Terms: Aut, Win, Spr | Units: 1-10 | Repeatable for credit | Grading: Medical Satisfactory/No Credit"}, {"courseTitle": "Teaching in Cancer Biology", "courseNumber": "CBIO 260:", "courseDescription": "Practical experience in teaching by serving as a teaching assistant in a cancer biology course. Unit values are allotted  individually to reflect the level of teaching responsibility assigned to the student.", "courseAttributes": "Terms: Aut, Win, Spr | Units: 1-10 | Repeatable for credit | Grading: Medical Satisfactory/No Credit"}, {"courseTitle": "Teaching in Cancer Biology", "courseNumber": "CBIO 260:", "courseDescription": "Practical experience in teaching by serving as a teaching assistant in a cancer biology course. Unit values are allotted  individually to reflect the level of teaching responsibility assigned to the student.", "courseAttributes": "Terms: Aut, Win, Spr | Units: 1-10 | Repeatable for credit | Grading: Medical Satisfactory/No Credit"}, {"courseTitle": "Teaching in Cancer Biology", "courseNumber": "CBIO 260:", "courseDescription": "Practical experience in teaching by serving as a teaching assistant in a cancer biology course. Unit values are allotted  individually to reflect the level of teaching responsibility assigned to the student.", "courseAttributes": "Terms: Aut, Win, Spr | Units: 1-10 | Repeatable for credit | Grading: Medical Satisfactory/No Credit"}, {"courseTitle": "Teaching in Cancer Biology", "courseNumber": "CBIO 260:", "courseDescription": "Practical experience in teaching by serving as a teaching assistant in a cancer biology course. Unit values are allotted  individually to reflect the level of teaching responsibility assigned to the student.", "courseAttributes": "Terms: Aut, Win, Spr | Units: 1-10 | Repeatable for credit | Grading: Medical Satisfactory/No Credit"}, {"courseTitle": "Teaching in Cancer Biology", "courseNumber": "CBIO 260:", "courseDescription": "Practical experience in teaching by serving as a teaching assistant in a cancer biology course. Unit values are allotted  individually to reflect the level of teaching responsibility assigned to the student.", "courseAttributes": "Terms: Aut, Win, Spr | Units: 1-10 | Repeatable for credit | Grading: Medical Satisfactory/No Credit"}, {"courseTitle": "Teaching in Cancer Biology", "courseNumber": "CBIO 260:", "courseDescription": "Practical experience in teaching by serving as a teaching assistant in a cancer biology course. Unit values are allotted  individually to reflect the level of teaching responsibility assigned to the student.", "courseAttributes": "Terms: Aut, Win, Spr | Units: 1-10 | Repeatable for credit | Grading: Medical Satisfactory/No Credit"}, {"courseTitle": "Teaching in Cancer Biology", "courseNumber": "CBIO 260:", "courseDescription": "Practical experience in teaching by serving as a teaching assistant in a cancer biology course. Unit values are allotted  individually to reflect the level of teaching responsibility assigned to the student.", "courseAttributes": "Terms: Aut, Win, Spr | Units: 1-10 | Repeatable for credit | Grading: Medical Satisfactory/No Credit"}, {"courseTitle": "Teaching in Cancer Biology", "courseNumber": "CBIO 260:", "courseDescription": "Practical experience in teaching by serving as a teaching assistant in a cancer biology course. Unit values are allotted  individually to reflect the level of teaching responsibility assigned to the student.", "courseAttributes": "Terms: Aut, Win, Spr | Units: 1-10 | Repeatable for credit | Grading: Medical Satisfactory/No Credit"}]}}
{"Michael S. Bernstein": {"courses": [{"courseTitle": "Individual Work", "courseNumber": "AMSTUD 195:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-5 | Repeatable for credit | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Individual Work", "courseNumber": "AMSTUD 195:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-5 | Repeatable for credit | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Individual Work", "courseNumber": "AMSTUD 195:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-5 | Repeatable for credit | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Individual Work", "courseNumber": "AMSTUD 195:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-5 | Repeatable for credit | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Individual Work", "courseNumber": "AMSTUD 195:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-5 | Repeatable for credit | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Individual Work", "courseNumber": "AMSTUD 195:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-5 | Repeatable for credit | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Individual Work", "courseNumber": "AMSTUD 195:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-5 | Repeatable for credit | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Individual Work", "courseNumber": "AMSTUD 195:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-5 | Repeatable for credit | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Individual Work", "courseNumber": "AMSTUD 195:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-5 | Repeatable for credit | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Individual Work", "courseNumber": "AMSTUD 195:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-5 | Repeatable for credit | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Individual Work", "courseNumber": "AMSTUD 195:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-5 | Repeatable for credit | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Individual Work", "courseNumber": "AMSTUD 195:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-5 | Repeatable for credit | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Individual Work", "courseNumber": "AMSTUD 195:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-5 | Repeatable for credit | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Individual Work", "courseNumber": "AMSTUD 195:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-5 | Repeatable for credit | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Individual Work", "courseNumber": "AMSTUD 195:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-5 | Repeatable for credit | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Individual Work", "courseNumber": "AMSTUD 195:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-5 | Repeatable for credit | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Individual Work", "courseNumber": "AMSTUD 195:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-5 | Repeatable for credit | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Individual Work", "courseNumber": "AMSTUD 195:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-5 | Repeatable for credit | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Individual Work", "courseNumber": "AMSTUD 195:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-5 | Repeatable for credit | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Individual Work", "courseNumber": "AMSTUD 195:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-5 | Repeatable for credit | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Individual Work", "courseNumber": "AMSTUD 195:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-5 | Repeatable for credit | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Individual Work", "courseNumber": "AMSTUD 195:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-5 | Repeatable for credit | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Individual Work", "courseNumber": "AMSTUD 195:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-5 | Repeatable for credit | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Individual Work", "courseNumber": "AMSTUD 195:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-5 | Repeatable for credit | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Individual Work", "courseNumber": "AMSTUD 195:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-5 | Repeatable for credit | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Individual Work", "courseNumber": "AMSTUD 195:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-5 | Repeatable for credit | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Individual Work", "courseNumber": "AMSTUD 195:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-5 | Repeatable for credit | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Individual Work", "courseNumber": "AMSTUD 195:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-5 | Repeatable for credit | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Individual Work", "courseNumber": "AMSTUD 195:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-5 | Repeatable for credit | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Individual Work", "courseNumber": "AMSTUD 195:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-5 | Repeatable for credit | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Individual Work", "courseNumber": "AMSTUD 195:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-5 | Repeatable for credit | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Individual Work", "courseNumber": "AMSTUD 195:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-5 | Repeatable for credit | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Individual Work", "courseNumber": "AMSTUD 195:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-5 | Repeatable for credit | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Individual Work", "courseNumber": "AMSTUD 195:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-5 | Repeatable for credit | Grading: Letter or Credit/No Credit"}]}}
{"Moses Charikar": {"courses": [{"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}]}}
{"Omer Reingold": {"courses": [{"courseTitle": "Playback Theater For Research", "courseNumber": "CS 83:", "courseDescription": "Playback combines elements of theater, community work and storytelling. In a playback show, a group of actors and musicians create an improvised performance based on the audience's personal stories. A playback show brings about a powerful listening and sharing experience. During the course, we will tell, listen, play together, and train in playback techniques. We will write diaries to process our experience in the context of education and research.  The course is aimed to strengthen listening abilities, creativity and the collaborative spirit, all integral parts of doing great science. In playback, as in research, we are always moving together, from the known, to the unknown, and back. There is limited enrollment for this class. Application is required.", "courseAttributes": "Terms: Win | Units: 3 | UG Reqs: WAY-CE | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Playback Theater For Research", "courseNumber": "CS 83:", "courseDescription": "Playback combines elements of theater, community work and storytelling. In a playback show, a group of actors and musicians create an improvised performance based on the audience's personal stories. A playback show brings about a powerful listening and sharing experience. During the course, we will tell, listen, play together, and train in playback techniques. We will write diaries to process our experience in the context of education and research.  The course is aimed to strengthen listening abilities, creativity and the collaborative spirit, all integral parts of doing great science. In playback, as in research, we are always moving together, from the known, to the unknown, and back. There is limited enrollment for this class. Application is required.", "courseAttributes": "Terms: Win | Units: 3 | UG Reqs: WAY-CE | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Playback Theater For Research", "courseNumber": "CS 83:", "courseDescription": "Playback combines elements of theater, community work and storytelling. In a playback show, a group of actors and musicians create an improvised performance based on the audience's personal stories. A playback show brings about a powerful listening and sharing experience. During the course, we will tell, listen, play together, and train in playback techniques. We will write diaries to process our experience in the context of education and research.  The course is aimed to strengthen listening abilities, creativity and the collaborative spirit, all integral parts of doing great science. In playback, as in research, we are always moving together, from the known, to the unknown, and back. There is limited enrollment for this class. Application is required.", "courseAttributes": "Terms: Win | Units: 3 | UG Reqs: WAY-CE | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Playback Theater For Research", "courseNumber": "CS 83:", "courseDescription": "Playback combines elements of theater, community work and storytelling. In a playback show, a group of actors and musicians create an improvised performance based on the audience's personal stories. A playback show brings about a powerful listening and sharing experience. During the course, we will tell, listen, play together, and train in playback techniques. We will write diaries to process our experience in the context of education and research.  The course is aimed to strengthen listening abilities, creativity and the collaborative spirit, all integral parts of doing great science. In playback, as in research, we are always moving together, from the known, to the unknown, and back. There is limited enrollment for this class. Application is required.", "courseAttributes": "Terms: Win | Units: 3 | UG Reqs: WAY-CE | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Playback Theater For Research", "courseNumber": "CS 83:", "courseDescription": "Playback combines elements of theater, community work and storytelling. In a playback show, a group of actors and musicians create an improvised performance based on the audience's personal stories. A playback show brings about a powerful listening and sharing experience. During the course, we will tell, listen, play together, and train in playback techniques. We will write diaries to process our experience in the context of education and research.  The course is aimed to strengthen listening abilities, creativity and the collaborative spirit, all integral parts of doing great science. In playback, as in research, we are always moving together, from the known, to the unknown, and back. There is limited enrollment for this class. Application is required.", "courseAttributes": "Terms: Win | Units: 3 | UG Reqs: WAY-CE | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Playback Theater For Research", "courseNumber": "CS 83:", "courseDescription": "Playback combines elements of theater, community work and storytelling. In a playback show, a group of actors and musicians create an improvised performance based on the audience's personal stories. A playback show brings about a powerful listening and sharing experience. During the course, we will tell, listen, play together, and train in playback techniques. We will write diaries to process our experience in the context of education and research.  The course is aimed to strengthen listening abilities, creativity and the collaborative spirit, all integral parts of doing great science. In playback, as in research, we are always moving together, from the known, to the unknown, and back. There is limited enrollment for this class. Application is required.", "courseAttributes": "Terms: Win | Units: 3 | UG Reqs: WAY-CE | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Playback Theater For Research", "courseNumber": "CS 83:", "courseDescription": "Playback combines elements of theater, community work and storytelling. In a playback show, a group of actors and musicians create an improvised performance based on the audience's personal stories. A playback show brings about a powerful listening and sharing experience. During the course, we will tell, listen, play together, and train in playback techniques. We will write diaries to process our experience in the context of education and research.  The course is aimed to strengthen listening abilities, creativity and the collaborative spirit, all integral parts of doing great science. In playback, as in research, we are always moving together, from the known, to the unknown, and back. There is limited enrollment for this class. Application is required.", "courseAttributes": "Terms: Win | Units: 3 | UG Reqs: WAY-CE | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Playback Theater For Research", "courseNumber": "CS 83:", "courseDescription": "Playback combines elements of theater, community work and storytelling. In a playback show, a group of actors and musicians create an improvised performance based on the audience's personal stories. A playback show brings about a powerful listening and sharing experience. During the course, we will tell, listen, play together, and train in playback techniques. We will write diaries to process our experience in the context of education and research.  The course is aimed to strengthen listening abilities, creativity and the collaborative spirit, all integral parts of doing great science. In playback, as in research, we are always moving together, from the known, to the unknown, and back. There is limited enrollment for this class. Application is required.", "courseAttributes": "Terms: Win | Units: 3 | UG Reqs: WAY-CE | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Playback Theater For Research", "courseNumber": "CS 83:", "courseDescription": "Playback combines elements of theater, community work and storytelling. In a playback show, a group of actors and musicians create an improvised performance based on the audience's personal stories. A playback show brings about a powerful listening and sharing experience. During the course, we will tell, listen, play together, and train in playback techniques. We will write diaries to process our experience in the context of education and research.  The course is aimed to strengthen listening abilities, creativity and the collaborative spirit, all integral parts of doing great science. In playback, as in research, we are always moving together, from the known, to the unknown, and back. There is limited enrollment for this class. Application is required.", "courseAttributes": "Terms: Win | Units: 3 | UG Reqs: WAY-CE | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Playback Theater For Research", "courseNumber": "CS 83:", "courseDescription": "Playback combines elements of theater, community work and storytelling. In a playback show, a group of actors and musicians create an improvised performance based on the audience's personal stories. A playback show brings about a powerful listening and sharing experience. During the course, we will tell, listen, play together, and train in playback techniques. We will write diaries to process our experience in the context of education and research.  The course is aimed to strengthen listening abilities, creativity and the collaborative spirit, all integral parts of doing great science. In playback, as in research, we are always moving together, from the known, to the unknown, and back. There is limited enrollment for this class. Application is required.", "courseAttributes": "Terms: Win | Units: 3 | UG Reqs: WAY-CE | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Playback Theater For Research", "courseNumber": "CS 83:", "courseDescription": "Playback combines elements of theater, community work and storytelling. In a playback show, a group of actors and musicians create an improvised performance based on the audience's personal stories. A playback show brings about a powerful listening and sharing experience. During the course, we will tell, listen, play together, and train in playback techniques. We will write diaries to process our experience in the context of education and research.  The course is aimed to strengthen listening abilities, creativity and the collaborative spirit, all integral parts of doing great science. In playback, as in research, we are always moving together, from the known, to the unknown, and back. There is limited enrollment for this class. Application is required.", "courseAttributes": "Terms: Win | Units: 3 | UG Reqs: WAY-CE | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Playback Theater For Research", "courseNumber": "CS 83:", "courseDescription": "Playback combines elements of theater, community work and storytelling. In a playback show, a group of actors and musicians create an improvised performance based on the audience's personal stories. A playback show brings about a powerful listening and sharing experience. During the course, we will tell, listen, play together, and train in playback techniques. We will write diaries to process our experience in the context of education and research.  The course is aimed to strengthen listening abilities, creativity and the collaborative spirit, all integral parts of doing great science. In playback, as in research, we are always moving together, from the known, to the unknown, and back. There is limited enrollment for this class. Application is required.", "courseAttributes": "Terms: Win | Units: 3 | UG Reqs: WAY-CE | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Playback Theater For Research", "courseNumber": "CS 83:", "courseDescription": "Playback combines elements of theater, community work and storytelling. In a playback show, a group of actors and musicians create an improvised performance based on the audience's personal stories. A playback show brings about a powerful listening and sharing experience. During the course, we will tell, listen, play together, and train in playback techniques. We will write diaries to process our experience in the context of education and research.  The course is aimed to strengthen listening abilities, creativity and the collaborative spirit, all integral parts of doing great science. In playback, as in research, we are always moving together, from the known, to the unknown, and back. There is limited enrollment for this class. Application is required.", "courseAttributes": "Terms: Win | Units: 3 | UG Reqs: WAY-CE | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Playback Theater For Research", "courseNumber": "CS 83:", "courseDescription": "Playback combines elements of theater, community work and storytelling. In a playback show, a group of actors and musicians create an improvised performance based on the audience's personal stories. A playback show brings about a powerful listening and sharing experience. During the course, we will tell, listen, play together, and train in playback techniques. We will write diaries to process our experience in the context of education and research.  The course is aimed to strengthen listening abilities, creativity and the collaborative spirit, all integral parts of doing great science. In playback, as in research, we are always moving together, from the known, to the unknown, and back. There is limited enrollment for this class. Application is required.", "courseAttributes": "Terms: Win | Units: 3 | UG Reqs: WAY-CE | Grading: Letter or Credit/No Credit"}]}}
{"Noah D. Goodman": {"courses": [{"courseTitle": "Evolution", "courseNumber": "BIO 85:", "courseDescription": "Principles of evolution. Adaptation and natural selection. Darwin and the history of evolutionary thought. Population genetics, including genetic variation and mutation, and effects of migration, drift, linkage, and recombination. Evolutionary phenomena: developmental evolution, life history evolution, molecular evolution, sexual selection, social evolution, and speciation. Pattern and process in biological diversity. Case studies, including human evolution. Prerequisites: None. NOTE: Section enrollments will be handled on Canvas. Students will receive a message on how to sign up.", "courseAttributes": "Terms: Win | Units: 4 | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Evolution", "courseNumber": "BIO 85:", "courseDescription": "Principles of evolution. Adaptation and natural selection. Darwin and the history of evolutionary thought. Population genetics, including genetic variation and mutation, and effects of migration, drift, linkage, and recombination. Evolutionary phenomena: developmental evolution, life history evolution, molecular evolution, sexual selection, social evolution, and speciation. Pattern and process in biological diversity. Case studies, including human evolution. Prerequisites: None. NOTE: Section enrollments will be handled on Canvas. Students will receive a message on how to sign up.", "courseAttributes": "Terms: Win | Units: 4 | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Evolution", "courseNumber": "BIO 85:", "courseDescription": "Principles of evolution. Adaptation and natural selection. Darwin and the history of evolutionary thought. Population genetics, including genetic variation and mutation, and effects of migration, drift, linkage, and recombination. Evolutionary phenomena: developmental evolution, life history evolution, molecular evolution, sexual selection, social evolution, and speciation. Pattern and process in biological diversity. Case studies, including human evolution. Prerequisites: None. NOTE: Section enrollments will be handled on Canvas. Students will receive a message on how to sign up.", "courseAttributes": "Terms: Win | Units: 4 | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Evolution", "courseNumber": "BIO 85:", "courseDescription": "Principles of evolution. Adaptation and natural selection. Darwin and the history of evolutionary thought. Population genetics, including genetic variation and mutation, and effects of migration, drift, linkage, and recombination. Evolutionary phenomena: developmental evolution, life history evolution, molecular evolution, sexual selection, social evolution, and speciation. Pattern and process in biological diversity. Case studies, including human evolution. Prerequisites: None. NOTE: Section enrollments will be handled on Canvas. Students will receive a message on how to sign up.", "courseAttributes": "Terms: Win | Units: 4 | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Evolution", "courseNumber": "BIO 85:", "courseDescription": "Principles of evolution. Adaptation and natural selection. Darwin and the history of evolutionary thought. Population genetics, including genetic variation and mutation, and effects of migration, drift, linkage, and recombination. Evolutionary phenomena: developmental evolution, life history evolution, molecular evolution, sexual selection, social evolution, and speciation. Pattern and process in biological diversity. Case studies, including human evolution. Prerequisites: None. NOTE: Section enrollments will be handled on Canvas. Students will receive a message on how to sign up.", "courseAttributes": "Terms: Win | Units: 4 | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Evolution", "courseNumber": "BIO 85:", "courseDescription": "Principles of evolution. Adaptation and natural selection. Darwin and the history of evolutionary thought. Population genetics, including genetic variation and mutation, and effects of migration, drift, linkage, and recombination. Evolutionary phenomena: developmental evolution, life history evolution, molecular evolution, sexual selection, social evolution, and speciation. Pattern and process in biological diversity. Case studies, including human evolution. Prerequisites: None. NOTE: Section enrollments will be handled on Canvas. Students will receive a message on how to sign up.", "courseAttributes": "Terms: Win | Units: 4 | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Evolution", "courseNumber": "BIO 85:", "courseDescription": "Principles of evolution. Adaptation and natural selection. Darwin and the history of evolutionary thought. Population genetics, including genetic variation and mutation, and effects of migration, drift, linkage, and recombination. Evolutionary phenomena: developmental evolution, life history evolution, molecular evolution, sexual selection, social evolution, and speciation. Pattern and process in biological diversity. Case studies, including human evolution. Prerequisites: None. NOTE: Section enrollments will be handled on Canvas. Students will receive a message on how to sign up.", "courseAttributes": "Terms: Win | Units: 4 | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Evolution", "courseNumber": "BIO 85:", "courseDescription": "Principles of evolution. Adaptation and natural selection. Darwin and the history of evolutionary thought. Population genetics, including genetic variation and mutation, and effects of migration, drift, linkage, and recombination. Evolutionary phenomena: developmental evolution, life history evolution, molecular evolution, sexual selection, social evolution, and speciation. Pattern and process in biological diversity. Case studies, including human evolution. Prerequisites: None. NOTE: Section enrollments will be handled on Canvas. Students will receive a message on how to sign up.", "courseAttributes": "Terms: Win | Units: 4 | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Evolution", "courseNumber": "BIO 85:", "courseDescription": "Principles of evolution. Adaptation and natural selection. Darwin and the history of evolutionary thought. Population genetics, including genetic variation and mutation, and effects of migration, drift, linkage, and recombination. Evolutionary phenomena: developmental evolution, life history evolution, molecular evolution, sexual selection, social evolution, and speciation. Pattern and process in biological diversity. Case studies, including human evolution. Prerequisites: None. NOTE: Section enrollments will be handled on Canvas. Students will receive a message on how to sign up.", "courseAttributes": "Terms: Win | Units: 4 | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Evolution", "courseNumber": "BIO 85:", "courseDescription": "Principles of evolution. Adaptation and natural selection. Darwin and the history of evolutionary thought. Population genetics, including genetic variation and mutation, and effects of migration, drift, linkage, and recombination. Evolutionary phenomena: developmental evolution, life history evolution, molecular evolution, sexual selection, social evolution, and speciation. Pattern and process in biological diversity. Case studies, including human evolution. Prerequisites: None. NOTE: Section enrollments will be handled on Canvas. Students will receive a message on how to sign up.", "courseAttributes": "Terms: Win | Units: 4 | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Evolution", "courseNumber": "BIO 85:", "courseDescription": "Principles of evolution. Adaptation and natural selection. Darwin and the history of evolutionary thought. Population genetics, including genetic variation and mutation, and effects of migration, drift, linkage, and recombination. Evolutionary phenomena: developmental evolution, life history evolution, molecular evolution, sexual selection, social evolution, and speciation. Pattern and process in biological diversity. Case studies, including human evolution. Prerequisites: None. NOTE: Section enrollments will be handled on Canvas. Students will receive a message on how to sign up.", "courseAttributes": "Terms: Win | Units: 4 | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Evolution", "courseNumber": "BIO 85:", "courseDescription": "Principles of evolution. Adaptation and natural selection. Darwin and the history of evolutionary thought. Population genetics, including genetic variation and mutation, and effects of migration, drift, linkage, and recombination. Evolutionary phenomena: developmental evolution, life history evolution, molecular evolution, sexual selection, social evolution, and speciation. Pattern and process in biological diversity. Case studies, including human evolution. Prerequisites: None. NOTE: Section enrollments will be handled on Canvas. Students will receive a message on how to sign up.", "courseAttributes": "Terms: Win | Units: 4 | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Evolution", "courseNumber": "BIO 85:", "courseDescription": "Principles of evolution. Adaptation and natural selection. Darwin and the history of evolutionary thought. Population genetics, including genetic variation and mutation, and effects of migration, drift, linkage, and recombination. Evolutionary phenomena: developmental evolution, life history evolution, molecular evolution, sexual selection, social evolution, and speciation. Pattern and process in biological diversity. Case studies, including human evolution. Prerequisites: None. NOTE: Section enrollments will be handled on Canvas. Students will receive a message on how to sign up.", "courseAttributes": "Terms: Win | Units: 4 | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Evolution", "courseNumber": "BIO 85:", "courseDescription": "Principles of evolution. Adaptation and natural selection. Darwin and the history of evolutionary thought. Population genetics, including genetic variation and mutation, and effects of migration, drift, linkage, and recombination. Evolutionary phenomena: developmental evolution, life history evolution, molecular evolution, sexual selection, social evolution, and speciation. Pattern and process in biological diversity. Case studies, including human evolution. Prerequisites: None. NOTE: Section enrollments will be handled on Canvas. Students will receive a message on how to sign up.", "courseAttributes": "Terms: Win | Units: 4 | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Evolution", "courseNumber": "BIO 85:", "courseDescription": "Principles of evolution. Adaptation and natural selection. Darwin and the history of evolutionary thought. Population genetics, including genetic variation and mutation, and effects of migration, drift, linkage, and recombination. Evolutionary phenomena: developmental evolution, life history evolution, molecular evolution, sexual selection, social evolution, and speciation. Pattern and process in biological diversity. Case studies, including human evolution. Prerequisites: None. NOTE: Section enrollments will be handled on Canvas. Students will receive a message on how to sign up.", "courseAttributes": "Terms: Win | Units: 4 | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Evolution", "courseNumber": "BIO 85:", "courseDescription": "Principles of evolution. Adaptation and natural selection. Darwin and the history of evolutionary thought. Population genetics, including genetic variation and mutation, and effects of migration, drift, linkage, and recombination. Evolutionary phenomena: developmental evolution, life history evolution, molecular evolution, sexual selection, social evolution, and speciation. Pattern and process in biological diversity. Case studies, including human evolution. Prerequisites: None. NOTE: Section enrollments will be handled on Canvas. Students will receive a message on how to sign up.", "courseAttributes": "Terms: Win | Units: 4 | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Evolution", "courseNumber": "BIO 85:", "courseDescription": "Principles of evolution. Adaptation and natural selection. Darwin and the history of evolutionary thought. Population genetics, including genetic variation and mutation, and effects of migration, drift, linkage, and recombination. Evolutionary phenomena: developmental evolution, life history evolution, molecular evolution, sexual selection, social evolution, and speciation. Pattern and process in biological diversity. Case studies, including human evolution. Prerequisites: None. NOTE: Section enrollments will be handled on Canvas. Students will receive a message on how to sign up.", "courseAttributes": "Terms: Win | Units: 4 | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Evolution", "courseNumber": "BIO 85:", "courseDescription": "Principles of evolution. Adaptation and natural selection. Darwin and the history of evolutionary thought. Population genetics, including genetic variation and mutation, and effects of migration, drift, linkage, and recombination. Evolutionary phenomena: developmental evolution, life history evolution, molecular evolution, sexual selection, social evolution, and speciation. Pattern and process in biological diversity. Case studies, including human evolution. Prerequisites: None. NOTE: Section enrollments will be handled on Canvas. Students will receive a message on how to sign up.", "courseAttributes": "Terms: Win | Units: 4 | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Evolution", "courseNumber": "BIO 85:", "courseDescription": "Principles of evolution. Adaptation and natural selection. Darwin and the history of evolutionary thought. Population genetics, including genetic variation and mutation, and effects of migration, drift, linkage, and recombination. Evolutionary phenomena: developmental evolution, life history evolution, molecular evolution, sexual selection, social evolution, and speciation. Pattern and process in biological diversity. Case studies, including human evolution. Prerequisites: None. NOTE: Section enrollments will be handled on Canvas. Students will receive a message on how to sign up.", "courseAttributes": "Terms: Win | Units: 4 | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Evolution", "courseNumber": "BIO 85:", "courseDescription": "Principles of evolution. Adaptation and natural selection. Darwin and the history of evolutionary thought. Population genetics, including genetic variation and mutation, and effects of migration, drift, linkage, and recombination. Evolutionary phenomena: developmental evolution, life history evolution, molecular evolution, sexual selection, social evolution, and speciation. Pattern and process in biological diversity. Case studies, including human evolution. Prerequisites: None. NOTE: Section enrollments will be handled on Canvas. Students will receive a message on how to sign up.", "courseAttributes": "Terms: Win | Units: 4 | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Evolution", "courseNumber": "BIO 85:", "courseDescription": "Principles of evolution. Adaptation and natural selection. Darwin and the history of evolutionary thought. Population genetics, including genetic variation and mutation, and effects of migration, drift, linkage, and recombination. Evolutionary phenomena: developmental evolution, life history evolution, molecular evolution, sexual selection, social evolution, and speciation. Pattern and process in biological diversity. Case studies, including human evolution. Prerequisites: None. NOTE: Section enrollments will be handled on Canvas. Students will receive a message on how to sign up.", "courseAttributes": "Terms: Win | Units: 4 | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Evolution", "courseNumber": "BIO 85:", "courseDescription": "Principles of evolution. Adaptation and natural selection. Darwin and the history of evolutionary thought. Population genetics, including genetic variation and mutation, and effects of migration, drift, linkage, and recombination. Evolutionary phenomena: developmental evolution, life history evolution, molecular evolution, sexual selection, social evolution, and speciation. Pattern and process in biological diversity. Case studies, including human evolution. Prerequisites: None. NOTE: Section enrollments will be handled on Canvas. Students will receive a message on how to sign up.", "courseAttributes": "Terms: Win | Units: 4 | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Evolution", "courseNumber": "BIO 85:", "courseDescription": "Principles of evolution. Adaptation and natural selection. Darwin and the history of evolutionary thought. Population genetics, including genetic variation and mutation, and effects of migration, drift, linkage, and recombination. Evolutionary phenomena: developmental evolution, life history evolution, molecular evolution, sexual selection, social evolution, and speciation. Pattern and process in biological diversity. Case studies, including human evolution. Prerequisites: None. NOTE: Section enrollments will be handled on Canvas. Students will receive a message on how to sign up.", "courseAttributes": "Terms: Win | Units: 4 | Grading: Letter or Credit/No Credit"}]}}
{"Percy Liang": {"courses": [{"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}]}}
{"William J. Dally": {"courses": []}}
{"Monica S. Lam": {"courses": [{"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}]}}
{"Pat Hanrahan": {"courses": [{"courseTitle": "Computer Systems from the Ground Up", "courseNumber": "CS 107E:", "courseDescription": "Introduction to the fundamental concepts of computer systems through bare metal programming on the Raspberry Pi. Explores how five concepts come together in computer systems: hardware, architecture, assembly code, the C language, and software development tools. Students do all programming with a Raspberry Pi kit and several add-ons (LEDs, buttons). Topics covered include: the C programming language, data representation, machine-level code, computer arithmetic, compilation, memory organization and management, debugging, hardware, and I/O. Prerequisite: 106B or X, and consent of instructor. There is a $75 required course fee.", "courseAttributes": "Terms: Aut, Win | Units: 3-5 | UG Reqs: WAY-FR | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Computer Systems from the Ground Up", "courseNumber": "CS 107E:", "courseDescription": "Introduction to the fundamental concepts of computer systems through bare metal programming on the Raspberry Pi. Explores how five concepts come together in computer systems: hardware, architecture, assembly code, the C language, and software development tools. Students do all programming with a Raspberry Pi kit and several add-ons (LEDs, buttons). Topics covered include: the C programming language, data representation, machine-level code, computer arithmetic, compilation, memory organization and management, debugging, hardware, and I/O. Prerequisite: 106B or X, and consent of instructor. There is a $75 required course fee.", "courseAttributes": "Terms: Aut, Win | Units: 3-5 | UG Reqs: WAY-FR | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Computer Systems from the Ground Up", "courseNumber": "CS 107E:", "courseDescription": "Introduction to the fundamental concepts of computer systems through bare metal programming on the Raspberry Pi. Explores how five concepts come together in computer systems: hardware, architecture, assembly code, the C language, and software development tools. Students do all programming with a Raspberry Pi kit and several add-ons (LEDs, buttons). Topics covered include: the C programming language, data representation, machine-level code, computer arithmetic, compilation, memory organization and management, debugging, hardware, and I/O. Prerequisite: 106B or X, and consent of instructor. There is a $75 required course fee.", "courseAttributes": "Terms: Aut, Win | Units: 3-5 | UG Reqs: WAY-FR | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Computer Systems from the Ground Up", "courseNumber": "CS 107E:", "courseDescription": "Introduction to the fundamental concepts of computer systems through bare metal programming on the Raspberry Pi. Explores how five concepts come together in computer systems: hardware, architecture, assembly code, the C language, and software development tools. Students do all programming with a Raspberry Pi kit and several add-ons (LEDs, buttons). Topics covered include: the C programming language, data representation, machine-level code, computer arithmetic, compilation, memory organization and management, debugging, hardware, and I/O. Prerequisite: 106B or X, and consent of instructor. There is a $75 required course fee.", "courseAttributes": "Terms: Aut, Win | Units: 3-5 | UG Reqs: WAY-FR | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Computer Systems from the Ground Up", "courseNumber": "CS 107E:", "courseDescription": "Introduction to the fundamental concepts of computer systems through bare metal programming on the Raspberry Pi. Explores how five concepts come together in computer systems: hardware, architecture, assembly code, the C language, and software development tools. Students do all programming with a Raspberry Pi kit and several add-ons (LEDs, buttons). Topics covered include: the C programming language, data representation, machine-level code, computer arithmetic, compilation, memory organization and management, debugging, hardware, and I/O. Prerequisite: 106B or X, and consent of instructor. There is a $75 required course fee.", "courseAttributes": "Terms: Aut, Win | Units: 3-5 | UG Reqs: WAY-FR | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Computer Systems from the Ground Up", "courseNumber": "CS 107E:", "courseDescription": "Introduction to the fundamental concepts of computer systems through bare metal programming on the Raspberry Pi. Explores how five concepts come together in computer systems: hardware, architecture, assembly code, the C language, and software development tools. Students do all programming with a Raspberry Pi kit and several add-ons (LEDs, buttons). Topics covered include: the C programming language, data representation, machine-level code, computer arithmetic, compilation, memory organization and management, debugging, hardware, and I/O. Prerequisite: 106B or X, and consent of instructor. There is a $75 required course fee.", "courseAttributes": "Terms: Aut, Win | Units: 3-5 | UG Reqs: WAY-FR | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Computer Systems from the Ground Up", "courseNumber": "CS 107E:", "courseDescription": "Introduction to the fundamental concepts of computer systems through bare metal programming on the Raspberry Pi. Explores how five concepts come together in computer systems: hardware, architecture, assembly code, the C language, and software development tools. Students do all programming with a Raspberry Pi kit and several add-ons (LEDs, buttons). Topics covered include: the C programming language, data representation, machine-level code, computer arithmetic, compilation, memory organization and management, debugging, hardware, and I/O. Prerequisite: 106B or X, and consent of instructor. There is a $75 required course fee.", "courseAttributes": "Terms: Aut, Win | Units: 3-5 | UG Reqs: WAY-FR | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Computer Systems from the Ground Up", "courseNumber": "CS 107E:", "courseDescription": "Introduction to the fundamental concepts of computer systems through bare metal programming on the Raspberry Pi. Explores how five concepts come together in computer systems: hardware, architecture, assembly code, the C language, and software development tools. Students do all programming with a Raspberry Pi kit and several add-ons (LEDs, buttons). Topics covered include: the C programming language, data representation, machine-level code, computer arithmetic, compilation, memory organization and management, debugging, hardware, and I/O. Prerequisite: 106B or X, and consent of instructor. There is a $75 required course fee.", "courseAttributes": "Terms: Aut, Win | Units: 3-5 | UG Reqs: WAY-FR | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Computer Systems from the Ground Up", "courseNumber": "CS 107E:", "courseDescription": "Introduction to the fundamental concepts of computer systems through bare metal programming on the Raspberry Pi. Explores how five concepts come together in computer systems: hardware, architecture, assembly code, the C language, and software development tools. Students do all programming with a Raspberry Pi kit and several add-ons (LEDs, buttons). Topics covered include: the C programming language, data representation, machine-level code, computer arithmetic, compilation, memory organization and management, debugging, hardware, and I/O. Prerequisite: 106B or X, and consent of instructor. There is a $75 required course fee.", "courseAttributes": "Terms: Aut, Win | Units: 3-5 | UG Reqs: WAY-FR | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Computer Systems from the Ground Up", "courseNumber": "CS 107E:", "courseDescription": "Introduction to the fundamental concepts of computer systems through bare metal programming on the Raspberry Pi. Explores how five concepts come together in computer systems: hardware, architecture, assembly code, the C language, and software development tools. Students do all programming with a Raspberry Pi kit and several add-ons (LEDs, buttons). Topics covered include: the C programming language, data representation, machine-level code, computer arithmetic, compilation, memory organization and management, debugging, hardware, and I/O. Prerequisite: 106B or X, and consent of instructor. There is a $75 required course fee.", "courseAttributes": "Terms: Aut, Win | Units: 3-5 | UG Reqs: WAY-FR | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Computer Systems from the Ground Up", "courseNumber": "CS 107E:", "courseDescription": "Introduction to the fundamental concepts of computer systems through bare metal programming on the Raspberry Pi. Explores how five concepts come together in computer systems: hardware, architecture, assembly code, the C language, and software development tools. Students do all programming with a Raspberry Pi kit and several add-ons (LEDs, buttons). Topics covered include: the C programming language, data representation, machine-level code, computer arithmetic, compilation, memory organization and management, debugging, hardware, and I/O. Prerequisite: 106B or X, and consent of instructor. There is a $75 required course fee.", "courseAttributes": "Terms: Aut, Win | Units: 3-5 | UG Reqs: WAY-FR | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Computer Systems from the Ground Up", "courseNumber": "CS 107E:", "courseDescription": "Introduction to the fundamental concepts of computer systems through bare metal programming on the Raspberry Pi. Explores how five concepts come together in computer systems: hardware, architecture, assembly code, the C language, and software development tools. Students do all programming with a Raspberry Pi kit and several add-ons (LEDs, buttons). Topics covered include: the C programming language, data representation, machine-level code, computer arithmetic, compilation, memory organization and management, debugging, hardware, and I/O. Prerequisite: 106B or X, and consent of instructor. There is a $75 required course fee.", "courseAttributes": "Terms: Aut, Win | Units: 3-5 | UG Reqs: WAY-FR | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Computer Systems from the Ground Up", "courseNumber": "CS 107E:", "courseDescription": "Introduction to the fundamental concepts of computer systems through bare metal programming on the Raspberry Pi. Explores how five concepts come together in computer systems: hardware, architecture, assembly code, the C language, and software development tools. Students do all programming with a Raspberry Pi kit and several add-ons (LEDs, buttons). Topics covered include: the C programming language, data representation, machine-level code, computer arithmetic, compilation, memory organization and management, debugging, hardware, and I/O. Prerequisite: 106B or X, and consent of instructor. There is a $75 required course fee.", "courseAttributes": "Terms: Aut, Win | Units: 3-5 | UG Reqs: WAY-FR | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Computer Systems from the Ground Up", "courseNumber": "CS 107E:", "courseDescription": "Introduction to the fundamental concepts of computer systems through bare metal programming on the Raspberry Pi. Explores how five concepts come together in computer systems: hardware, architecture, assembly code, the C language, and software development tools. Students do all programming with a Raspberry Pi kit and several add-ons (LEDs, buttons). Topics covered include: the C programming language, data representation, machine-level code, computer arithmetic, compilation, memory organization and management, debugging, hardware, and I/O. Prerequisite: 106B or X, and consent of instructor. There is a $75 required course fee.", "courseAttributes": "Terms: Aut, Win | Units: 3-5 | UG Reqs: WAY-FR | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Computer Systems from the Ground Up", "courseNumber": "CS 107E:", "courseDescription": "Introduction to the fundamental concepts of computer systems through bare metal programming on the Raspberry Pi. Explores how five concepts come together in computer systems: hardware, architecture, assembly code, the C language, and software development tools. Students do all programming with a Raspberry Pi kit and several add-ons (LEDs, buttons). Topics covered include: the C programming language, data representation, machine-level code, computer arithmetic, compilation, memory organization and management, debugging, hardware, and I/O. Prerequisite: 106B or X, and consent of instructor. There is a $75 required course fee.", "courseAttributes": "Terms: Aut, Win | Units: 3-5 | UG Reqs: WAY-FR | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Computer Systems from the Ground Up", "courseNumber": "CS 107E:", "courseDescription": "Introduction to the fundamental concepts of computer systems through bare metal programming on the Raspberry Pi. Explores how five concepts come together in computer systems: hardware, architecture, assembly code, the C language, and software development tools. Students do all programming with a Raspberry Pi kit and several add-ons (LEDs, buttons). Topics covered include: the C programming language, data representation, machine-level code, computer arithmetic, compilation, memory organization and management, debugging, hardware, and I/O. Prerequisite: 106B or X, and consent of instructor. There is a $75 required course fee.", "courseAttributes": "Terms: Aut, Win | Units: 3-5 | UG Reqs: WAY-FR | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Computer Systems from the Ground Up", "courseNumber": "CS 107E:", "courseDescription": "Introduction to the fundamental concepts of computer systems through bare metal programming on the Raspberry Pi. Explores how five concepts come together in computer systems: hardware, architecture, assembly code, the C language, and software development tools. Students do all programming with a Raspberry Pi kit and several add-ons (LEDs, buttons). Topics covered include: the C programming language, data representation, machine-level code, computer arithmetic, compilation, memory organization and management, debugging, hardware, and I/O. Prerequisite: 106B or X, and consent of instructor. There is a $75 required course fee.", "courseAttributes": "Terms: Aut, Win | Units: 3-5 | UG Reqs: WAY-FR | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Computer Systems from the Ground Up", "courseNumber": "CS 107E:", "courseDescription": "Introduction to the fundamental concepts of computer systems through bare metal programming on the Raspberry Pi. Explores how five concepts come together in computer systems: hardware, architecture, assembly code, the C language, and software development tools. Students do all programming with a Raspberry Pi kit and several add-ons (LEDs, buttons). Topics covered include: the C programming language, data representation, machine-level code, computer arithmetic, compilation, memory organization and management, debugging, hardware, and I/O. Prerequisite: 106B or X, and consent of instructor. There is a $75 required course fee.", "courseAttributes": "Terms: Aut, Win | Units: 3-5 | UG Reqs: WAY-FR | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Computer Systems from the Ground Up", "courseNumber": "CS 107E:", "courseDescription": "Introduction to the fundamental concepts of computer systems through bare metal programming on the Raspberry Pi. Explores how five concepts come together in computer systems: hardware, architecture, assembly code, the C language, and software development tools. Students do all programming with a Raspberry Pi kit and several add-ons (LEDs, buttons). Topics covered include: the C programming language, data representation, machine-level code, computer arithmetic, compilation, memory organization and management, debugging, hardware, and I/O. Prerequisite: 106B or X, and consent of instructor. There is a $75 required course fee.", "courseAttributes": "Terms: Aut, Win | Units: 3-5 | UG Reqs: WAY-FR | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Computer Systems from the Ground Up", "courseNumber": "CS 107E:", "courseDescription": "Introduction to the fundamental concepts of computer systems through bare metal programming on the Raspberry Pi. Explores how five concepts come together in computer systems: hardware, architecture, assembly code, the C language, and software development tools. Students do all programming with a Raspberry Pi kit and several add-ons (LEDs, buttons). Topics covered include: the C programming language, data representation, machine-level code, computer arithmetic, compilation, memory organization and management, debugging, hardware, and I/O. Prerequisite: 106B or X, and consent of instructor. There is a $75 required course fee.", "courseAttributes": "Terms: Aut, Win | Units: 3-5 | UG Reqs: WAY-FR | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Computer Systems from the Ground Up", "courseNumber": "CS 107E:", "courseDescription": "Introduction to the fundamental concepts of computer systems through bare metal programming on the Raspberry Pi. Explores how five concepts come together in computer systems: hardware, architecture, assembly code, the C language, and software development tools. Students do all programming with a Raspberry Pi kit and several add-ons (LEDs, buttons). Topics covered include: the C programming language, data representation, machine-level code, computer arithmetic, compilation, memory organization and management, debugging, hardware, and I/O. Prerequisite: 106B or X, and consent of instructor. There is a $75 required course fee.", "courseAttributes": "Terms: Aut, Win | Units: 3-5 | UG Reqs: WAY-FR | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Computer Systems from the Ground Up", "courseNumber": "CS 107E:", "courseDescription": "Introduction to the fundamental concepts of computer systems through bare metal programming on the Raspberry Pi. Explores how five concepts come together in computer systems: hardware, architecture, assembly code, the C language, and software development tools. Students do all programming with a Raspberry Pi kit and several add-ons (LEDs, buttons). Topics covered include: the C programming language, data representation, machine-level code, computer arithmetic, compilation, memory organization and management, debugging, hardware, and I/O. Prerequisite: 106B or X, and consent of instructor. There is a $75 required course fee.", "courseAttributes": "Terms: Aut, Win | Units: 3-5 | UG Reqs: WAY-FR | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Computer Systems from the Ground Up", "courseNumber": "CS 107E:", "courseDescription": "Introduction to the fundamental concepts of computer systems through bare metal programming on the Raspberry Pi. Explores how five concepts come together in computer systems: hardware, architecture, assembly code, the C language, and software development tools. Students do all programming with a Raspberry Pi kit and several add-ons (LEDs, buttons). Topics covered include: the C programming language, data representation, machine-level code, computer arithmetic, compilation, memory organization and management, debugging, hardware, and I/O. Prerequisite: 106B or X, and consent of instructor. There is a $75 required course fee.", "courseAttributes": "Terms: Aut, Win | Units: 3-5 | UG Reqs: WAY-FR | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Computer Systems from the Ground Up", "courseNumber": "CS 107E:", "courseDescription": "Introduction to the fundamental concepts of computer systems through bare metal programming on the Raspberry Pi. Explores how five concepts come together in computer systems: hardware, architecture, assembly code, the C language, and software development tools. Students do all programming with a Raspberry Pi kit and several add-ons (LEDs, buttons). Topics covered include: the C programming language, data representation, machine-level code, computer arithmetic, compilation, memory organization and management, debugging, hardware, and I/O. Prerequisite: 106B or X, and consent of instructor. There is a $75 required course fee.", "courseAttributes": "Terms: Aut, Win | Units: 3-5 | UG Reqs: WAY-FR | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Computer Systems from the Ground Up", "courseNumber": "CS 107E:", "courseDescription": "Introduction to the fundamental concepts of computer systems through bare metal programming on the Raspberry Pi. Explores how five concepts come together in computer systems: hardware, architecture, assembly code, the C language, and software development tools. Students do all programming with a Raspberry Pi kit and several add-ons (LEDs, buttons). Topics covered include: the C programming language, data representation, machine-level code, computer arithmetic, compilation, memory organization and management, debugging, hardware, and I/O. Prerequisite: 106B or X, and consent of instructor. There is a $75 required course fee.", "courseAttributes": "Terms: Aut, Win | Units: 3-5 | UG Reqs: WAY-FR | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Computer Systems from the Ground Up", "courseNumber": "CS 107E:", "courseDescription": "Introduction to the fundamental concepts of computer systems through bare metal programming on the Raspberry Pi. Explores how five concepts come together in computer systems: hardware, architecture, assembly code, the C language, and software development tools. Students do all programming with a Raspberry Pi kit and several add-ons (LEDs, buttons). Topics covered include: the C programming language, data representation, machine-level code, computer arithmetic, compilation, memory organization and management, debugging, hardware, and I/O. Prerequisite: 106B or X, and consent of instructor. There is a $75 required course fee.", "courseAttributes": "Terms: Aut, Win | Units: 3-5 | UG Reqs: WAY-FR | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Computer Systems from the Ground Up", "courseNumber": "CS 107E:", "courseDescription": "Introduction to the fundamental concepts of computer systems through bare metal programming on the Raspberry Pi. Explores how five concepts come together in computer systems: hardware, architecture, assembly code, the C language, and software development tools. Students do all programming with a Raspberry Pi kit and several add-ons (LEDs, buttons). Topics covered include: the C programming language, data representation, machine-level code, computer arithmetic, compilation, memory organization and management, debugging, hardware, and I/O. Prerequisite: 106B or X, and consent of instructor. There is a $75 required course fee.", "courseAttributes": "Terms: Aut, Win | Units: 3-5 | UG Reqs: WAY-FR | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Computer Systems from the Ground Up", "courseNumber": "CS 107E:", "courseDescription": "Introduction to the fundamental concepts of computer systems through bare metal programming on the Raspberry Pi. Explores how five concepts come together in computer systems: hardware, architecture, assembly code, the C language, and software development tools. Students do all programming with a Raspberry Pi kit and several add-ons (LEDs, buttons). Topics covered include: the C programming language, data representation, machine-level code, computer arithmetic, compilation, memory organization and management, debugging, hardware, and I/O. Prerequisite: 106B or X, and consent of instructor. There is a $75 required course fee.", "courseAttributes": "Terms: Aut, Win | Units: 3-5 | UG Reqs: WAY-FR | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Computer Systems from the Ground Up", "courseNumber": "CS 107E:", "courseDescription": "Introduction to the fundamental concepts of computer systems through bare metal programming on the Raspberry Pi. Explores how five concepts come together in computer systems: hardware, architecture, assembly code, the C language, and software development tools. Students do all programming with a Raspberry Pi kit and several add-ons (LEDs, buttons). Topics covered include: the C programming language, data representation, machine-level code, computer arithmetic, compilation, memory organization and management, debugging, hardware, and I/O. Prerequisite: 106B or X, and consent of instructor. There is a $75 required course fee.", "courseAttributes": "Terms: Aut, Win | Units: 3-5 | UG Reqs: WAY-FR | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Computer Systems from the Ground Up", "courseNumber": "CS 107E:", "courseDescription": "Introduction to the fundamental concepts of computer systems through bare metal programming on the Raspberry Pi. Explores how five concepts come together in computer systems: hardware, architecture, assembly code, the C language, and software development tools. Students do all programming with a Raspberry Pi kit and several add-ons (LEDs, buttons). Topics covered include: the C programming language, data representation, machine-level code, computer arithmetic, compilation, memory organization and management, debugging, hardware, and I/O. Prerequisite: 106B or X, and consent of instructor. There is a $75 required course fee.", "courseAttributes": "Terms: Aut, Win | Units: 3-5 | UG Reqs: WAY-FR | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Computer Systems from the Ground Up", "courseNumber": "CS 107E:", "courseDescription": "Introduction to the fundamental concepts of computer systems through bare metal programming on the Raspberry Pi. Explores how five concepts come together in computer systems: hardware, architecture, assembly code, the C language, and software development tools. Students do all programming with a Raspberry Pi kit and several add-ons (LEDs, buttons). Topics covered include: the C programming language, data representation, machine-level code, computer arithmetic, compilation, memory organization and management, debugging, hardware, and I/O. Prerequisite: 106B or X, and consent of instructor. There is a $75 required course fee.", "courseAttributes": "Terms: Aut, Win | Units: 3-5 | UG Reqs: WAY-FR | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Computer Systems from the Ground Up", "courseNumber": "CS 107E:", "courseDescription": "Introduction to the fundamental concepts of computer systems through bare metal programming on the Raspberry Pi. Explores how five concepts come together in computer systems: hardware, architecture, assembly code, the C language, and software development tools. Students do all programming with a Raspberry Pi kit and several add-ons (LEDs, buttons). Topics covered include: the C programming language, data representation, machine-level code, computer arithmetic, compilation, memory organization and management, debugging, hardware, and I/O. Prerequisite: 106B or X, and consent of instructor. There is a $75 required course fee.", "courseAttributes": "Terms: Aut, Win | Units: 3-5 | UG Reqs: WAY-FR | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Computer Systems from the Ground Up", "courseNumber": "CS 107E:", "courseDescription": "Introduction to the fundamental concepts of computer systems through bare metal programming on the Raspberry Pi. Explores how five concepts come together in computer systems: hardware, architecture, assembly code, the C language, and software development tools. Students do all programming with a Raspberry Pi kit and several add-ons (LEDs, buttons). Topics covered include: the C programming language, data representation, machine-level code, computer arithmetic, compilation, memory organization and management, debugging, hardware, and I/O. Prerequisite: 106B or X, and consent of instructor. There is a $75 required course fee.", "courseAttributes": "Terms: Aut, Win | Units: 3-5 | UG Reqs: WAY-FR | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Computer Systems from the Ground Up", "courseNumber": "CS 107E:", "courseDescription": "Introduction to the fundamental concepts of computer systems through bare metal programming on the Raspberry Pi. Explores how five concepts come together in computer systems: hardware, architecture, assembly code, the C language, and software development tools. Students do all programming with a Raspberry Pi kit and several add-ons (LEDs, buttons). Topics covered include: the C programming language, data representation, machine-level code, computer arithmetic, compilation, memory organization and management, debugging, hardware, and I/O. Prerequisite: 106B or X, and consent of instructor. There is a $75 required course fee.", "courseAttributes": "Terms: Aut, Win | Units: 3-5 | UG Reqs: WAY-FR | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Computer Systems from the Ground Up", "courseNumber": "CS 107E:", "courseDescription": "Introduction to the fundamental concepts of computer systems through bare metal programming on the Raspberry Pi. Explores how five concepts come together in computer systems: hardware, architecture, assembly code, the C language, and software development tools. Students do all programming with a Raspberry Pi kit and several add-ons (LEDs, buttons). Topics covered include: the C programming language, data representation, machine-level code, computer arithmetic, compilation, memory organization and management, debugging, hardware, and I/O. Prerequisite: 106B or X, and consent of instructor. There is a $75 required course fee.", "courseAttributes": "Terms: Aut, Win | Units: 3-5 | UG Reqs: WAY-FR | Grading: Letter or Credit/No Credit"}]}}
{"Tengyu Ma": {"courses": [{"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}]}}
{"Sachin Katti": {"courses": [{"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}]}}
{"Zakir Durumeric": {"courses": [{"courseTitle": "Computer and Network Security", "courseNumber": "CS 155:", "courseDescription": "For seniors and first-year graduate students. Principles of computer systems security. Attack techniques and how to defend against them. Topics include: network attacks and defenses, operating system security, application security (web, apps, databases), malware, privacy, and security for mobile devices. Course projects focus on building reliable code. Prerequisite: 110. Recommended: basic Unix.", "courseAttributes": "Terms: Spr | Units: 3 | UG Reqs: GER:DB-EngrAppSci | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Computer and Network Security", "courseNumber": "CS 155:", "courseDescription": "For seniors and first-year graduate students. Principles of computer systems security. Attack techniques and how to defend against them. Topics include: network attacks and defenses, operating system security, application security (web, apps, databases), malware, privacy, and security for mobile devices. Course projects focus on building reliable code. Prerequisite: 110. Recommended: basic Unix.", "courseAttributes": "Terms: Spr | Units: 3 | UG Reqs: GER:DB-EngrAppSci | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Computer and Network Security", "courseNumber": "CS 155:", "courseDescription": "For seniors and first-year graduate students. Principles of computer systems security. Attack techniques and how to defend against them. Topics include: network attacks and defenses, operating system security, application security (web, apps, databases), malware, privacy, and security for mobile devices. Course projects focus on building reliable code. Prerequisite: 110. Recommended: basic Unix.", "courseAttributes": "Terms: Spr | Units: 3 | UG Reqs: GER:DB-EngrAppSci | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Computer and Network Security", "courseNumber": "CS 155:", "courseDescription": "For seniors and first-year graduate students. Principles of computer systems security. Attack techniques and how to defend against them. Topics include: network attacks and defenses, operating system security, application security (web, apps, databases), malware, privacy, and security for mobile devices. Course projects focus on building reliable code. Prerequisite: 110. Recommended: basic Unix.", "courseAttributes": "Terms: Spr | Units: 3 | UG Reqs: GER:DB-EngrAppSci | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Computer and Network Security", "courseNumber": "CS 155:", "courseDescription": "For seniors and first-year graduate students. Principles of computer systems security. Attack techniques and how to defend against them. Topics include: network attacks and defenses, operating system security, application security (web, apps, databases), malware, privacy, and security for mobile devices. Course projects focus on building reliable code. Prerequisite: 110. Recommended: basic Unix.", "courseAttributes": "Terms: Spr | Units: 3 | UG Reqs: GER:DB-EngrAppSci | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Computer and Network Security", "courseNumber": "CS 155:", "courseDescription": "For seniors and first-year graduate students. Principles of computer systems security. Attack techniques and how to defend against them. Topics include: network attacks and defenses, operating system security, application security (web, apps, databases), malware, privacy, and security for mobile devices. Course projects focus on building reliable code. Prerequisite: 110. Recommended: basic Unix.", "courseAttributes": "Terms: Spr | Units: 3 | UG Reqs: GER:DB-EngrAppSci | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Computer and Network Security", "courseNumber": "CS 155:", "courseDescription": "For seniors and first-year graduate students. Principles of computer systems security. Attack techniques and how to defend against them. Topics include: network attacks and defenses, operating system security, application security (web, apps, databases), malware, privacy, and security for mobile devices. Course projects focus on building reliable code. Prerequisite: 110. Recommended: basic Unix.", "courseAttributes": "Terms: Spr | Units: 3 | UG Reqs: GER:DB-EngrAppSci | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Computer and Network Security", "courseNumber": "CS 155:", "courseDescription": "For seniors and first-year graduate students. Principles of computer systems security. Attack techniques and how to defend against them. Topics include: network attacks and defenses, operating system security, application security (web, apps, databases), malware, privacy, and security for mobile devices. Course projects focus on building reliable code. Prerequisite: 110. Recommended: basic Unix.", "courseAttributes": "Terms: Spr | Units: 3 | UG Reqs: GER:DB-EngrAppSci | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Computer and Network Security", "courseNumber": "CS 155:", "courseDescription": "For seniors and first-year graduate students. Principles of computer systems security. Attack techniques and how to defend against them. Topics include: network attacks and defenses, operating system security, application security (web, apps, databases), malware, privacy, and security for mobile devices. Course projects focus on building reliable code. Prerequisite: 110. Recommended: basic Unix.", "courseAttributes": "Terms: Spr | Units: 3 | UG Reqs: GER:DB-EngrAppSci | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Computer and Network Security", "courseNumber": "CS 155:", "courseDescription": "For seniors and first-year graduate students. Principles of computer systems security. Attack techniques and how to defend against them. Topics include: network attacks and defenses, operating system security, application security (web, apps, databases), malware, privacy, and security for mobile devices. Course projects focus on building reliable code. Prerequisite: 110. Recommended: basic Unix.", "courseAttributes": "Terms: Spr | Units: 3 | UG Reqs: GER:DB-EngrAppSci | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Computer and Network Security", "courseNumber": "CS 155:", "courseDescription": "For seniors and first-year graduate students. Principles of computer systems security. Attack techniques and how to defend against them. Topics include: network attacks and defenses, operating system security, application security (web, apps, databases), malware, privacy, and security for mobile devices. Course projects focus on building reliable code. Prerequisite: 110. Recommended: basic Unix.", "courseAttributes": "Terms: Spr | Units: 3 | UG Reqs: GER:DB-EngrAppSci | Grading: Letter or Credit/No Credit"}]}}
{"Silvio Savarese": {"courses": [{"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}]}}
{"Stefano Ermon": {"courses": [{"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}]}}
{"Serafim Batzoglou": {"courses": [{"courseTitle": "Bioengineering Problems and Experimental Investigation", "courseNumber": "BIOE 191:", "courseDescription": "Directed study and research for undergraduates on a subject of mutual interest to student and instructor. Prerequisites: consent of instructor and adviser. (Staff)", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-5 | Repeatable for credit | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Bioengineering Problems and Experimental Investigation", "courseNumber": "BIOE 191:", "courseDescription": "Directed study and research for undergraduates on a subject of mutual interest to student and instructor. Prerequisites: consent of instructor and adviser. (Staff)", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-5 | Repeatable for credit | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Bioengineering Problems and Experimental Investigation", "courseNumber": "BIOE 191:", "courseDescription": "Directed study and research for undergraduates on a subject of mutual interest to student and instructor. Prerequisites: consent of instructor and adviser. (Staff)", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-5 | Repeatable for credit | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Bioengineering Problems and Experimental Investigation", "courseNumber": "BIOE 191:", "courseDescription": "Directed study and research for undergraduates on a subject of mutual interest to student and instructor. Prerequisites: consent of instructor and adviser. (Staff)", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-5 | Repeatable for credit | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Bioengineering Problems and Experimental Investigation", "courseNumber": "BIOE 191:", "courseDescription": "Directed study and research for undergraduates on a subject of mutual interest to student and instructor. Prerequisites: consent of instructor and adviser. (Staff)", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-5 | Repeatable for credit | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Bioengineering Problems and Experimental Investigation", "courseNumber": "BIOE 191:", "courseDescription": "Directed study and research for undergraduates on a subject of mutual interest to student and instructor. Prerequisites: consent of instructor and adviser. (Staff)", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-5 | Repeatable for credit | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Bioengineering Problems and Experimental Investigation", "courseNumber": "BIOE 191:", "courseDescription": "Directed study and research for undergraduates on a subject of mutual interest to student and instructor. Prerequisites: consent of instructor and adviser. (Staff)", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-5 | Repeatable for credit | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Bioengineering Problems and Experimental Investigation", "courseNumber": "BIOE 191:", "courseDescription": "Directed study and research for undergraduates on a subject of mutual interest to student and instructor. Prerequisites: consent of instructor and adviser. (Staff)", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-5 | Repeatable for credit | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Bioengineering Problems and Experimental Investigation", "courseNumber": "BIOE 191:", "courseDescription": "Directed study and research for undergraduates on a subject of mutual interest to student and instructor. Prerequisites: consent of instructor and adviser. (Staff)", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-5 | Repeatable for credit | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Bioengineering Problems and Experimental Investigation", "courseNumber": "BIOE 191:", "courseDescription": "Directed study and research for undergraduates on a subject of mutual interest to student and instructor. Prerequisites: consent of instructor and adviser. (Staff)", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-5 | Repeatable for credit | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Bioengineering Problems and Experimental Investigation", "courseNumber": "BIOE 191:", "courseDescription": "Directed study and research for undergraduates on a subject of mutual interest to student and instructor. Prerequisites: consent of instructor and adviser. (Staff)", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-5 | Repeatable for credit | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Bioengineering Problems and Experimental Investigation", "courseNumber": "BIOE 191:", "courseDescription": "Directed study and research for undergraduates on a subject of mutual interest to student and instructor. Prerequisites: consent of instructor and adviser. (Staff)", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-5 | Repeatable for credit | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Bioengineering Problems and Experimental Investigation", "courseNumber": "BIOE 191:", "courseDescription": "Directed study and research for undergraduates on a subject of mutual interest to student and instructor. Prerequisites: consent of instructor and adviser. (Staff)", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-5 | Repeatable for credit | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Bioengineering Problems and Experimental Investigation", "courseNumber": "BIOE 191:", "courseDescription": "Directed study and research for undergraduates on a subject of mutual interest to student and instructor. Prerequisites: consent of instructor and adviser. (Staff)", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-5 | Repeatable for credit | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Bioengineering Problems and Experimental Investigation", "courseNumber": "BIOE 191:", "courseDescription": "Directed study and research for undergraduates on a subject of mutual interest to student and instructor. Prerequisites: consent of instructor and adviser. (Staff)", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-5 | Repeatable for credit | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Bioengineering Problems and Experimental Investigation", "courseNumber": "BIOE 191:", "courseDescription": "Directed study and research for undergraduates on a subject of mutual interest to student and instructor. Prerequisites: consent of instructor and adviser. (Staff)", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-5 | Repeatable for credit | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Bioengineering Problems and Experimental Investigation", "courseNumber": "BIOE 191:", "courseDescription": "Directed study and research for undergraduates on a subject of mutual interest to student and instructor. Prerequisites: consent of instructor and adviser. (Staff)", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-5 | Repeatable for credit | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Bioengineering Problems and Experimental Investigation", "courseNumber": "BIOE 191:", "courseDescription": "Directed study and research for undergraduates on a subject of mutual interest to student and instructor. Prerequisites: consent of instructor and adviser. (Staff)", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-5 | Repeatable for credit | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Bioengineering Problems and Experimental Investigation", "courseNumber": "BIOE 191:", "courseDescription": "Directed study and research for undergraduates on a subject of mutual interest to student and instructor. Prerequisites: consent of instructor and adviser. (Staff)", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-5 | Repeatable for credit | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Bioengineering Problems and Experimental Investigation", "courseNumber": "BIOE 191:", "courseDescription": "Directed study and research for undergraduates on a subject of mutual interest to student and instructor. Prerequisites: consent of instructor and adviser. (Staff)", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-5 | Repeatable for credit | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Bioengineering Problems and Experimental Investigation", "courseNumber": "BIOE 191:", "courseDescription": "Directed study and research for undergraduates on a subject of mutual interest to student and instructor. Prerequisites: consent of instructor and adviser. (Staff)", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-5 | Repeatable for credit | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Bioengineering Problems and Experimental Investigation", "courseNumber": "BIOE 191:", "courseDescription": "Directed study and research for undergraduates on a subject of mutual interest to student and instructor. Prerequisites: consent of instructor and adviser. (Staff)", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-5 | Repeatable for credit | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Bioengineering Problems and Experimental Investigation", "courseNumber": "BIOE 191:", "courseDescription": "Directed study and research for undergraduates on a subject of mutual interest to student and instructor. Prerequisites: consent of instructor and adviser. (Staff)", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-5 | Repeatable for credit | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Bioengineering Problems and Experimental Investigation", "courseNumber": "BIOE 191:", "courseDescription": "Directed study and research for undergraduates on a subject of mutual interest to student and instructor. Prerequisites: consent of instructor and adviser. (Staff)", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-5 | Repeatable for credit | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Bioengineering Problems and Experimental Investigation", "courseNumber": "BIOE 191:", "courseDescription": "Directed study and research for undergraduates on a subject of mutual interest to student and instructor. Prerequisites: consent of instructor and adviser. (Staff)", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-5 | Repeatable for credit | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Bioengineering Problems and Experimental Investigation", "courseNumber": "BIOE 191:", "courseDescription": "Directed study and research for undergraduates on a subject of mutual interest to student and instructor. Prerequisites: consent of instructor and adviser. (Staff)", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-5 | Repeatable for credit | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Bioengineering Problems and Experimental Investigation", "courseNumber": "BIOE 191:", "courseDescription": "Directed study and research for undergraduates on a subject of mutual interest to student and instructor. Prerequisites: consent of instructor and adviser. (Staff)", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-5 | Repeatable for credit | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Bioengineering Problems and Experimental Investigation", "courseNumber": "BIOE 191:", "courseDescription": "Directed study and research for undergraduates on a subject of mutual interest to student and instructor. Prerequisites: consent of instructor and adviser. (Staff)", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-5 | Repeatable for credit | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Bioengineering Problems and Experimental Investigation", "courseNumber": "BIOE 191:", "courseDescription": "Directed study and research for undergraduates on a subject of mutual interest to student and instructor. Prerequisites: consent of instructor and adviser. (Staff)", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-5 | Repeatable for credit | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Bioengineering Problems and Experimental Investigation", "courseNumber": "BIOE 191:", "courseDescription": "Directed study and research for undergraduates on a subject of mutual interest to student and instructor. Prerequisites: consent of instructor and adviser. (Staff)", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-5 | Repeatable for credit | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Bioengineering Problems and Experimental Investigation", "courseNumber": "BIOE 191:", "courseDescription": "Directed study and research for undergraduates on a subject of mutual interest to student and instructor. Prerequisites: consent of instructor and adviser. (Staff)", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-5 | Repeatable for credit | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Bioengineering Problems and Experimental Investigation", "courseNumber": "BIOE 191:", "courseDescription": "Directed study and research for undergraduates on a subject of mutual interest to student and instructor. Prerequisites: consent of instructor and adviser. (Staff)", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-5 | Repeatable for credit | Grading: Letter or Credit/No Credit"}, {"courseTitle": "Bioengineering Problems and Experimental Investigation", "courseNumber": "BIOE 191:", "courseDescription": "Directed study and research for undergraduates on a subject of mutual interest to student and instructor. Prerequisites: consent of instructor and adviser. (Staff)", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-5 | Repeatable for credit | Grading: Letter or Credit/No Credit"}]}}
{"Yoav Shoham": {"courses": [{"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}, {"courseTitle": "Senior Project", "courseNumber": "CS 191:", "courseDescription": "Restricted to Computer Science and Computer Systems Engineering students. Group or individual projects under faculty direction. Register using instructor's section number. A project can be either a significant software application or publishable research. Software application projects include substantial programming and modern user-interface technologies and are comparable in scale to shareware programs or commercial applications. Research projects may result in a paper publishable in an academic journal or presentable at a conference. Required public presentation of final application or research results. Prerequisite: Completion of at least 135 units.", "courseAttributes": "Terms: Aut, Win, Spr, Sum | Units: 1-6 | Repeatable for credit | Grading: Letter (ABCD/NP)"}]}}
